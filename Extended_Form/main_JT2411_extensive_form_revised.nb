(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    457876,      10223]
NotebookOptionsPosition[    446846,      10061]
NotebookOutlinePosition[    447294,      10079]
CellTagsIndexPosition[    447251,      10076]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["A Quantum-Like for the International Interaction Game", "Title",
 CellChangeTimes->{{3.901469939660698*^9, 
  3.9014699600327873`*^9}},ExpressionUUID->"c1042fb1-f1b4-4593-a5ef-\
dd40d4a27210"],

Cell[CellGroupData[{

Cell["The International Interaction Backward Induction Model", "Section",
 CellChangeTimes->{{3.901470010251966*^9, 3.901470016585793*^9}, {
  3.901470048306819*^9, 
  3.901470063385787*^9}},ExpressionUUID->"ec665f0e-1b94-4c88-9520-\
0f4d058ed250"],

Cell[TextData[{
 "Explain here the Signorino  tree based model\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
pKRmzZrxoNuiRQsMmAAAAADSdu/ePUtLS2H7baHDmQIUy4sXL5o0acJTbuvW
rXNMf3b8+PFRo0aN/A6D4gIAAEDBbt++TanVxsbm4sWLly5dCgoK4k+9f/++
ffv27OYy3v82MzNTxNKCsqLrJqp+VatWZTWtTZs2Fy5ciIyMvHz58g8//KCm
piYctFlLS0tHR2fr1q34NgEAAABymDdv3oQJE/iEU0z9+vXnzJnD7vrZt28f
b1hr1KjRjh07kG9Bqq5evcqHzCWdO3fmNTA3CrqHDh3CHWoAAADA7N6929jY
mN/MngM9XikbmzuVXtmuXbv4+HixSw1lwvnz5zt06CDs+10ATU3Nbdu2oS0X
AAAAiHAS1YJR0qDIIXZ5ocyZOnVqfpdgOairqx8+fBhtuQAAAGXZ58+fx44d
W8QmMlKnTh2EB5A94R2OherZs2dMTIzYRQYAAADRXLhwoYDOjbkNHjwYEReK
JTAwcOHChRkZGSVewsmTJ9XV1YteS4mnp2dRKqqrq+vFixdRpQEAAJSMtbV1
sZKDmpra27dvxS41yE54eHidOnVqlYKpqSnVHBsbm5K9fdeuXRUrVixWLSVm
ZmZFWbimpqahoWHJCpaf8ePHo6c6AACAiM6cOVPcxjEVFZUTJ06g1avscHR0
LFY7P5ChQ4d++fJF7EMHAABQRvn4+AgHuS0KisS4Xb1M4RFXW1u7eun8/vvv
fn5+U6ZMcXBwePTokb/ApUuXrK2t83xXlSpVShAyzc3NfX19R44c+fDhQ1r+
vn378ls+M23aNCrS+vXr6WVjxoyh37dt20a/P3jwgJXQ2dn5xo0b9Iu7u3vu
RdFGsbfr6OjQ2jds2IB/EwAAALEcPXo0xxD6iLiQA4+4O3bsEKX1PjAwsF69
esVtSS5iX1yJ69GjBxXVyckJrbgAAAAi0tbWRsSFArCIu2zZMhEz26hRo4ob
cffv3y9KxPXz81NVVVVRUcGsKAAAACKiAIOICwVgEffIkSMidsA+cOBAcTuN
9+7dW5RMnpycjIgLAAAguuIOGla+fPmNGzfidrOyQx4iLmEz6xX9QuzcuXOi
FDg6OhoRFwAAQHRPnz6tVatW0cND9+7dkW/LFBZxJ06cmJWVJWIx+vTpU/Rr
sdGjR4v1XQPri4uICwAAILpJkyYVMTyUL1/+3LlzYpcXZIrfbpaamipiMS5e
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
c+6Iy1txWcSl65qCm453794tJ0cZiuvq1av8+oX+u3OPOg4AACVz8eLFPCNu
eno6G7+ra9euBd/vU2KUBNq1a8fWbmRkdO7cOWmspQTevXvHEwXlK4mMzZuS
kvLLL7/wbpyGhoaenp6RkZEvX75cvHhxhQoVaKWUUtavX89WbW5uzlov6Y0h
ISFVqlRhb3RxcclvXIscKErRG+Xnq08WcdXU1NatW5c7j4WHh7OIq6enx6Y8
4DfN0RufPn3Kt/o///kP6zJtamrKM56rq6sMMh4fAnfIkCE5ukDTn46Ojnzu
NsrbvDuxs7Mzb7ePiYnp27cvPU4bW69ePX5b/YQJE3hE9/X15eN7sIh7584d
tnPocXd39+DgYDqyFGt5Z2b6P5KfoTOguC5dusT/wTt27IhZzwAAJGLJkiXs
o7VNmzbCG/MPHjzIHqcTtzTWGxUVxdtv9fX1KWlLYy0lQ2Fp4MCBPD5JZMq2
mTNn5m6Ia926NRthQFNT8/Tp08L+z4cOHRJmthkzZuQYUUHhUE1jm0A1bePG
jXwrMjMz6TqCD1vH+uLS4+fPn6e4y/cV33Bvb29+JxdDWVEGtwfevXuXrjto
dTo6OhSzcx8FJycntoFt27alvMpbYlnKvXr16ufPn3v27Mke1NXVpauPfv36
sT9r1arl5+fHljl9+nT+RhZxw8LCWMSdOnWqsLH66NGj7PGaNWtSMFbQigFk
3rx57FBWqlQJs54BAEgE76hQLnu23BfZdu7cyduXKH9S2JDsSmNiYtq3b8/X
e/LkSckuv/Ti4+NHjx7NIxmFk1IukDWJ01b7+/vTT0NDQ2FIo4RDJzUecTt1
6hQbGyt8e+5BwxROaGgon1tETU2t4Xf169fn+6FKlSp8+jbSuHFj/hRdBbDX
CxtvGQMDgxydASSOcvgvv/zCx7DNs1PEmzdv2F2B9JOuUB4/fiw8yvQu4ejT
bm5uVGCeXQnldraBqqqq/GU///wzrSu/iBsREcF6XJuYmFCEVtCKAd+yD2WL
Fi34fBA4mgAApRcVFcXu9iqAxPviUlrgC6cPdjZdlxzig0H169cv99hcxfLr
r7/OmTOHf5t87do1iiVs4Y0aNaL4900wigWtLscJTgki7rfsrWZ3UeWpZs2a
wtkfvmXfZkVVJffYYrmNHDlSqrslODiYZ9H8Ii7hF4ZshuILFy7wLgdClGNZ
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
xMbGcndqlpBSpUrROmJCgyCJS0gCSVyC0DhI4hJikGEu7uTJk79+/cq34QQh
KSRxCUkgiUsQGseOHTsMDQ2laraOjo603KyEsHbtWj09PamqB83FJTQLkriE
JERGRtJcXILQOChpGCEGY2NjyetGs2bNnj9/Tl6d0CCioqIqVaoklXSpUqVK
TEwM34YTKkWGjAqnTp3i22qCKOncuXPH2tpawsZboUKFsLAw0jAlh8uXL9es
WVOS6qGrq7t48WLa/I7QOChpGFEs0OuNGDFC8krSpk2bV69e8W01QRDfr127
VrlyZUma7dGjR0nfljRGjhwpyYzcCRMm0CxcQhPJyspq0KCBhNLFyMiIZmqV
TPLz8yWckVuqVKmVK1dSX0kQakK9evWKjdTZ2Nh8+vSJb0sJlZKZmdmrV69i
1yRWrFjx6tWrNIOF0FDCwsIklLhjxozh21iCN06dOqWrq1tsJZk+fTrpW4JQ
E8C9m5mZFdtsXV1dKeVpScPLy4vpW/hcVDjXwcEhPj6evDqhoaSlpXXo0KFY
HwhNgIb5JZYPHz54e3tLMmsLxvt8G0sQxP/j2LFj5cuXh1ZZuXLlyMjI1atX
Ozs7O/0gODh4165deADw4MEDkjElhylTpmDIwtDQcO3atR8/fnzx4sWFCxca
NWoEdcPf3//p06dz587FYzZu3EgTcQkNBaRLsboFGDVqFN+WEvwAHZ+HhwdW
g549ey4oxJgxY5j6hc/UURKEOsAyKsyePbuoF829evXCY9zc3EjGlBASEhIa
NmyIz71Vq1ZFBfBB+qLELVu2LG36QGgiKSkppUuXhjqsr68fEBAQL6B169a2
Avz8/C5evGhubq4jSAN15MgRvu0leCA5ORmdIYz3g4ODCx8A3m/+/PllypTR
Eay9nThxYm5ururtJAiCsWzZMkx8amNj8+bNm6IOgzEpvq02MjJav349rSoq
CQQGBqJ2rVix4q1bt4oKSmRkZPzxxx/g/KGGTJ06leoGoXGwjApt27Yt6pio
qKiqVavCMeAwKRlUCYQtNHNzcxMToV24cCGL5fr6+lIslyD4AoalLVu2xPZo
Z2cnRpz8999/Hh4erOVu27aNFhZpPRjXAjZt2iQ+dM8CuU5OTgkJCeTVCQ3i
/PnzbCLWjRs3xBz5559/4mG9e/emGbklin///dfExASffnx8vJgjk5KSWHWi
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
kdxy9u/fX65cuYoVK8ow10KDePjwYbNmzcqUKWNhYREfH6+8K33+/LmhoSHe
7Xnz5skQ3lcee/bswXoL1Wby5Mkiw8v5+flgdpMmTWCopVbGE+JRvcTl5jGQ
IToXFhYmp8QdPny4VN4PEar2J06cwNkOJUfifudMVBCTPk5+oGtjSboAqbbN
VQH16tVDwyZOnCimRwCX3rhxY2tra6k2cSMIxZKVlbVs2bL169erIIQ7btw4
1Jbt27cvPENMEmbOnIklCEVxt23bxp2C261bt6lTp077GRgXw5FpaWlt2rSR
NooLghx/zmXv3r0RERFarG8Z27dvByWgvBry4MEDR0dHfChWVlb/H3vfHVfV
0a19UjT23ksMihE7WNDYu8Ze0Nh7jb3F3juKghq7qFhi1KCx94aJHRuCBSyo
2BU0SjTve/me76zrupN9CvscOH2eP/gd9p49e01b86zZa9ZY4iyJJALElfad
QU6LUn0JK4M+PUOf3Lhxwwqvi46OZheFiRMnmuGNYxLFbdWqla6DaLJQ3GfP
nkGRlihRAja+qUVwXKg83SyJADnkUBvLli2zt5DafJRw5syZjcSUS9DOtg8e
PLCaYBISNsSMGTPYpxGEwbxhyxQXGl5cBFZQXL2IjIwEM/nw4QNsT1NXcXUd
FSSSEQEBARzD7dKlS3ZIIKGomZmAPDixa4qrgTeJW2EVNzw8nNwMNNrdbWfP
njUjk65du2pUU9xu3brp3koWiuuaYIo7c+ZMy72lWbNm9JamTZvaoTKEdcNO
CIMGDbJDCSUkrIx79+6xI8HUqVPNpouwH2kbr2K7vXqKm2D6drN8+fKZ5zYs
oQZbt25ld9/GjRvbj9eZiNjYWMhG3SZ9+vQqj/SVsH9Yk+LyOb8arSlnXiZq
tpvBBJsyZYrGAMUdO3ZsotpSAdj4UgGGhYXR4XFZs2Y9fvy4JV6BmXHVqlXk
AZIzZ85bt25Z4i1JBwwo2tn95ZdfYj6VfUPCxeHt7U38FsohKioqKVkdOHAA
KlrhGfvixYsrV65cNgqmJU+ePKE9ayrVe/PmzeWqnYXw9u1bpo5p0qTRPWTZ
frBu3TqQW43WI3f06NFyUcs5QBQ3V65cR48eteiLQANYpTRo0OD9+/fm5aOG
4kLF0Yv0UlwAetgkiqsbUcE1sWPHjpEjR1qI3yZo9SFPTMZPA7E5+Dy4fv36
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
43BVS5cutYq85uDDhw8NGjQgOTt27KiwQY4fP06BZGH729UBXtZHbGws+a6I
J5MyunfvTnWYJ0+eY8eO2UJAuwAIrfHA7KgoV9OHEg4NDHY+fXj58uWKD9+v
X79u3rw53e3UqZM9r+EYj6jw448/2rPwFoLxoGFoWVe2x4nizpgxQ+/a/m+/
/UarFtu2bXPBnkO4p4X9bzVNCvjocLKO02ghntWSP39+ezs9QQQ4PJ3BUaZM
mf379+smqFWrFpXi+vXr1hfPfvDw4UNq0169eumStOfPn1Ow3HTp0vFZeC6I
DRs2GAoa9vnnnw8dOtS5nbolnBJTpkwpW7bs0qVL9S7oxcXFdejQAQl27dpl
z+YbNNj06dPLlStX5t+A5R4ZGemaHvIgJ/fv3x84cGBUVNS9T9i+fbu3t3do
aKjZJ/E5B9BhUBuGYqahq6PqFMeLSDglAgMDDZmBbm5u586ds7WAieDatWuw
1Azdffz4cY0aNYYMGXL8+HFrSmVvePPmzXQt9uzZozfBnTt3KlSoIHecgQlM
1wdfX1+pDCUkJCQkJBwIsAQXL168fv36cB3AxrG1dMmAZ8+euXL4a/WAOeBq
+zUkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk
JCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk
JCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk
JCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk
JCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQUiI6Ovnnz5rt372wtiEE8e/bspg7i
4+PpbmxsLF15+/atRcX48OEDvQjyWPRFdg7qMLdu3bK1IP+HR48eqUz53//+
lxrRovLYOVD8uLg4W0shISEhISFhKWCamzVr1jfffKPRaLp3747ft2/fNi+r
zZs379q1K4ny/M///M8sfahSpYpGByNHjsQjILotW7akKx07dkyiAMYRERFB
L4I8Dx48sOi77Bm1atVCJaRKlQrtZWtZEsC00UOKFy8eGhqqJv26des+++yz
zz//PDg42NKy2Sd27NiB4rdu3fqXX36xhxaUkJCQkJBIXoDfMjlkeHh4vHjx
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
Ije51s0TXB26C4Mj0uoAEQZQli1y9icbaAdEtntxBVpPNZUuivPo0aP4avbF
ixeVVgZXMdwr0G41hJpCCHS4zQHize4cIG1tbYhpday9HZSIlt7eXhsh4gkC
QNPqV+3FRT4K1Dk+cvz4cQRaC6VQdwiRjtq5c6fSavk6G5DTtnjcnwzlaQPZ
UaHEFEJfcpbz588reYT+/n6msuoxf+rr65HWuo5Fm6OOcXNe6XATESLTq1e2
DNEm1nE2yqwWa2pqiie8e/cuf8UMK2O26Gk8D2hNOiAyUw3rEayyspLKvKGh
QTGPHj2KtDyhSYmbDvs5i2pteqCrnD17Vglxa3Sb1Gjt7e2q49WrVxH52bNn
COHm4Yz9HMVmkrq6uozlv3DhAjMcqWccx3Ecx3Ec5/8Npjwya4BJiuZxUKeY
GiQSCYRXVFT4TgDHcRzHcRznT6Grq8vuRl69enVDiIxIQ9+6TzHHcRzHcRzn
z6Knp8eeTRPjxo2bOXOmPKo4juM4juM4zh9EMplcu3ZtVUhBQcG8efPwD+3u
/u6iOY7jOI7jOM6/5d69exmPXjqO4ziO4ziO4ziO4ziO4ziO4ziO81v4B+qV
jSc=
     "], {{0, 471.}, {696.75, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{96., 96.},
     RasterInterpolation->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{402.75, Automatic},
   ImageSizeRaw->{696.75, 471.},
   PlotRange->{{0, 696.75}, {0, 471.}}]], "Input",ExpressionUUID->
  "b5e01df6-6ea2-41c9-ac81-fc4a52e98aed"]
}], "Text",
 CellChangeTimes->{{3.9014700346546593`*^9, 3.9014700686706533`*^9}, {
  3.94026115467999*^9, 
  3.9402611554866962`*^9}},ExpressionUUID->"3d93a3b2-b86f-411f-a986-\
336e290898c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classical Approach", "Section",
 CellChangeTimes->{{3.901470103209635*^9, 3.901470108444337*^9}, {
  3.955156119831369*^9, 
  3.955156124122549*^9}},ExpressionUUID->"2d3ff3af-0288-4927-8511-\
099d6a64dad8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Set", " ", "recursion", " ", "limit", " ", "to", " ", "handle", " ", 
    "complex", " ", "nested", " ", "functions"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"$RecursionLimit", "=", "10000"}], ";"}]}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"094e438c-9bb7-48db-9295-504a304b77f8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Define", " ", "phase", " ", "parameters", " ", "globally"}], "-",
     "ADDED"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"\[Theta]1", "=", "0"}], ";"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"\[Theta]2", "=", "0"}], ";"}], " ", "*)"}]}]], "Input",
 CellLabel->"In[2]:=",ExpressionUUID->"2a014ea7-c817-42c3-bb09-bb373bd68896"],

Cell[CellGroupData[{

Cell["Backward Induction Functions - Classical Setting", "Subsection",
 CellChangeTimes->{{3.901470122252499*^9, 3.901470128058572*^9}, {
  3.955156380370985*^9, 
  3.95515639503491*^9}},ExpressionUUID->"849feb04-1f25-41f7-a0ef-\
15c53a1954bf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"q10cl", "[", 
     RowBox[{"U2War1_", ",", "U2Cap2_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"E", "^", "U2War1"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"E", "^", "U2War1"}], "+", 
       RowBox[{"E", "^", "U2Cap2"}]}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"notq10cl", "[", 
     RowBox[{"U2War1_", ",", "U2Cap2_"}], "]"}], ":=", 
    RowBox[{"1", "-", 
     RowBox[{"q10cl", "[", 
      RowBox[{"U2War1", ",", "U2Cap2"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"q11cl", "[", 
     RowBox[{"U2War1_", ",", "U2Cap2_"}], "]"}], ":=", 
    RowBox[{"q10cl", "[", 
     RowBox[{"U2War1", ",", "U2Cap2"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"notq11cl", "[", 
     RowBox[{"U2War1_", ",", "U2Cap2_"}], "]"}], ":=", 
    RowBox[{"notq10cl", "[", 
     RowBox[{"U2War1", ",", "U2Cap2"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"p8cl", "[", 
     RowBox[{"U1War2_", ",", "U1Cap1_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"E", "^", "U1War2"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"E", "^", "U1War2"}], "+", 
       RowBox[{"E", "^", "U1Cap1"}]}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"notp8cl", "[", 
     RowBox[{"U1War2_", ",", "U1Cap1_"}], "]"}], ":=", 
    RowBox[{"1", "-", 
     RowBox[{"p8cl", "[", 
      RowBox[{"U1War2", ",", "U1Cap1"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"p12cl", "[", 
     RowBox[{"U1War2_", ",", "U1Cap1_"}], "]"}], ":=", 
    RowBox[{"p8cl", "[", 
     RowBox[{"U1War2", ",", "U1Cap1"}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"notp12cl", "[", 
     RowBox[{"U1War2_", ",", "U1Cap1_"}], "]"}], ":=", 
    RowBox[{"notp8cl", "[", 
     RowBox[{"U1War2", ",", "U1Cap1"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"q9cl", "[", 
     RowBox[{
     "U1War2_", ",", "U1Cap1_", ",", "U2War2_", ",", "U2Cap1_", ",", 
      "U2Nego_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"UP2N12", ",", "p12", ",", "notp12"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"p12", "=", 
        RowBox[{"p12cl", "[", 
         RowBox[{"U1War2", ",", "U1Cap1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"notp12", "=", 
        RowBox[{"notp12cl", "[", 
         RowBox[{"U1War2", ",", "U1Cap1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"UP2N12", "=", 
        RowBox[{
         RowBox[{"p12", " ", "U2War2"}], "+", 
         RowBox[{"notp12", " ", "U2Cap1"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"E", "^", "UP2N12"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"E", "^", "UP2N12"}], "+", 
          RowBox[{"E", "^", "U2Nego"}]}], ")"}]}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"notq9cl", "[", 
     RowBox[{
     "U1War2_", ",", "U1Cap1_", ",", "U2War2_", ",", "U2Cap1_", ",", 
      "U2Nego_"}], "]"}], ":=", 
    RowBox[{"1", "-", 
     RowBox[{"q9cl", "[", 
      RowBox[{
      "U1War2", ",", "U1Cap1", ",", "U2War2", ",", "U2Cap1", ",", "U2Nego"}], 
      "]"}]}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"p7cl", "[", 
     RowBox[{
     "U1War1_", ",", "U1Cap2_", ",", "U2War1_", ",", "U2Cap2_", ",", 
      "U1Nego_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"UP1N11", ",", "q11", ",", "notq11"}], "}"}], ",", 
      RowBox[{
       RowBox[{"q11", "=", 
        RowBox[{"q11cl", "[", 
         RowBox[{"U2War1", ",", "U2Cap2"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"notq11", "=", 
        RowBox[{"notq11cl", "[", 
         RowBox[{"U2War1", ",", "U2Cap2"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"UP1N11", "=", 
        RowBox[{
         RowBox[{"q11", " ", "U1War1"}], "+", 
         RowBox[{"notq11", " ", "U1Cap2"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"E", "^", "UP1N11"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"E", "^", "UP1N11"}], "+", 
          RowBox[{"E", "^", "U1Nego"}]}], ")"}]}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"notp7cl", "[", 
     RowBox[{
     "U1War1_", ",", "U1Cap2_", ",", "U2War1_", ",", "U2Cap2_", ",", 
      "U1Nego_"}], "]"}], ":=", 
    RowBox[{"1", "-", 
     RowBox[{"p7cl", "[", 
      RowBox[{
      "U1War1", ",", "U1Cap2", ",", "U2War1", ",", "U2Cap2", ",", "U1Nego"}], 
      "]"}]}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"q6cl", "[", 
     RowBox[{
     "U1War1_", ",", "U1War2_", ",", "U1Cap1_", ",", "U1Cap2_", ",", 
      "U2War2_", ",", "U2Cap1_", ",", "U2War1_", ",", "U2Cap2_", ",", 
      "U1Nego_", ",", "U2Nego_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "UP2N8", ",", "U2N11", ",", "UP2N7", ",", "p8", ",", "notp8", ",", 
        "p7", ",", "notp7", ",", "q11", ",", "notq11"}], "}"}], ",", 
      RowBox[{
       RowBox[{"p8", "=", 
        RowBox[{"p8cl", "[", 
         RowBox[{"U1War2", ",", "U1Cap1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"notp8", "=", 
        RowBox[{"notp8cl", "[", 
         RowBox[{"U1War2", ",", "U1Cap1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"notp7", "=", 
        RowBox[{"notp7cl", "[", 
         RowBox[{
         "U1War1", ",", "U1Cap2", ",", "U2War1", ",", "U2Cap2", ",", 
          "U1Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"p7", "=", 
        RowBox[{"p7cl", "[", 
         RowBox[{
         "U1War1", ",", "U1Cap2", ",", "U2War1", ",", "U2Cap2", ",", 
          "U1Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"UP2N8", "=", 
        RowBox[{
         RowBox[{"p8", " ", "U2War2"}], "+", 
         RowBox[{"notp8", " ", "U2Cap1"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"q11", "=", 
        RowBox[{"q11cl", "[", 
         RowBox[{"U2War1", ",", "U2Cap2"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"notq11", "=", 
        RowBox[{"notq11cl", "[", 
         RowBox[{"U2War1", ",", "U2Cap2"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"U2N11", "=", 
        RowBox[{
         RowBox[{"q11", " ", "U2War1"}], "+", 
         RowBox[{"notq11", " ", "U2Cap2"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"UP2N7", "=", 
        RowBox[{
         RowBox[{"p7", " ", "U2N11"}], "+", 
         RowBox[{"notp7", " ", "U2Nego"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"E", "^", "UP2N8"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"E", "^", "UP2N8"}], "+", 
          RowBox[{"E", "^", "UP2N7"}]}], ")"}]}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"notq6cl", "[", 
     RowBox[{
     "U1War1_", ",", "U1War2_", ",", "U1Cap1_", ",", "U1Cap2_", ",", 
      "U2War2_", ",", "U2Cap1_", ",", "U2War1_", ",", "U2Cap2_", ",", 
      "U1Nego_", ",", "U2Nego_"}], "]"}], ":=", 
    RowBox[{"1", "-", 
     RowBox[{"q6cl", "[", 
      RowBox[{
      "U1War1", ",", "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", 
       ",", "U2Cap1", ",", "U2War1", ",", "U2Cap2", ",", "U1Nego", ",", 
       "U2Nego"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"p5cl", "[", 
     RowBox[{
     "U1Cap1_", ",", "U2Cap1_", ",", "U1Cap2_", ",", "U2Cap2_", ",", 
      "U1War1_", ",", "U2War1_", ",", "U1War2_", ",", "U2War2_", ",", 
      "U1Nego_", ",", "U2Nego_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "UP1N10", ",", "UP2N10", ",", "UP2N9", ",", "UP1N9", ",", "q10", ",", 
        "notq10", ",", "q9", ",", "notq9", ",", "p12", ",", "notp12", ",", 
        "UP1N12"}], "}"}], ",", 
      RowBox[{
       RowBox[{"p12", "=", 
        RowBox[{"p12cl", "[", 
         RowBox[{"U1War2", ",", "U1Cap1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"notp12", "=", 
        RowBox[{"notp12cl", "[", 
         RowBox[{"U1War2", ",", "U1Cap1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"UP1N12", "=", 
        RowBox[{
         RowBox[{"p12", " ", "U1War2"}], "+", 
         RowBox[{"notp12", " ", "U1Cap1"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"q10", "=", 
        RowBox[{"q10cl", "[", 
         RowBox[{"U2War1", ",", "U2Cap2"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"notq10", "=", 
        RowBox[{"notq10cl", "[", 
         RowBox[{"U2War1", ",", "U2Cap2"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"q9", "=", 
        RowBox[{"q9cl", "[", 
         RowBox[{
         "U1War2", ",", "U1Cap1", ",", "U2War2", ",", "U2Cap1", ",", 
          "U2Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"notq9", "=", 
        RowBox[{"notq9cl", "[", 
         RowBox[{
         "U1War2", ",", "U1Cap1", ",", "U2War2", ",", "U2Cap1", ",", 
          "U2Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"UP1N10", "=", 
        RowBox[{
         RowBox[{"q10", " ", "U1War1"}], "+", 
         RowBox[{"notq10", " ", "U1Cap2"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"UP1N9", "=", 
        RowBox[{
         RowBox[{"q9", " ", "UP1N12"}], "+", 
         RowBox[{"notq9", " ", "U1Nego"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"E", "^", "UP1N10"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"E", "^", "UP1N10"}], "+", 
          RowBox[{"E", "^", "UP1N9"}]}], ")"}]}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"notp5cl", "[", 
     RowBox[{
     "U1Cap1_", ",", "U2Cap1_", ",", "U1Cap2_", ",", "U2Cap2_", ",", 
      "U1War1_", ",", "U2War1_", ",", "U1War2_", ",", "U2War2_", ",", 
      "U1Nego_", ",", "U2Nego_"}], "]"}], ":=", 
    RowBox[{"1", "-", 
     RowBox[{"p5cl", "[", 
      RowBox[{
      "U1Cap1", ",", "U2Cap1", ",", "U1Cap2", ",", "U2Cap2", ",", "U1War1", 
       ",", "U2War1", ",", "U1War2", ",", "U2War2", ",", "U1Nego", ",", 
       "U2Nego"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"p4cl", "[", 
     RowBox[{
     "U1War2_", ",", "U1Cap1_", ",", "U1Cap2_", ",", "U2War2_", ",", 
      "U2Cap1_", ",", "U1War1_", ",", "U2War1_", ",", "U2Cap2_", ",", 
      "U1Nego_", ",", "U2Nego_", ",", "U1Acq1_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "UP1N6", ",", "q11", ",", "notq11", ",", "p8", ",", "notp8", ",", "p7",
         ",", "notp7", ",", "q6", ",", "notq6", ",", "UP1N11", ",", "UP1N8", 
        ",", "UP1N7"}], "}"}], ",", 
      RowBox[{
       RowBox[{"q11", "=", 
        RowBox[{"q11cl", "[", 
         RowBox[{"U2War1", ",", "U2Cap2"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"CORRECTED", ":", 
         RowBox[{
         "Was", " ", "incorrectly", " ", "using", " ", "notp12cl", " ", 
          "instead", " ", "of", " ", "notq11cl"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"notq11", "=", 
        RowBox[{"notq11cl", "[", 
         RowBox[{"U2War1", ",", "U2Cap2"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"p8", "=", 
        RowBox[{"p8cl", "[", 
         RowBox[{"U1War2", ",", "U1Cap1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"notp8", "=", 
        RowBox[{"notp8cl", "[", 
         RowBox[{"U1War2", ",", "U1Cap1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"p7", "=", 
        RowBox[{"p7cl", "[", 
         RowBox[{
         "U1War1", ",", "U1Cap2", ",", "U2War1", ",", "U2Cap2", ",", 
          "U1Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"notp7", "=", 
        RowBox[{"notp7cl", "[", 
         RowBox[{
         "U1War1", ",", "U1Cap2", ",", "U2War1", ",", "U2Cap2", ",", 
          "U1Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"q6", "=", 
        RowBox[{"q6cl", "[", 
         RowBox[{
         "U1War1", ",", "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2",
           ",", "U2Cap1", ",", "U2War1", ",", "U2Cap2", ",", "U1Nego", ",", 
          "U2Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"notq6", "=", 
        RowBox[{"notq6cl", "[", 
         RowBox[{
         "U1War1", ",", "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2",
           ",", "U2Cap1", ",", "U2War1", ",", "U2Cap2", ",", "U1Nego", ",", 
          "U2Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"UP1N11", "=", 
        RowBox[{
         RowBox[{"q11", " ", "U1War1"}], "+", 
         RowBox[{"notq11", " ", "U1Cap2"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"UP1N8", "=", 
        RowBox[{
         RowBox[{"p8", " ", "U1War2"}], "+", 
         RowBox[{"notp8", " ", "U1Cap1"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"UP1N7", "=", 
        RowBox[{
         RowBox[{"p7", " ", "UP1N11"}], "+", 
         RowBox[{"notp7", " ", "U1Nego"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"UP1N6", "=", 
        RowBox[{
         RowBox[{"q6", " ", "UP1N8"}], "+", 
         RowBox[{"notq6", " ", "UP1N7"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"E", "^", "UP1N6"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"E", "^", "UP1N6"}], "+", 
          RowBox[{"E", "^", "U1Acq1"}]}], ")"}]}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"notp4cl", "[", 
     RowBox[{
     "U1War2_", ",", "U1Cap1_", ",", "U1Cap2_", ",", "U2War2_", ",", 
      "U2Cap1_", ",", "U1War1_", ",", "U2War1_", ",", "U2Cap2_", ",", 
      "U1Nego_", ",", "U2Nego_", ",", "U1Acq1_"}], "]"}], ":=", 
    RowBox[{"1", "-", 
     RowBox[{"p4cl", "[", 
      RowBox[{
      "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", "U2Cap1", 
       ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", "U1Nego", ",", 
       "U2Nego", ",", "U1Acq1"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"q3cl", "[", 
     RowBox[{
     "U1Cap1_", ",", "U2Cap1_", ",", "U1Cap2_", ",", "U2Cap2_", ",", 
      "U1War1_", ",", "U2War1_", ",", "U1War2_", ",", "U2War2_", ",", 
      "U1Nego_", ",", "U2Nego_", ",", "U2Acq2_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "UP2N12", ",", "UP2N10", ",", "UP2N9", ",", "UP2N5", ",", "p12", ",", 
        "notp12", ",", "q10", ",", "notq10", ",", "q9", ",", "notq9", ",", 
        "p5", ",", "notp5"}], "}"}], ",", 
      RowBox[{
       RowBox[{"p12", "=", 
        RowBox[{"p12cl", "[", 
         RowBox[{"U1War2", ",", "U1Cap1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"notp12", "=", 
        RowBox[{"notp12cl", "[", 
         RowBox[{"U1War2", ",", "U1Cap1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"UP2N12", "=", 
        RowBox[{
         RowBox[{"p12", " ", "U2War2"}], "+", 
         RowBox[{"notp12", " ", "U2Cap1"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"q10", "=", 
        RowBox[{"q10cl", "[", 
         RowBox[{"U2War1", ",", "U2Cap2"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"notq10", "=", 
        RowBox[{"notq10cl", "[", 
         RowBox[{"U2War1", ",", "U2Cap2"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"UP2N10", "=", 
        RowBox[{
         RowBox[{"q10", " ", "U2War1"}], "+", 
         RowBox[{"notq10", " ", "U2Cap2"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"q9", "=", 
        RowBox[{"q9cl", "[", 
         RowBox[{
         "U1War2", ",", "U1Cap1", ",", "U2War2", ",", "U2Cap1", ",", 
          "U2Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"notq9", "=", 
        RowBox[{"notq9cl", "[", 
         RowBox[{
         "U1War2", ",", "U1Cap1", ",", "U2War2", ",", "U2Cap1", ",", 
          "U2Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"UP2N9", "=", 
        RowBox[{
         RowBox[{"q9", " ", "UP2N12"}], "+", 
         RowBox[{"notq9", " ", "U2Nego"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"p5", "=", 
        RowBox[{"p5cl", "[", 
         RowBox[{
         "U1Cap1", ",", "U2Cap1", ",", "U1Cap2", ",", "U2Cap2", ",", "U1War1",
           ",", "U2War1", ",", "U1War2", ",", "U2War2", ",", "U1Nego", ",", 
          "U2Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"notp5", "=", 
        RowBox[{"notp5cl", "[", 
         RowBox[{
         "U1Cap1", ",", "U2Cap1", ",", "U1Cap2", ",", "U2Cap2", ",", "U1War1",
           ",", "U2War1", ",", "U1War2", ",", "U2War2", ",", "U1Nego", ",", 
          "U2Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"UP2N5", "=", 
        RowBox[{
         RowBox[{"p5", " ", "UP2N10"}], "+", 
         RowBox[{"notp5", " ", "UP2N9"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"E", "^", "UP2N5"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"E", "^", "UP2N5"}], "+", 
          RowBox[{"E", "^", "U2Acq2"}]}], ")"}]}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"notq3cl", "[", 
     RowBox[{
     "U1Cap1_", ",", "U2Cap1_", ",", "U1Cap2_", ",", "U2Cap2_", ",", 
      "U1War1_", ",", "U2War1_", ",", "U1War2_", ",", "U2War2_", ",", 
      "U1Nego_", ",", "U2Nego_", ",", "U2Acq2_"}], "]"}], ":=", 
    RowBox[{"1", "-", 
     RowBox[{"q3cl", "[", 
      RowBox[{
      "U1Cap1", ",", "U2Cap1", ",", "U1Cap2", ",", "U2Cap2", ",", "U1War1", 
       ",", "U2War1", ",", "U1War2", ",", "U2War2", ",", "U1Nego", ",", 
       "U2Nego", ",", "U2Acq2"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"q2cl", "[", 
     RowBox[{
     "U1War2_", ",", "U1Cap1_", ",", "U1Cap2_", ",", "U2War2_", ",", 
      "U2Cap1_", ",", "U1War1_", ",", "U2War1_", ",", "U2Cap2_", ",", 
      "U1Nego_", ",", "U2Nego_", ",", "U1Acq1_", ",", "U2Acq1_", ",", 
      "U2SQ_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "UP2N4", ",", "q11", ",", "notq11", ",", "p7", ",", "notp7", ",", "p8",
         ",", "notp8", ",", "q6", ",", "notq6", ",", "p4", ",", "notp4", ",", 
        "UP2N11", ",", "UP2N7", ",", "UP2N8", ",", "UP2N6"}], "}"}], ",", 
      RowBox[{
       RowBox[{"q11", "=", 
        RowBox[{"q11cl", "[", 
         RowBox[{"U2War1", ",", "U2Cap2"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"notq11", "=", 
        RowBox[{"notq11cl", "[", 
         RowBox[{"U2War1", ",", "U2Cap2"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"p7", "=", 
        RowBox[{"p7cl", "[", 
         RowBox[{
         "U1War1", ",", "U1Cap2", ",", "U2War1", ",", "U2Cap2", ",", 
          "U1Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"notp7", "=", 
        RowBox[{"notp7cl", "[", 
         RowBox[{
         "U1War1", ",", "U1Cap2", ",", "U2War1", ",", "U2Cap2", ",", 
          "U1Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"p8", "=", 
        RowBox[{"p8cl", "[", 
         RowBox[{"U1War2", ",", "U1Cap1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"notp8", "=", 
        RowBox[{"notp8cl", "[", 
         RowBox[{"U1War2", ",", "U1Cap1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"q6", "=", 
        RowBox[{"q6cl", "[", 
         RowBox[{
         "U1War1", ",", "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2",
           ",", "U2Cap1", ",", "U2War1", ",", "U2Cap2", ",", "U1Nego", ",", 
          "U2Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"notq6", "=", 
        RowBox[{"notq6cl", "[", 
         RowBox[{
         "U1War1", ",", "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2",
           ",", "U2Cap1", ",", "U2War1", ",", "U2Cap2", ",", "U1Nego", ",", 
          "U2Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"p4", "=", 
        RowBox[{"p4cl", "[", 
         RowBox[{
         "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", "U2Cap1",
           ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", "U1Nego", ",", 
          "U2Nego", ",", "U1Acq1"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"notp4", "=", 
        RowBox[{"notp4cl", "[", 
         RowBox[{
         "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", "U2Cap1",
           ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", "U1Nego", ",", 
          "U2Nego", ",", "U1Acq1"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"UP2N11", "=", 
        RowBox[{
         RowBox[{"q11", " ", "U2War1"}], "+", 
         RowBox[{"notq11", " ", "U2Cap2"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"UP2N7", "=", 
        RowBox[{
         RowBox[{"p7", " ", "UP2N11"}], "+", 
         RowBox[{"notp7", " ", "U2Nego"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"UP2N8", "=", 
        RowBox[{
         RowBox[{"p8", " ", "U2War2"}], "+", 
         RowBox[{"notp8", " ", "U2Cap1"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"UP2N6", "=", 
        RowBox[{
         RowBox[{"q6", " ", "UP2N8"}], "+", 
         RowBox[{"notq6", " ", "UP2N7"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"UP2N4", "=", 
        RowBox[{
         RowBox[{"p4", " ", "UP2N6"}], "+", 
         RowBox[{"notp4", " ", "U2Acq1"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"E", "^", "UP2N4"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"E", "^", "UP2N4"}], "+", 
          RowBox[{"E", "^", "U2SQ"}]}], ")"}]}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"notq2cl", "[", 
     RowBox[{
     "U1War2_", ",", "U1Cap1_", ",", "U1Cap2_", ",", "U2War2_", ",", 
      "U2Cap1_", ",", "U1War1_", ",", "U2War1_", ",", "U2Cap2_", ",", 
      "U1Nego_", ",", "U2Nego_", ",", "U1Acq1_", ",", "U2Acq1_", ",", 
      "U2SQ_"}], "]"}], ":=", 
    RowBox[{"1", "-", 
     RowBox[{"q2cl", "[", 
      RowBox[{
      "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", "U2Cap1", 
       ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", "U1Nego", ",", 
       "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", "U2SQ"}], "]"}]}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"p1cl", "[", 
     RowBox[{
     "U1War2_", ",", "U1Cap1_", ",", "U1Cap2_", ",", "U2War2_", ",", 
      "U2Cap1_", ",", "U1War1_", ",", "U2War1_", ",", "U2Cap2_", ",", 
      "U1Nego_", ",", "U2Nego_", ",", "U1Acq1_", ",", "U2Acq1_", ",", 
      "U1Acq2_", ",", "U2Acq2_", ",", "U1SQ_", ",", "U2SQ_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "UP1N2", ",", "UP1N3", ",", "UP1N4", ",", "UP1N5", ",", "UP1N6", ",", 
        "UP1N9", ",", "UP1N10", ",", "UP1N12", ",", "q2", ",", "notq2", ",", 
        "q3", ",", "notq3", ",", "p4", ",", "notp4", ",", "p5", ",", "notp5", 
        ",", "q6", ",", "notq6", ",", "p8", ",", "notp8", ",", "p7", ",", 
        "notp7", ",", "q9", ",", "notq9", ",", "q10", ",", "notq10", ",", 
        "q11", ",", "notq11", ",", "p12", ",", "notp12", ",", "UP1N11", ",", 
        "UP1N7", ",", "UP1N8"}], "}"}], ",", 
      RowBox[{
       RowBox[{"p12", "=", 
        RowBox[{"p12cl", "[", 
         RowBox[{"U1War2", ",", "U1Cap1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"notp12", "=", 
        RowBox[{"notp12cl", "[", 
         RowBox[{"U1War2", ",", "U1Cap1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"p8", "=", 
        RowBox[{"p8cl", "[", 
         RowBox[{"U1War2", ",", "U1Cap1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"notp8", "=", 
        RowBox[{"notp8cl", "[", 
         RowBox[{"U1War2", ",", "U1Cap1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"q11", "=", 
        RowBox[{"q11cl", "[", 
         RowBox[{"U2War1", ",", "U2Cap2"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"notq11", "=", 
        RowBox[{"notq11cl", "[", 
         RowBox[{"U2War1", ",", "U2Cap2"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"q10", "=", 
        RowBox[{"q10cl", "[", 
         RowBox[{"U2War1", ",", "U2Cap2"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"CORRECTED", ":", 
         RowBox[{
         "Was", " ", "incorrectly", " ", "using", " ", "notp12cl", " ", 
          "instead", " ", "of", " ", "notq10cl"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"notq10", "=", 
        RowBox[{"notq10cl", "[", 
         RowBox[{"U2War1", ",", "U2Cap2"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"q9", "=", 
        RowBox[{"q9cl", "[", 
         RowBox[{
         "U1War2", ",", "U1Cap1", ",", "U2War2", ",", "U2Cap1", ",", 
          "U2Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"notq9", "=", 
        RowBox[{"notq9cl", "[", 
         RowBox[{
         "U1War2", ",", "U1Cap1", ",", "U2War2", ",", "U2Cap1", ",", 
          "U2Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"p7", "=", 
        RowBox[{"p7cl", "[", 
         RowBox[{
         "U1War1", ",", "U1Cap2", ",", "U2War1", ",", "U2Cap2", ",", 
          "U1Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"notp7", "=", 
        RowBox[{"notp7cl", "[", 
         RowBox[{
         "U1War1", ",", "U1Cap2", ",", "U2War1", ",", "U2Cap2", ",", 
          "U1Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"q6", "=", 
        RowBox[{"q6cl", "[", 
         RowBox[{
         "U1War1", ",", "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2",
           ",", "U2Cap1", ",", "U2War1", ",", "U2Cap2", ",", "U1Nego", ",", 
          "U2Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"notq6", "=", 
        RowBox[{"notq6cl", "[", 
         RowBox[{
         "U1War1", ",", "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2",
           ",", "U2Cap1", ",", "U2War1", ",", "U2Cap2", ",", "U1Nego", ",", 
          "U2Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"p5", "=", 
        RowBox[{"p5cl", "[", 
         RowBox[{
         "U1Cap1", ",", "U2Cap1", ",", "U1Cap2", ",", "U2Cap2", ",", "U1War1",
           ",", "U2War1", ",", "U1War2", ",", "U2War2", ",", "U1Nego", ",", 
          "U2Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"notp5", "=", 
        RowBox[{"notp5cl", "[", 
         RowBox[{
         "U1Cap1", ",", "U2Cap1", ",", "U1Cap2", ",", "U2Cap2", ",", "U1War1",
           ",", "U2War1", ",", "U1War2", ",", "U2War2", ",", "U1Nego", ",", 
          "U2Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"p4", "=", 
        RowBox[{"p4cl", "[", 
         RowBox[{
         "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", "U2Cap1",
           ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", "U1Nego", ",", 
          "U2Nego", ",", "U1Acq1"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"notp4", "=", 
        RowBox[{"notp4cl", "[", 
         RowBox[{
         "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", "U2Cap1",
           ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", "U1Nego", ",", 
          "U2Nego", ",", "U1Acq1"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"q3", "=", 
        RowBox[{"q3cl", "[", 
         RowBox[{
         "U1Cap1", ",", "U2Cap1", ",", "U1Cap2", ",", "U2Cap2", ",", "U1War1",
           ",", "U2War1", ",", "U1War2", ",", "U2War2", ",", "U1Nego", ",", 
          "U2Nego", ",", "U2Acq2"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"notq3", "=", 
        RowBox[{"notq3cl", "[", 
         RowBox[{
         "U1Cap1", ",", "U2Cap1", ",", "U1Cap2", ",", "U2Cap2", ",", "U1War1",
           ",", "U2War1", ",", "U1War2", ",", "U2War2", ",", "U1Nego", ",", 
          "U2Nego", ",", "U2Acq2"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"q2", "=", 
        RowBox[{"q2cl", "[", 
         RowBox[{
         "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", "U2Cap1",
           ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", "U1Nego", ",", 
          "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", "U2SQ"}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"notq2", "=", 
        RowBox[{"notq2cl", "[", 
         RowBox[{
         "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", "U2Cap1",
           ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", "U1Nego", ",", 
          "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", "U2SQ"}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"UP1N12", "=", 
        RowBox[{
         RowBox[{"p12", " ", "U1War1"}], "+", 
         RowBox[{"notp12", " ", "U1Cap1"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"UP1N11", "=", 
        RowBox[{
         RowBox[{"q11", " ", "U1War1"}], "+", 
         RowBox[{"notq11", " ", "U1Cap2"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"UP1N9", "=", 
        RowBox[{
         RowBox[{"q9", " ", "UP1N12"}], "+", 
         RowBox[{"notq9", " ", "U1Nego"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"UP1N7", "=", 
        RowBox[{
         RowBox[{"p7", " ", "UP1N11"}], "+", 
         RowBox[{"notp7", " ", "U1Nego"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"UP1N8", "=", 
        RowBox[{
         RowBox[{"p8", " ", "U2War2"}], "+", 
         RowBox[{"notp8", " ", "U2Cap1"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"UP1N10", "=", 
        RowBox[{
         RowBox[{"q10", " ", "U1War1"}], "+", 
         RowBox[{"notq10", " ", "U1Cap2"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"UP1N6", "=", 
        RowBox[{
         RowBox[{"q6", " ", "UP1N8"}], "+", 
         RowBox[{"notq6", " ", "UP1N7"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"UP1N5", "=", 
        RowBox[{
         RowBox[{"p5", " ", "UP1N10"}], "+", 
         RowBox[{"notp5", " ", "UP1N9"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"UP1N4", "=", 
        RowBox[{
         RowBox[{"p4", " ", "UP1N6"}], "+", 
         RowBox[{"notp4", " ", "U1Acq1"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"UP1N3", "=", 
        RowBox[{
         RowBox[{"q3", " ", "UP1N5"}], "+", 
         RowBox[{"notq3", " ", "U1Acq2"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"UP1N2", "=", 
        RowBox[{
         RowBox[{"q2", " ", "UP1N4"}], "+", 
         RowBox[{"notq2", " ", "U1SQ"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"E", "^", "UP1N3"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"E", "^", "UP1N3"}], "+", 
          RowBox[{"E", "^", "UP1N2"}]}], ")"}]}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"notp1cl", "[", 
     RowBox[{
     "U1War2_", ",", "U1Cap1_", ",", "U1Cap2_", ",", "U2War2_", ",", 
      "U2Cap1_", ",", "U1War1_", ",", "U2War1_", ",", "U2Cap2_", ",", 
      "U1Nego_", ",", "U2Nego_", ",", "U1Acq1_", ",", "U2Acq1_", ",", 
      "U1Acq2_", ",", "U2Acq2_", ",", "U1SQ_", ",", "U2SQ_"}], "]"}], ":=", 
    RowBox[{"1", "-", 
     RowBox[{"p1cl", "[", 
      RowBox[{
      "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", "U2Cap1", 
       ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", "U1Nego", ",", 
       "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", "U1Acq2", ",", "U2Acq2", 
       ",", "U1SQ", ",", "U2SQ"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.955156447968136*^9, 3.955156620462203*^9}, 
   3.9581921841420116`*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"c74e8bd7-1efb-4f9e-b90a-f07b7ef4ae89"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Quantum-Like Approach", "Section",
 CellChangeTimes->{{3.901470103209635*^9, 3.901470108444337*^9}, {
  3.955156119831369*^9, 3.955156124122549*^9}, {3.955156638043973*^9, 
  3.955156640564232*^9}},ExpressionUUID->"8518bbc6-c84a-478b-a867-\
1e0890cede0a"],

Cell[CellGroupData[{

Cell["\<\
Backward Induction Functions - Quantum Like Extended Form Setting\
\>", "Subsection",
 CellChangeTimes->{{3.901470122252499*^9, 3.901470128058572*^9}, {
  3.955156380370985*^9, 3.95515639503491*^9}, {3.9551566623507967`*^9, 
  3.9551566709175653`*^9}},ExpressionUUID->"7f93c15f-3b32-40e2-a8ed-\
70ee6168f797"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"CORRECTED", ":", 
    RowBox[{
    "Added", " ", "phase", " ", "parameter", " ", "to", " ", "function", " ", 
     "arguments", " ", "instead", " ", "of", " ", "using", " ", "global", " ",
      "variables"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"p12quantum", "[", 
      RowBox[{"U1War2_", ",", "U1Cap1_", ",", "\[Theta]_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "p12clprob", "}"}], ",", 
       RowBox[{
        RowBox[{"p12clprob", "=", 
         RowBox[{"p12cl", "[", 
          RowBox[{"U1War2", ",", "U1Cap1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Sqrt", "[", "p12clprob", "]"}], " ", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"I", " ", 
            RowBox[{"Re", "[", "\[Theta]", "]"}]}], ")"}]}]}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Added", " ", "phase", " ", "parameter", " ", "to", " ", "function", " ",
       "arguments"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"notp12quantum", "[", 
      RowBox[{"U1War2_", ",", "U1Cap1_", ",", "\[Theta]_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "notp12clprob", "}"}], ",", 
       RowBox[{
        RowBox[{"notp12clprob", "=", 
         RowBox[{"notp12cl", "[", 
          RowBox[{"U1War2", ",", "U1Cap1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Sqrt", "[", "notp12clprob", "]"}], " ", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"I", " ", 
            RowBox[{"Re", "[", "\[Theta]", "]"}]}], ")"}]}]}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Added", " ", "phase", " ", "parameter", " ", "to", " ", "function", " ",
       "arguments"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"q11quantum", "[", 
      RowBox[{"U2War1_", ",", "U2Cap2_", ",", "\[Theta]_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "q11clprob", "}"}], ",", 
       RowBox[{
        RowBox[{"q11clprob", "=", 
         RowBox[{"q11cl", "[", 
          RowBox[{"U2War1", ",", "U2Cap2"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Sqrt", "[", "q11clprob", "]"}], " ", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"I", " ", 
            RowBox[{"Re", "[", "\[Theta]", "]"}]}], ")"}]}]}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Added", " ", "phase", " ", "parameter", " ", "to", " ", "function", " ",
       "arguments"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"notq11quantum", "[", 
      RowBox[{"U2War1_", ",", "U2Cap2_", ",", "\[Theta]_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "notq11clprob", "}"}], ",", 
       RowBox[{
        RowBox[{"notq11clprob", "=", 
         RowBox[{"notq11cl", "[", 
          RowBox[{"U2War1", ",", "U2Cap2"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Sqrt", "[", "notq11clprob", "]"}], " ", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"I", " ", 
            RowBox[{"Re", "[", "\[Theta]", "]"}]}], ")"}]}]}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Added", " ", "phase", " ", "parameter", " ", "to", " ", "function", " ",
       "arguments"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"q10quantum", "[", 
      RowBox[{"U2War1_", ",", "U2Cap2_", ",", "\[Theta]_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "q10clprob", "}"}], ",", 
       RowBox[{
        RowBox[{"q10clprob", "=", 
         RowBox[{"q10cl", "[", 
          RowBox[{"U2War1", ",", "U2Cap2"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Sqrt", "[", "q10clprob", "]"}], " ", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"I", " ", 
            RowBox[{"Re", "[", "\[Theta]", "]"}]}], ")"}]}]}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Added", " ", "phase", " ", "parameter", " ", "to", " ", "function", " ",
       "arguments", " ", "and", " ", "fixed", " ", "phase", " ", "for", " ", 
      "opposite", " ", "choice"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"notq10quantum", "[", 
      RowBox[{"U2War1_", ",", "U2Cap2_", ",", "\[Theta]_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "notq10clprob", "}"}], ",", 
       RowBox[{
        RowBox[{"notq10clprob", "=", 
         RowBox[{"notq10cl", "[", 
          RowBox[{"U2War1", ",", "U2Cap2"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"CORRECTED", ":", 
          RowBox[{
          "Using", " ", "consistent", " ", "phase", " ", "transformation", 
           " ", "for", " ", "opposite", " ", "choice"}]}], "*)"}], 
        RowBox[{
         RowBox[{"Sqrt", "[", "notq10clprob", "]"}], " ", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"I", " ", 
            RowBox[{"Re", "[", 
             RowBox[{"\[Theta]", "+", "\[Pi]"}], "]"}]}], ")"}]}]}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Added", " ", "phase", " ", "parameter", " ", "to", " ", "function", " ",
       "arguments"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"q9quantum", "[", 
      RowBox[{
      "U1War2_", ",", "U1Cap1_", ",", "U2War2_", ",", "U2Cap1_", ",", 
       "U2Nego_", ",", "\[Theta]_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "q9clprob", "}"}], ",", 
       RowBox[{
        RowBox[{"q9clprob", "=", 
         RowBox[{"q9cl", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U2War2", ",", "U2Cap1", ",", 
           "U2Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Sqrt", "[", "q9clprob", "]"}], " ", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"I", " ", 
            RowBox[{"Re", "[", "\[Theta]", "]"}]}], ")"}]}]}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Added", " ", "phase", " ", "parameter", " ", "to", " ", "function", " ",
       "arguments"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"notq9quantum", "[", 
      RowBox[{
      "U1War2_", ",", "U1Cap1_", ",", "U2War2_", ",", "U2Cap1_", ",", 
       "U2Nego_", ",", "\[Theta]_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "notq9clprob", "}"}], ",", 
       RowBox[{
        RowBox[{"notq9clprob", "=", 
         RowBox[{"notq9cl", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U2War2", ",", "U2Cap1", ",", 
           "U2Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Sqrt", "[", "notq9clprob", "]"}], " ", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"I", " ", 
            RowBox[{"Re", "[", 
             RowBox[{"\[Theta]", "+", "\[Pi]"}], "]"}]}], ")"}]}]}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Added", " ", "phase", " ", "parameter", " ", "to", " ", "function", " ",
       "arguments"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"p8quantum", "[", 
      RowBox[{"U1War2_", ",", "U1Cap1_", ",", "\[Theta]_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "p8clprob", "}"}], ",", 
       RowBox[{
        RowBox[{"p8clprob", "=", 
         RowBox[{"p8cl", "[", 
          RowBox[{"U1War2", ",", "U1Cap1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Sqrt", "[", "p8clprob", "]"}], " ", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"I", " ", 
            RowBox[{"Re", "[", "\[Theta]", "]"}]}], ")"}]}]}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Added", " ", "phase", " ", "parameter", " ", "to", " ", "function", " ",
       "arguments"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"notp8quantum", "[", 
      RowBox[{"U1War2_", ",", "U1Cap1_", ",", "\[Theta]_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "notp8clprob", "}"}], ",", 
       RowBox[{
        RowBox[{"notp8clprob", "=", 
         RowBox[{"notp8cl", "[", 
          RowBox[{"U1War2", ",", "U1Cap1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Sqrt", "[", "notp8clprob", "]"}], " ", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"I", " ", 
            RowBox[{"Re", "[", 
             RowBox[{"\[Theta]", "+", "\[Pi]"}], "]"}]}], ")"}]}]}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Added", " ", "phase", " ", "parameter", " ", "to", " ", "function", " ",
       "arguments"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"p7quantum", "[", 
      RowBox[{
      "U1War1_", ",", "U1Cap2_", ",", "U2War1_", ",", "U2Cap2_", ",", 
       "U1Nego_", ",", "\[Theta]_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "p7clprob", "}"}], ",", 
       RowBox[{
        RowBox[{"p7clprob", "=", 
         RowBox[{"p7cl", "[", 
          RowBox[{
          "U1War1", ",", "U1Cap2", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Sqrt", "[", "p7clprob", "]"}], " ", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"I", " ", 
            RowBox[{"Re", "[", "\[Theta]", "]"}]}], ")"}]}]}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Added", " ", "phase", " ", "parameter", " ", "to", " ", "function", " ",
       "arguments"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"notp7quantum", "[", 
      RowBox[{
      "U1War1_", ",", "U1Cap2_", ",", "U2War1_", ",", "U2Cap2_", ",", 
       "U1Nego_", ",", "\[Theta]_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "notp7clprob", "}"}], ",", 
       RowBox[{
        RowBox[{"notp7clprob", "=", 
         RowBox[{"notp7cl", "[", 
          RowBox[{
          "U1War1", ",", "U1Cap2", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Sqrt", "[", "notp7clprob", "]"}], " ", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"I", " ", 
            RowBox[{"Re", "[", 
             RowBox[{"\[Theta]", "+", "\[Pi]"}], "]"}]}], ")"}]}]}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Added", " ", "phase", " ", "parameter", " ", "to", " ", "function", " ",
       "arguments"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"q6quantum", "[", 
      RowBox[{
      "U1War1_", ",", "U1War2_", ",", "U1Cap1_", ",", "U1Cap2_", ",", 
       "U2War2_", ",", "U2Cap1_", ",", "U2War1_", ",", "U2Cap2_", ",", 
       "U1Nego_", ",", "U2Nego_", ",", "\[Theta]_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "q6clprob", "}"}], ",", 
       RowBox[{
        RowBox[{"q6clprob", "=", 
         RowBox[{"q6cl", "[", 
          RowBox[{
          "U1War1", ",", "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", 
           "U2War2", ",", "U2Cap1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Sqrt", "[", "q6clprob", "]"}], " ", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"I", " ", 
            RowBox[{"Re", "[", "\[Theta]", "]"}]}], ")"}]}]}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Added", " ", "phase", " ", "parameter", " ", "to", " ", "function", " ",
       "arguments"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"notq6quantum", "[", 
      RowBox[{
      "U1War1_", ",", "U1War2_", ",", "U1Cap1_", ",", "U1Cap2_", ",", 
       "U2War2_", ",", "U2Cap1_", ",", "U2War1_", ",", "U2Cap2_", ",", 
       "U1Nego_", ",", "U2Nego_", ",", "\[Theta]_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "notq6clprob", "}"}], ",", 
       RowBox[{
        RowBox[{"notq6clprob", "=", 
         RowBox[{"notq6cl", "[", 
          RowBox[{
          "U1War1", ",", "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", 
           "U2War2", ",", "U2Cap1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Sqrt", "[", "notq6clprob", "]"}], " ", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"I", " ", 
            RowBox[{"Re", "[", 
             RowBox[{"\[Theta]", "+", "\[Pi]"}], "]"}]}], ")"}]}]}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Added", " ", "phase", " ", "parameter", " ", "to", " ", "function", " ",
       "arguments"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"p5quantum", "[", 
      RowBox[{
      "U1Cap1_", ",", "U2Cap1_", ",", "U1Cap2_", ",", "U2Cap2_", ",", 
       "U1War1_", ",", "U2War1_", ",", "U1War2_", ",", "U2War2_", ",", 
       "U1Nego_", ",", "U2Nego_", ",", "\[Theta]_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "p5clprob", "}"}], ",", 
       RowBox[{
        RowBox[{"p5clprob", "=", 
         RowBox[{"p5cl", "[", 
          RowBox[{
          "U1Cap1", ",", "U2Cap1", ",", "U1Cap2", ",", "U2Cap2", ",", 
           "U1War1", ",", "U2War1", ",", "U1War2", ",", "U2War2", ",", 
           "U1Nego", ",", "U2Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Sqrt", "[", "p5clprob", "]"}], " ", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"I", " ", 
            RowBox[{"Re", "[", "\[Theta]", "]"}]}], ")"}]}]}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Added", " ", "phase", " ", "parameter", " ", "to", " ", "function", " ",
       "arguments"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"notp5quantum", "[", 
      RowBox[{
      "U1Cap1_", ",", "U2Cap1_", ",", "U1Cap2_", ",", "U2Cap2_", ",", 
       "U1War1_", ",", "U2War1_", ",", "U1War2_", ",", "U2War2_", ",", 
       "U1Nego_", ",", "U2Nego_", ",", "\[Theta]_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "notp5clprob", "}"}], ",", 
       RowBox[{
        RowBox[{"notp5clprob", "=", 
         RowBox[{"notp5cl", "[", 
          RowBox[{
          "U1Cap1", ",", "U2Cap1", ",", "U1Cap2", ",", "U2Cap2", ",", 
           "U1War1", ",", "U2War1", ",", "U1War2", ",", "U2War2", ",", 
           "U1Nego", ",", "U2Nego"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Sqrt", "[", "notp5clprob", "]"}], " ", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"I", " ", 
            RowBox[{"Re", "[", 
             RowBox[{"\[Theta]", "+", "\[Pi]"}], "]"}]}], ")"}]}]}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Added", " ", "phase", " ", "parameter", " ", "to", " ", "function", " ",
       "arguments"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"p4quantum", "[", 
      RowBox[{
      "U1War2_", ",", "U1Cap1_", ",", "U1Cap2_", ",", "U2War2_", ",", 
       "U2Cap1_", ",", "U1War1_", ",", "U2War1_", ",", "U2Cap2_", ",", 
       "U1Nego_", ",", "U2Nego_", ",", "U1Acq1_", ",", "\[Theta]_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "p4clprob", "}"}], ",", 
       RowBox[{
        RowBox[{"p4clprob", "=", 
         RowBox[{"p4cl", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Sqrt", "[", "p4clprob", "]"}], " ", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"I", " ", 
            RowBox[{"Re", "[", "\[Theta]", "]"}]}], ")"}]}]}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Added", " ", "phase", " ", "parameter", " ", "to", " ", "function", " ",
       "arguments"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"notp4quantum", "[", 
      RowBox[{
      "U1War2_", ",", "U1Cap1_", ",", "U1Cap2_", ",", "U2War2_", ",", 
       "U2Cap1_", ",", "U1War1_", ",", "U2War1_", ",", "U2Cap2_", ",", 
       "U1Nego_", ",", "U2Nego_", ",", "U1Acq1_", ",", "\[Theta]_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "notp4clprob", "}"}], ",", 
       RowBox[{
        RowBox[{"notp4clprob", "=", 
         RowBox[{"notp4cl", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Sqrt", "[", "notp4clprob", "]"}], " ", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"I", " ", 
            RowBox[{"Re", "[", 
             RowBox[{"\[Theta]", "+", "\[Pi]"}], "]"}]}], ")"}]}]}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Added", " ", "phase", " ", "parameter", " ", "to", " ", "function", " ",
       "arguments"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"q3quantum", "[", 
      RowBox[{
      "U1Cap1_", ",", "U2Cap1_", ",", "U1Cap2_", ",", "U2Cap2_", ",", 
       "U1War1_", ",", "U2War1_", ",", "U1War2_", ",", "U2War2_", ",", 
       "U1Nego_", ",", "U2Nego_", ",", "U2Acq2_", ",", "\[Theta]_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "q3clprob", "}"}], ",", 
       RowBox[{
        RowBox[{"q3clprob", "=", 
         RowBox[{"q3cl", "[", 
          RowBox[{
          "U1Cap1", ",", "U2Cap1", ",", "U1Cap2", ",", "U2Cap2", ",", 
           "U1War1", ",", "U2War1", ",", "U1War2", ",", "U2War2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U2Acq2"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Sqrt", "[", "q3clprob", "]"}], " ", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"I", " ", 
            RowBox[{"Re", "[", "\[Theta]", "]"}]}], ")"}]}]}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Added", " ", "phase", " ", "parameter", " ", "to", " ", "function", " ",
       "arguments"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"notq3quantum", "[", 
      RowBox[{
      "U1Cap1_", ",", "U2Cap1_", ",", "U1Cap2_", ",", "U2Cap2_", ",", 
       "U1War1_", ",", "U2War1_", ",", "U1War2_", ",", "U2War2_", ",", 
       "U1Nego_", ",", "U2Nego_", ",", "U2Acq2_", ",", "\[Theta]_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "notq3clprob", "}"}], ",", 
       RowBox[{
        RowBox[{"notq3clprob", "=", 
         RowBox[{"notq3cl", "[", 
          RowBox[{
          "U1Cap1", ",", "U2Cap1", ",", "U1Cap2", ",", "U2Cap2", ",", 
           "U1War1", ",", "U2War1", ",", "U1War2", ",", "U2War2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U2Acq2"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Sqrt", "[", "notq3clprob", "]"}], " ", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"I", " ", 
            RowBox[{"Re", "[", 
             RowBox[{"\[Theta]", "+", "\[Pi]"}], "]"}]}], ")"}]}]}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Added", " ", "phase", " ", "parameter", " ", "to", " ", "function", " ",
       "arguments"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"q2quantum", "[", 
      RowBox[{
      "U1War2_", ",", "U1Cap1_", ",", "U1Cap2_", ",", "U2War2_", ",", 
       "U2Cap1_", ",", "U1War1_", ",", "U2War1_", ",", "U2Cap2_", ",", 
       "U1Nego_", ",", "U2Nego_", ",", "U1Acq1_", ",", "U2Acq1_", ",", 
       "U2SQ_", ",", "\[Theta]_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "q2clprob", "}"}], ",", 
       RowBox[{
        RowBox[{"q2clprob", "=", 
         RowBox[{"q2cl", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", 
           "U2SQ"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Sqrt", "[", "q2clprob", "]"}], " ", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"I", " ", 
            RowBox[{"Re", "[", "\[Theta]", "]"}]}], ")"}]}]}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Added", " ", "phase", " ", "parameter", " ", "to", " ", "function", " ",
       "arguments"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"notq2quantum", "[", 
      RowBox[{
      "U1War2_", ",", "U1Cap1_", ",", "U1Cap2_", ",", "U2War2_", ",", 
       "U2Cap1_", ",", "U1War1_", ",", "U2War1_", ",", "U2Cap2_", ",", 
       "U1Nego_", ",", "U2Nego_", ",", "U1Acq1_", ",", "U2Acq1_", ",", 
       "U2SQ_", ",", "\[Theta]_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "notq2clprob", "}"}], ",", 
       RowBox[{
        RowBox[{"notq2clprob", "=", 
         RowBox[{"notq2cl", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", 
           "U2SQ"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Sqrt", "[", "notq2clprob", "]"}], " ", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"I", " ", 
            RowBox[{"Re", "[", 
             RowBox[{"\[Theta]", "+", "\[Pi]"}], "]"}]}], ")"}]}]}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Added", " ", "phase", " ", "parameter", " ", "to", " ", "function", " ",
       "arguments"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"p1quantum", "[", 
      RowBox[{
      "U1War2_", ",", "U1Cap1_", ",", "U1Cap2_", ",", "U2War2_", ",", 
       "U2Cap1_", ",", "U1War1_", ",", "U2War1_", ",", "U2Cap2_", ",", 
       "U1Nego_", ",", "U2Nego_", ",", "U1Acq1_", ",", "U2Acq1_", ",", 
       "U1Acq2_", ",", "U2Acq2_", ",", "U1SQ_", ",", "U2SQ_", ",", 
       "\[Theta]_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "p1clprob", "}"}], ",", 
       RowBox[{
        RowBox[{"p1clprob", "=", 
         RowBox[{"p1cl", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", 
           "U1Acq2", ",", "U2Acq2", ",", "U1SQ", ",", "U2SQ"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Sqrt", "[", "p1clprob", "]"}], " ", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"I", " ", 
            RowBox[{"Re", "[", "\[Theta]", "]"}]}], ")"}]}]}]}]}], "]"}]}], 
    ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Added", " ", "phase", " ", "parameter", " ", "to", " ", "function", " ",
       "arguments"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"notp1quantum", "[", 
      RowBox[{
      "U1War2_", ",", "U1Cap1_", ",", "U1Cap2_", ",", "U2War2_", ",", 
       "U2Cap1_", ",", "U1War1_", ",", "U2War1_", ",", "U2Cap2_", ",", 
       "U1Nego_", ",", "U2Nego_", ",", "U1Acq1_", ",", "U2Acq1_", ",", 
       "U1Acq2_", ",", "U2Acq2_", ",", "U1SQ_", ",", "U2SQ_", ",", 
       "\[Theta]_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "notp1clprob", "}"}], ",", 
       RowBox[{
        RowBox[{"notp1clprob", "=", 
         RowBox[{"notp1cl", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", 
           "U1Acq2", ",", "U2Acq2", ",", "U1SQ", ",", "U2SQ"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Sqrt", "[", "notp1clprob", "]"}], " ", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"I", " ", 
            RowBox[{"Re", "[", 
             RowBox[{"\[Theta]", "+", "\[Pi]"}], "]"}]}], ")"}]}]}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.955156885744288*^9, 3.9551568924445543`*^9}, {
  3.955157024733555*^9, 3.955157025108288*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"007b737d-0ce1-482a-a193-e472759dea0b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["BACKWARD INDUCTION OUTCOME FUNCTIONS-QUANTUM-LIKE SETTING", "Subsection",
 CellChangeTimes->{{3.901470122252499*^9, 3.901470128058572*^9}, {
   3.955156380370985*^9, 3.95515639503491*^9}, {3.9551566623507967`*^9, 
   3.9551566709175653`*^9}, 
   3.95515686680711*^9},ExpressionUUID->"b38c288b-c0c0-4ebd-bf03-\
12d9bca120f8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"CORRECTED", ":", 
    RowBox[{
    "Updated", " ", "function", " ", "to", " ", "use", " ", "new", " ", 
     "quantum", " ", "amplitude", " ", "functions", " ", "with", " ", 
     "explicit", " ", "phase", " ", "parameters"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"SQquantum", "[", 
      RowBox[{
      "U1War2_", ",", "U1Cap1_", ",", "U1Cap2_", ",", "U2War2_", ",", 
       "U2Cap1_", ",", "U1War1_", ",", "U2War1_", ",", "U2Cap2_", ",", 
       "U1Nego_", ",", "U2Nego_", ",", "U1Acq1_", ",", "U2Acq1_", ",", 
       "U1Acq2_", ",", "U2Acq2_", ",", "U1SQ_", ",", "U2SQ_", ",", 
       "\[Theta]1_", ",", "\[Theta]2_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"term1", ",", "conjugate", ",", "notp1", ",", "notq2"}], 
        "}"}], ",", 
       RowBox[{
        RowBox[{"notp1", "=", 
         RowBox[{"notp1quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", 
           "U1Acq2", ",", "U2Acq2", ",", "U1SQ", ",", "U2SQ", ",", 
           "\[Theta]1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"notq2", "=", 
         RowBox[{"notq2quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", "U2SQ",
            ",", "\[Theta]2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"term1", "=", 
         RowBox[{"notp1", " ", "notq2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"conjugate", "=", 
         RowBox[{"Conjugate", "[", "term1", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Abs", "[", 
         RowBox[{"term1", " ", "conjugate"}], "]"}]}]}], "]"}]}], ";"}], "\n",
    "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Updated", " ", "function", " ", "to", " ", "use", " ", "new", " ", 
      "quantum", " ", "amplitude", " ", "functions", " ", "with", " ", 
      "explicit", " ", "phase", " ", "parameters"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ACQ1quantum", "[", 
      RowBox[{
      "U1War2_", ",", "U1Cap1_", ",", "U1Cap2_", ",", "U2War2_", ",", 
       "U2Cap1_", ",", "U1War1_", ",", "U2War1_", ",", "U2Cap2_", ",", 
       "U1Nego_", ",", "U2Nego_", ",", "U1Acq1_", ",", "U2Acq1_", ",", 
       "U1Acq2_", ",", "U2Acq2_", ",", "U1SQ_", ",", "U2SQ_", ",", 
       "\[Theta]1_", ",", "\[Theta]2_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "notp1", ",", "q2", ",", "notq2", ",", "notp4", ",", "term1", ",", 
         "conjugate"}], "}"}], ",", 
       RowBox[{
        RowBox[{"notp1", "=", 
         RowBox[{"notp1quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", 
           "U1Acq2", ",", "U2Acq2", ",", "U1SQ", ",", "U2SQ", ",", 
           "\[Theta]1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"q2", "=", 
         RowBox[{"q2quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", "U2SQ",
            ",", "\[Theta]2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"notp4", "=", 
         RowBox[{"notp4quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "\[Theta]1"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"term1", "=", 
         RowBox[{"notp1", " ", "q2", " ", "notp4"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"conjugate", "=", 
         RowBox[{"Conjugate", "[", "term1", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"term1", " ", "conjugate"}]}]}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Updated", " ", "function", " ", "to", " ", "use", " ", "new", " ", 
      "quantum", " ", "amplitude", " ", "functions", " ", "with", " ", 
      "explicit", " ", "phase", " ", "parameters"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ACQ2quantum", "[", 
      RowBox[{
      "U1War2_", ",", "U1Cap1_", ",", "U1Cap2_", ",", "U2War2_", ",", 
       "U2Cap1_", ",", "U1War1_", ",", "U2War1_", ",", "U2Cap2_", ",", 
       "U1Nego_", ",", "U2Nego_", ",", "U1Acq1_", ",", "U2Acq1_", ",", 
       "U1Acq2_", ",", "U2Acq2_", ",", "U1SQ_", ",", "U2SQ_", ",", 
       "\[Theta]1_", ",", "\[Theta]2_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p1", ",", "notq3", ",", "term1", ",", "conjugate"}], "}"}], 
       ",", 
       RowBox[{
        RowBox[{"p1", "=", 
         RowBox[{"p1quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", 
           "U1Acq2", ",", "U2Acq2", ",", "U1SQ", ",", "U2SQ", ",", 
           "\[Theta]1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"notq3", "=", 
         RowBox[{"notq3quantum", "[", 
          RowBox[{
          "U1Cap1", ",", "U2Cap1", ",", "U1Cap2", ",", "U2Cap2", ",", 
           "U1War1", ",", "U2War1", ",", "U1War2", ",", "U2War2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U2Acq2", ",", "\[Theta]2"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"term1", "=", 
         RowBox[{"p1", " ", "notq3"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"conjugate", "=", 
         RowBox[{"Conjugate", "[", "term1", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"term1", " ", "conjugate"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Updated", " ", "function", " ", "to", " ", "use", " ", "new", " ", 
      "quantum", " ", "amplitude", " ", "functions", " ", "with", " ", 
      "explicit", " ", "phase", " ", "parameters"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"NEGOquantum", "[", 
      RowBox[{
      "U1War2_", ",", "U1Cap1_", ",", "U1Cap2_", ",", "U2War2_", ",", 
       "U2Cap1_", ",", "U1War1_", ",", "U2War1_", ",", "U2Cap2_", ",", 
       "U1Nego_", ",", "U2Nego_", ",", "U1Acq1_", ",", "U2Acq1_", ",", 
       "U1Acq2_", ",", "U2Acq2_", ",", "U1SQ_", ",", "U2SQ_", ",", 
       "\[Theta]1_", ",", "\[Theta]2_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "p1", ",", "notp1", ",", "q2", ",", "q3", ",", "p4", ",", "q6", ",", 
         "p8", ",", "q9", ",", "p12", ",", "notp5", ",", "notq6", ",", 
         "notp7", ",", "notq9", ",", "term1", ",", "conjugate"}], "}"}], ",", 
       
       RowBox[{
        RowBox[{"p1", "=", 
         RowBox[{"p1quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", 
           "U1Acq2", ",", "U2Acq2", ",", "U1SQ", ",", "U2SQ", ",", 
           "\[Theta]1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"notp1", "=", 
         RowBox[{"notp1quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", 
           "U1Acq2", ",", "U2Acq2", ",", "U1SQ", ",", "U2SQ", ",", 
           "\[Theta]1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"p4", " ", "=", " ", 
         RowBox[{"p4quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "\[Theta]1"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"q2", "=", 
         RowBox[{"q2quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", "U2SQ",
            ",", "\[Theta]2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"q3", "=", 
         RowBox[{"q3quantum", "[", 
          RowBox[{
          "U1Cap1", ",", "U2Cap1", ",", "U1Cap2", ",", "U2Cap2", ",", 
           "U1War1", ",", "U2War1", ",", "U1War2", ",", "U2War2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U2Acq2", ",", "\[Theta]2"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"notp5", "=", 
         RowBox[{"notp5quantum", "[", 
          RowBox[{
          "U1Cap1", ",", "U2Cap1", ",", "U1Cap2", ",", "U2Cap2", ",", 
           "U1War1", ",", "U2War1", ",", "U1War2", ",", "U2War2", ",", 
           "U1Nego", ",", "U2Nego", ",", "\[Theta]1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"q9", "=", 
         RowBox[{"q9quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U2War2", ",", "U2Cap1", ",", 
           "U2Nego", ",", "\[Theta]2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"q6", " ", "=", 
         RowBox[{"q6quantum", "[", 
          RowBox[{
          "U1War1", ",", "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", 
           "U2War2", ",", "U2Cap1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "\[Theta]2"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"p8", "=", 
         RowBox[{"p8quantum", "[", 
          RowBox[{"U1War2", ",", "U1Cap1", ",", "\[Theta]1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"p12", "=", 
         RowBox[{"p12quantum", "[", 
          RowBox[{"U1War2", ",", "U1Cap1", ",", "\[Theta]1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"term1", "=", 
         RowBox[{
          RowBox[{"notp1", " ", "q2", " ", "p4", " ", "q6", " ", "p8"}], "+", 
          
          RowBox[{"p1", " ", "q3", " ", "notp5", " ", "q9", " ", "p12"}]}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"conjugate", "=", 
         RowBox[{"Conjugate", "[", "term1", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"term1", " ", "conjugate"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Updated", " ", "function", " ", "to", " ", "use", " ", "new", " ", 
      "quantum", " ", "amplitude", " ", "functions", " ", "with", " ", 
      "explicit", " ", "phase", " ", "parameters"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CAP1quantum", "[", 
      RowBox[{
      "U1War2_", ",", "U1Cap1_", ",", "U1Cap2_", ",", "U2War2_", ",", 
       "U2Cap1_", ",", "U1War1_", ",", "U2War1_", ",", "U2Cap2_", ",", 
       "U1Nego_", ",", "U2Nego_", ",", "U1Acq1_", ",", "U2Acq1_", ",", 
       "U1Acq2_", ",", "U2Acq2_", ",", "U1SQ_", ",", "U2SQ_", ",", 
       "\[Theta]1_", ",", "\[Theta]2_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "notp1", ",", "p1", ",", "q2", ",", "p4", ",", "q6", ",", "notp8", 
         ",", "q3", ",", "notp5", ",", "q9", ",", "notp12", ",", "term1", ",",
          "conjugate"}], "}"}], ",", 
       RowBox[{
        RowBox[{"notp1", "=", 
         RowBox[{"notp1quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", 
           "U1Acq2", ",", "U2Acq2", ",", "U1SQ", ",", "U2SQ", ",", 
           "\[Theta]1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"q2", "=", 
         RowBox[{"q2quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", "U2SQ",
            ",", "\[Theta]2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"p4", "=", 
         RowBox[{"p4quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "\[Theta]1"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"q6", "=", 
         RowBox[{"q6quantum", "[", 
          RowBox[{
          "U1War1", ",", "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", 
           "U2War2", ",", "U2Cap1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "\[Theta]2"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"notp8", "=", 
         RowBox[{"notp8quantum", "[", 
          RowBox[{"U1War2", ",", "U1Cap1", ",", "\[Theta]1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"p1", "=", 
         RowBox[{"p1quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", 
           "U1Acq2", ",", "U2Acq2", ",", "U1SQ", ",", "U2SQ", ",", 
           "\[Theta]1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"q3", "=", 
         RowBox[{"q3quantum", "[", 
          RowBox[{
          "U1Cap1", ",", "U2Cap1", ",", "U1Cap2", ",", "U2Cap2", ",", 
           "U1War1", ",", "U2War1", ",", "U1War2", ",", "U2War2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U2Acq2", ",", "\[Theta]2"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"notp5", "=", 
         RowBox[{"notp5quantum", "[", 
          RowBox[{
          "U1Cap1", ",", "U2Cap1", ",", "U1Cap2", ",", "U2Cap2", ",", 
           "U1War1", ",", "U2War1", ",", "U1War2", ",", "U2War2", ",", 
           "U1Nego", ",", "U2Nego", ",", "\[Theta]1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"q9", "=", 
         RowBox[{"q9quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U2War2", ",", "U2Cap1", ",", 
           "U2Nego", ",", "\[Theta]2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"notp12", "=", 
         RowBox[{"notp12quantum", "[", 
          RowBox[{"U1War2", ",", "U1Cap1", ",", "\[Theta]1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"term1", "=", 
         RowBox[{
          RowBox[{"notp1", " ", "q2", " ", "p4", " ", "q6", " ", "notp8"}], 
          "+", 
          RowBox[{
          "p1", " ", "q3", " ", "notp5", " ", "q9", " ", "notp12"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"conjugate", "=", 
         RowBox[{"Conjugate", "[", "term1", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"term1", " ", "conjugate"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Updated", " ", "function", " ", "to", " ", "use", " ", "new", " ", 
      "quantum", " ", "amplitude", " ", "functions", " ", "with", " ", 
      "explicit", " ", "phase", " ", "parameters"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CAP2quantum", "[", 
      RowBox[{
      "U1War2_", ",", "U1Cap1_", ",", "U1Cap2_", ",", "U2War2_", ",", 
       "U2Cap1_", ",", "U1War1_", ",", "U2War1_", ",", "U2Cap2_", ",", 
       "U1Nego_", ",", "U2Nego_", ",", "U1Acq1_", ",", "U2Acq1_", ",", 
       "U1Acq2_", ",", "U2Acq2_", ",", "U1SQ_", ",", "U2SQ_", ",", 
       "\[Theta]1_", ",", "\[Theta]2_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "notp1", ",", "q2", ",", "p1", ",", "p4", ",", "notq6", ",", "q6", 
         ",", "p7", ",", "notp8", ",", "q3", ",", "notp5", ",", "q9", ",", 
         "notp12", ",", "notq11", ",", "term1", ",", "conjugate", ",", "p5", 
         ",", "notq10"}], "}"}], ",", 
       RowBox[{
        RowBox[{"notp1", "=", 
         RowBox[{"notp1quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", 
           "U1Acq2", ",", "U2Acq2", ",", "U1SQ", ",", "U2SQ", ",", 
           "\[Theta]1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"q2", "=", 
         RowBox[{"q2quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", "U2SQ",
            ",", "\[Theta]2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"p4", "=", 
         RowBox[{"p4quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "\[Theta]1"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"notq6", "=", 
         RowBox[{"notq6quantum", "[", 
          RowBox[{
          "U1War1", ",", "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", 
           "U2War2", ",", "U2Cap1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "\[Theta]2"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"p7", "=", 
         RowBox[{"p7quantum", "[", 
          RowBox[{
          "U1War1", ",", "U1Cap2", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "\[Theta]1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"notp8", "=", 
         RowBox[{"notp8quantum", "[", 
          RowBox[{"U1War2", ",", "U1Cap1", ",", "\[Theta]1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"p1", "=", 
         RowBox[{"p1quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", 
           "U1Acq2", ",", "U2Acq2", ",", "U1SQ", ",", "U2SQ", ",", 
           "\[Theta]1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"q3", "=", 
         RowBox[{"q3quantum", "[", 
          RowBox[{
          "U1Cap1", ",", "U2Cap1", ",", "U1Cap2", ",", "U2Cap2", ",", 
           "U1War1", ",", "U2War1", ",", "U1War2", ",", "U2War2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U2Acq2", ",", "\[Theta]2"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"notp5", "=", 
         RowBox[{"notp5quantum", "[", 
          RowBox[{
          "U1Cap1", ",", "U2Cap1", ",", "U1Cap2", ",", "U2Cap2", ",", 
           "U1War1", ",", "U2War1", ",", "U1War2", ",", "U2War2", ",", 
           "U1Nego", ",", "U2Nego", ",", "\[Theta]1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"p5", "=", 
         RowBox[{"p5quantum", "[", 
          RowBox[{
          "U1Cap1", ",", "U2Cap1", ",", "U1Cap2", ",", "U2Cap2", ",", 
           "U1War1", ",", "U2War1", ",", "U1War2", ",", "U2War2", ",", 
           "U1Nego", ",", "U2Nego", ",", "\[Theta]1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"q9", "=", 
         RowBox[{"q9quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U2War2", ",", "U2Cap1", ",", 
           "U2Nego", ",", "\[Theta]2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"notp12", "=", 
         RowBox[{"notp12quantum", "[", 
          RowBox[{"U1War2", ",", "U1Cap1", ",", "\[Theta]1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"notq11", "=", 
         RowBox[{"notq11quantum", "[", 
          RowBox[{"U2War1", ",", "U2Cap2", ",", "\[Theta]2"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"notq10", "=", 
         RowBox[{"notq10quantum", "[", 
          RowBox[{"U2War1", ",", "U2Cap2", ",", "\[Theta]2"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"term1", "=", 
         RowBox[{
          RowBox[{
          "notp1", " ", "q2", " ", "p4", " ", "notq6", " ", "p7", " ", 
           "notq11"}], "+", 
          RowBox[{"p1", " ", "q3", " ", "p5", " ", "notq10"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"conjugate", "=", 
         RowBox[{"Conjugate", "[", "term1", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"term1", " ", "conjugate"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Updated", " ", "function", " ", "to", " ", "use", " ", "new", " ", 
      "quantum", " ", "amplitude", " ", "functions", " ", "with", " ", 
      "explicit", " ", "phase", " ", "parameters"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"WAR1quantum", "[", 
      RowBox[{
      "U1War2_", ",", "U1Cap1_", ",", "U1Cap2_", ",", "U2War2_", ",", 
       "U2Cap1_", ",", "U1War1_", ",", "U2War1_", ",", "U2Cap2_", ",", 
       "U1Nego_", ",", "U2Nego_", ",", "U1Acq1_", ",", "U2Acq1_", ",", 
       "U1Acq2_", ",", "U2Acq2_", ",", "U1SQ_", ",", "U2SQ_", ",", 
       "\[Theta]1_", ",", "\[Theta]2_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "notp1", ",", "p1", ",", "q2", ",", "p4", ",", "notq6", ",", "p7", 
         ",", "q11", ",", "q3", ",", "q10", ",", "p5", ",", "term1", ",", 
         "conjugate"}], "}"}], ",", 
       RowBox[{
        RowBox[{"notp1", "=", 
         RowBox[{"notp1quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", 
           "U1Acq2", ",", "U2Acq2", ",", "U1SQ", ",", "U2SQ", ",", 
           "\[Theta]1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"p1", "=", 
         RowBox[{"p1quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", 
           "U1Acq2", ",", "U2Acq2", ",", "U1SQ", ",", "U2SQ", ",", 
           "\[Theta]1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"q2", "=", 
         RowBox[{"q2quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", "U2SQ",
            ",", "\[Theta]2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"p4", "=", 
         RowBox[{"p4quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "\[Theta]1"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"notq6", "=", 
         RowBox[{"notq6quantum", "[", 
          RowBox[{
          "U1War1", ",", "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", 
           "U2War2", ",", "U2Cap1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "\[Theta]2"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"p7", "=", 
         RowBox[{"p7quantum", "[", 
          RowBox[{
          "U1War1", ",", "U1Cap2", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "\[Theta]1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"q11", "=", 
         RowBox[{"q11quantum", "[", 
          RowBox[{"U2War1", ",", "U2Cap2", ",", "\[Theta]2"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"q3", "=", 
         RowBox[{"q3quantum", "[", 
          RowBox[{
          "U1Cap1", ",", "U2Cap1", ",", "U1Cap2", ",", "U2Cap2", ",", 
           "U1War1", ",", "U2War1", ",", "U1War2", ",", "U2War2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U2Acq2", ",", "\[Theta]2"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"q10", "=", 
         RowBox[{"q10quantum", "[", 
          RowBox[{"U2War1", ",", "U2Cap2", ",", "\[Theta]2"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"p5", "=", 
         RowBox[{"p5quantum", "[", 
          RowBox[{
          "U1Cap1", ",", "U2Cap1", ",", "U1Cap2", ",", "U2Cap2", ",", 
           "U1War1", ",", "U2War1", ",", "U1War2", ",", "U2War2", ",", 
           "U1Nego", ",", "U2Nego", ",", "\[Theta]1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "p1"}], ")"}], "q2", " ", "p4", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "q6"}], ")"}], " ", "p7", " ", "q11"}], "+", 
           RowBox[{"p1", " ", "q3", " ", "p5", " ", "q10"}]}], ")"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"term1", "=", 
         RowBox[{
          RowBox[{
          "notp1", " ", "q2", " ", "p4", " ", "notq6", " ", "p7", " ", 
           "q11"}], "+", 
          RowBox[{"p1", " ", "q3", " ", "p5", " ", "q10"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"conjugate", "=", 
         RowBox[{"Conjugate", "[", "term1", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"term1", " ", "conjugate"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CORRECTED", ":", 
     RowBox[{
     "Updated", " ", "function", " ", "to", " ", "use", " ", "new", " ", 
      "quantum", " ", "amplitude", " ", "functions", " ", "with", " ", 
      "explicit", " ", "phase", " ", "parameters"}]}], "*)"}], 
   RowBox[{
    RowBox[{
     RowBox[{"WAR2quantum", "[", 
      RowBox[{
      "U1War2_", ",", "U1Cap1_", ",", "U1Cap2_", ",", "U2War2_", ",", 
       "U2Cap1_", ",", "U1War1_", ",", "U2War1_", ",", "U2Cap2_", ",", 
       "U1Nego_", ",", "U2Nego_", ",", "U1Acq1_", ",", "U2Acq1_", ",", 
       "U1Acq2_", ",", "U2Acq2_", ",", "U1SQ_", ",", "U2SQ_", ",", 
       "\[Theta]1_", ",", "\[Theta]2_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "notp1", ",", "p1", ",", "q2", ",", "p4", ",", "q6", ",", "q11", ",", 
         "p8", ",", "q3", ",", "q10", ",", "notp5", ",", "q9", ",", "p12", 
         ",", "term1", ",", "conjugate"}], "}"}], ",", 
       RowBox[{
        RowBox[{"notp1", "=", 
         RowBox[{"notp1quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", 
           "U1Acq2", ",", "U2Acq2", ",", "U1SQ", ",", "U2SQ", ",", 
           "\[Theta]1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"p1", "=", 
         RowBox[{"p1quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", 
           "U1Acq2", ",", "U2Acq2", ",", "U1SQ", ",", "U2SQ", ",", 
           "\[Theta]1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"q2", "=", 
         RowBox[{"q2quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", "U2SQ",
            ",", "\[Theta]2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"p4", "=", 
         RowBox[{"p4quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", 
           "U2Cap1", ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U1Acq1", ",", "\[Theta]1"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"q6", "=", 
         RowBox[{"q6quantum", "[", 
          RowBox[{
          "U1War1", ",", "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", 
           "U2War2", ",", "U2Cap1", ",", "U2War1", ",", "U2Cap2", ",", 
           "U1Nego", ",", "U2Nego", ",", "\[Theta]2"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"q11", "=", 
         RowBox[{"q11quantum", "[", 
          RowBox[{"U2War1", ",", "U2Cap2", ",", "\[Theta]2"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"p8", "=", 
         RowBox[{"p8quantum", "[", 
          RowBox[{"U1War2", ",", "U1Cap1", ",", "\[Theta]1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"q3", "=", 
         RowBox[{"q3quantum", "[", 
          RowBox[{
          "U1Cap1", ",", "U2Cap1", ",", "U1Cap2", ",", "U2Cap2", ",", 
           "U1War1", ",", "U2War1", ",", "U1War2", ",", "U2War2", ",", 
           "U1Nego", ",", "U2Nego", ",", "U2Acq2", ",", "\[Theta]2"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"q10", "=", 
         RowBox[{"q10quantum", "[", 
          RowBox[{"U2War1", ",", "U2Cap2", ",", "\[Theta]2"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"notp5", "=", 
         RowBox[{"notp5quantum", "[", 
          RowBox[{
          "U1Cap1", ",", "U2Cap1", ",", "U1Cap2", ",", "U2Cap2", ",", 
           "U1War1", ",", "U2War1", ",", "U1War2", ",", "U2War2", ",", 
           "U1Nego", ",", "U2Nego", ",", "\[Theta]1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"q9", "=", 
         RowBox[{"q9quantum", "[", 
          RowBox[{
          "U1War2", ",", "U1Cap1", ",", "U2War2", ",", "U2Cap1", ",", 
           "U2Nego", ",", "\[Theta]2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"p12", "=", 
         RowBox[{"p12quantum", "[", 
          RowBox[{"U1War2", ",", "U1Cap1", ",", "\[Theta]1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"(", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "p1"}], ")"}], " ", "q2", " ", "p4", " ", 
             "q6", " ", "p8"}], "+", 
            RowBox[{"p1", " ", "q3", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p5"}], ")"}], " ", "q9", " ", "p12"}]}], 
           ")"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"term1", "=", 
         RowBox[{
          RowBox[{"notp1", " ", "q2", " ", "p4", " ", "q6", " ", "p8"}], "+", 
          
          RowBox[{"p1", " ", "q3", " ", "notp5", " ", "q9", " ", "p12"}]}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"conjugate", "=", 
         RowBox[{"Conjugate", "[", "term1", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"term1", " ", "conjugate"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.955156979013577*^9, 3.955156979598337*^9}, {
   3.955157057925186*^9, 3.95515706034732*^9}, {3.958188889552545*^9, 
   3.9581889844050207`*^9}, {3.958189031298411*^9, 3.958189038295277*^9}, 
   3.958192226102964*^9},
 CellLabel->"In[51]:=",ExpressionUUID->"2d911716-9dc2-4aac-bb14-737c96342f7e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions", "Section",
 CellChangeTimes->{{3.901470103209635*^9, 3.901470108444337*^9}, {
  3.955156191541572*^9, 
  3.9551561935607967`*^9}},ExpressionUUID->"3b3fdcbd-9744-43c9-9a25-\
9207c002d31c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"makeplot", "[", 
   RowBox[{"Outcome_", ",", " ", "x_", ",", "y_", ",", "title_"}], "]"}], ":=",
   " ", 
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"Re", "[", "Outcome", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]1", ",", "0", ",", " ", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]2", ",", "0", ",", " ", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"ColorData", "[", "\"\<DarkRainbow\>\"", "]"}], "[", "#3", 
        "]"}], "&"}], ")"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(Player1\)]\)\>\"", ",", 
         "16"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(Player2\)]\)\>\"", ",", 
         "16"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Prob\>\"", ",", "16"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"BoundaryStyle", "\[Rule]", "Thick"}], ",", " ", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
    RowBox[{"Ticks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"Pi", "/", "2"}], ",", "Pi", ",", 
         RowBox[{"3", 
          RowBox[{"Pi", "/", "2"}]}], ",", 
         RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"Pi", "/", "2"}], ",", "Pi", ",", 
         RowBox[{"3", 
          RowBox[{"Pi", "/", "2"}]}], ",", 
         RowBox[{"2", " ", "Pi"}]}], "}"}], ",", " ", "Automatic"}], "}"}]}], 
    ",", 
    RowBox[{"TicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", "12"}], "]"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "title"}]}], "]"}]}]], "Input",
 CellLabel->"In[59]:=",ExpressionUUID->"e7b38313-d608-4ef9-881d-e4801613b3f4"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SetPhaseParameters", "[", 
    RowBox[{"\[Theta]1Value_", ",", "\[Theta]2Value_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]1", "=", "\[Theta]1Value"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Theta]2", "=", "\[Theta]2Value"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<Phase1\>\"", "->", "\[Theta]1"}], ",", 
        RowBox[{"\"\<Phase2\>\"", "->", "\[Theta]2"}]}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.955156334602179*^9, {3.958192397259918*^9, 3.9581923990692472`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"fd893a7d-0f42-40a0-9fad-400475895b01"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ComputeOutcomeProbabilities", "[", 
    RowBox[{"dataPoint_", ",", 
     RowBox[{"\[Theta]1_", ":", "0"}], ",", 
     RowBox[{"\[Theta]2_", ":", "0"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "U1War1", ",", "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U1Nego", 
       ",", "U1SQ", ",", "U1Acq1", ",", "U1Acq2", ",", "U2War1", ",", 
       "U2War2", ",", "U2Cap1", ",", "U2Cap2", ",", "U2Nego", ",", "U2SQ", 
       ",", "U2Acq1", ",", "U2Acq2", ",", "sq", ",", "acq1", ",", "acq2", ",",
        "nego", ",", "cap1", ",", "cap2", ",", "war1", ",", "war2", ",", 
       "total", ",", "probabilities"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Extract", " ", "utility", " ", "values", " ", "from", " ", "data", " ",
        "point"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"U1SQ", "=", 
       RowBox[{"dataPoint", "[", "\"\<U1SQ\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"U1Acq1", "=", 
       RowBox[{"dataPoint", "[", "\"\<U1Acq1\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"U1Acq2", "=", 
       RowBox[{"dataPoint", "[", "\"\<U1Acq2\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"U1Nego", "=", 
       RowBox[{"dataPoint", "[", "\"\<U1Nego\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"U1Cap1", "=", 
       RowBox[{"dataPoint", "[", "\"\<U1Cap1\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"U1Cap2", "=", 
       RowBox[{"dataPoint", "[", "\"\<U1Cap2\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"U1War1", "=", 
       RowBox[{"dataPoint", "[", "\"\<U1War1\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"U1War2", "=", 
       RowBox[{"dataPoint", "[", "\"\<U1War2\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"U2SQ", "=", 
       RowBox[{"dataPoint", "[", "\"\<U2SQ\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"U1SQ", " ", "=", " ", 
       RowBox[{"dataPoint", "[", "\"\<U1SQ\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"U2Acq2", "=", 
       RowBox[{"dataPoint", "[", "\"\<U2Acq2\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"U2Acq1", "=", 
       RowBox[{"dataPoint", "[", "\"\<U2Acq1\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"U2Nego", "=", 
       RowBox[{"dataPoint", "[", "\"\<U2Nego\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"U2Cap2", "=", 
       RowBox[{"dataPoint", "[", "\"\<U2Cap2\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"U2Cap1", "=", 
       RowBox[{"dataPoint", "[", "\"\<U2Cap1\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"U2War2", "=", 
       RowBox[{"dataPoint", "[", "\"\<U2War2\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"U2War1", "=", 
       RowBox[{"dataPoint", "[", "\"\<U2War1\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Add", " ", "numerical", " ", "stability", " ", "checks"}], 
       "*)"}], 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"AnyTrue", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "U1War1", ",", "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", 
            "U1Nego", ",", "U1SQ", ",", "U1Acq1", ",", "U1Acq2", ",", 
            "U2War1", ",", "U2War2", ",", "U2Cap1", ",", "U2Cap2", ",", 
            "U2Nego", ",", "U2SQ", ",", "U2Acq1", ",", "U2Acq2"}], "}"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Abs", "[", "#", "]"}], ">", 
             RowBox[{"10", "^", "6"}]}], "||", 
            RowBox[{
             RowBox[{"NumericQ", "[", "#", "]"}], "===", "False"}]}], "&"}]}],
          "]"}], ",", 
        RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Calculate", " ", "outcome", " ", "probabilities", " ", "using", " ", 
        "quantum", " ", "functions"}], "*)"}], 
      RowBox[{"sq", "=", 
       RowBox[{"SQquantum", "[", 
        RowBox[{
        "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", "U2Cap1", 
         ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", "U1Nego", ",", 
         "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", "U1Acq2", ",", "U2Acq2",
          ",", "U1SQ", ",", "U2SQ", ",", "\[Theta]1", ",", "\[Theta]2"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"acq1", "=", 
       RowBox[{"ACQ1quantum", "[", 
        RowBox[{
        "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", "U2Cap1", 
         ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", "U1Nego", ",", 
         "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", "U1Acq2", ",", "U2Acq2",
          ",", "U1SQ", ",", "U2SQ", ",", "\[Theta]1", ",", "\[Theta]2"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"acq2", "=", 
       RowBox[{"ACQ2quantum", "[", 
        RowBox[{
        "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", "U2Cap1", 
         ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", "U1Nego", ",", 
         "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", "U1Acq2", ",", "U2Acq2",
          ",", "U1SQ", ",", "U2SQ", ",", "\[Theta]1", ",", "\[Theta]2"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nego", "=", 
       RowBox[{"NEGOquantum", "[", 
        RowBox[{
        "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", "U2Cap1", 
         ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", "U1Nego", ",", 
         "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", "U1Acq2", ",", "U2Acq2",
          ",", "U1SQ", ",", "U2SQ", ",", "\[Theta]1", ",", "\[Theta]2"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cap1", "=", 
       RowBox[{"CAP1quantum", "[", 
        RowBox[{
        "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", "U2Cap1", 
         ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", "U1Nego", ",", 
         "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", "U1Acq2", ",", "U2Acq2",
          ",", "U1SQ", ",", "U2SQ", ",", "\[Theta]1", ",", "\[Theta]2"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cap2", "=", 
       RowBox[{"CAP2quantum", "[", 
        RowBox[{
        "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", "U2Cap1", 
         ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", "U1Nego", ",", 
         "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", "U1Acq2", ",", "U2Acq2",
          ",", "U1SQ", ",", "U2SQ", ",", "\[Theta]1", ",", "\[Theta]2"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"war1", "=", 
       RowBox[{"WAR1quantum", "[", 
        RowBox[{
        "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", "U2Cap1", 
         ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", "U1Nego", ",", 
         "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", "U1Acq2", ",", "U2Acq2",
          ",", "U1SQ", ",", "U2SQ", ",", "\[Theta]1", ",", "\[Theta]2"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"war2", "=", 
       RowBox[{"WAR2quantum", "[", 
        RowBox[{
        "U1War2", ",", "U1Cap1", ",", "U1Cap2", ",", "U2War2", ",", "U2Cap1", 
         ",", "U1War1", ",", "U2War1", ",", "U2Cap2", ",", "U1Nego", ",", 
         "U2Nego", ",", "U1Acq1", ",", "U2Acq1", ",", "U1Acq2", ",", "U2Acq2",
          ",", "U1SQ", ",", "U2SQ", ",", "\[Theta]1", ",", "\[Theta]2"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Calculate", " ", "absolute", " ", "values", " ", "to", " ", "handle", 
        " ", "complex", " ", "numbers"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"sq", "=", 
       RowBox[{"Abs", "[", "sq", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"acq1", "=", 
       RowBox[{"Abs", "[", "acq1", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"acq2", "=", 
       RowBox[{"Abs", "[", "acq2", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nego", "=", 
       RowBox[{"Abs", "[", "nego", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cap1", "=", 
       RowBox[{"Abs", "[", "cap1", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cap2", "=", 
       RowBox[{"Abs", "[", "cap2", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"war1", "=", 
       RowBox[{"Abs", "[", "war1", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"war2", "=", 
       RowBox[{"Abs", "[", "war2", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Calculate", " ", "total", " ", "probability"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"total", "=", 
       RowBox[{
       "sq", "+", "acq1", "+", "acq2", "+", "nego", "+", "cap1", "+", "cap2", 
        "+", "war1", "+", "war2"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Return", " ", "normalized", " ", "probabilities"}], "*)"}], 
      RowBox[{"probabilities", "=", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<SQ\>\"", "->", 
          RowBox[{"sq", "/", "total"}]}], ",", 
         RowBox[{"\"\<Acq1\>\"", "->", 
          RowBox[{"acq1", "/", "total"}]}], ",", 
         RowBox[{"\"\<Acq2\>\"", "->", 
          RowBox[{"acq2", "/", "total"}]}], ",", 
         RowBox[{"\"\<Nego\>\"", "->", 
          RowBox[{"nego", "/", "total"}]}], ",", 
         RowBox[{"\"\<Cap1\>\"", "->", 
          RowBox[{"cap1", "/", "total"}]}], ",", 
         RowBox[{"\"\<Cap2\>\"", "->", 
          RowBox[{"cap2", "/", "total"}]}], ",", 
         RowBox[{"\"\<War1\>\"", "->", 
          RowBox[{"war1", "/", "total"}]}], ",", 
         RowBox[{"\"\<War2\>\"", "->", 
          RowBox[{"war2", "/", "total"}]}]}], "|>"}]}], ";", 
      "\[IndentingNewLine]", "probabilities"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.958188028479432*^9, 3.958188029142188*^9}, 
   3.958188426148843*^9, {3.958188746442387*^9, 3.958188746642617*^9}, {
   3.958189430785038*^9, 3.958189432819625*^9}, {3.9581901862560177`*^9, 
   3.958190196186809*^9}, {3.9581902459570427`*^9, 3.958190268235736*^9}, {
   3.958190940292634*^9, 3.958190941270632*^9}, {3.958192293102193*^9, 
   3.958192294109291*^9}, {3.958192326300469*^9, 3.9581923439196253`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"da52d233-4936-4812-bb1a-80dfe6016f6a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LoadDataset", "[", "filePath_String", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"data", ",", "preparedData"}], "}"}], ",", 
    RowBox[{
     RowBox[{"data", "=", 
      RowBox[{"Import", "[", 
       RowBox[{"filePath", ",", "\"\<CSV\>\"", ",", 
        RowBox[{"\"\<HeaderLines\>\"", "->", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"preparedData", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<Player1\>\"", "->", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
          RowBox[{"\"\<Player2\>\"", "->", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
          RowBox[{"\"\<U1SQ\>\"", "->", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "3"}], "]"}], "]"}]}], ",", 
          RowBox[{"\"\<U1Acq1\>\"", "->", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "4"}], "]"}], "]"}]}], ",", 
          RowBox[{"\"\<U1Acq2\>\"", "->", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "5"}], "]"}], "]"}]}], ",", 
          RowBox[{"\"\<U1Nego\>\"", "->", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "6"}], "]"}], "]"}]}], ",", 
          RowBox[{"\"\<U1Cap1\>\"", "->", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "7"}], "]"}], "]"}]}], ",", 
          RowBox[{"\"\<U1Cap2\>\"", "->", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "8"}], "]"}], "]"}]}], ",", 
          RowBox[{"\"\<U1War1\>\"", "->", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "9"}], "]"}], "]"}]}], ",", 
          RowBox[{"\"\<U1War2\>\"", "->", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "10"}], "]"}], "]"}]}], ",", 
          RowBox[{"\"\<U2SQ\>\"", "->", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "11"}], "]"}], "]"}]}], ",", 
          RowBox[{"\"\<U2Acq2\>\"", "->", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "12"}], "]"}], "]"}]}], ",", 
          RowBox[{"\"\<U2Acq1\>\"", "->", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "13"}], "]"}], "]"}]}], ",", 
          RowBox[{"\"\<U2Nego\>\"", "->", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "14"}], "]"}], "]"}]}], ",", 
          RowBox[{"\"\<U2Cap2\>\"", "->", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "15"}], "]"}], "]"}]}], ",", 
          RowBox[{"\"\<U2Cap1\>\"", "->", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "16"}], "]"}], "]"}]}], ",", 
          RowBox[{"\"\<U2War2\>\"", "->", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "17"}], "]"}], "]"}]}], ",", 
          RowBox[{"\"\<U2War1\>\"", "->", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "18"}], "]"}], "]"}]}], ",", 
          RowBox[{"\"\<groundtruth\>\"", "->", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "19"}], "]"}], "]"}]}]}], "|>"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "preparedData"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9581897676983643`*^9, 3.9581897709352407`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"fd084cc0-e500-47c7-bfe0-b712e165d9b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetMaxProbabilityOutcome", "[", "probabilities_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"maxProb", ",", "maxLabel"}], "}"}], ",", 
    RowBox[{"(*", 
     RowBox[{"Find", " ", "the", " ", "maximum", " ", "probability"}], "*)"}],
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"maxProb", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"Values", "[", "probabilities", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Find", " ", "the", " ", "label", 
       RowBox[{"(", "s", ")"}], " ", "corresponding", " ", "to", " ", "the", 
       " ", "maximum", " ", "probability"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"maxLabel", "=", 
      RowBox[{"Keys", "[", 
       RowBox[{"Select", "[", 
        RowBox[{"probabilities", ",", 
         RowBox[{
          RowBox[{"#", "==", "maxProb"}], "&"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Return", " ", "an", " ", "association", " ", "with", " ", "the", " ", 
       "result"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<MaxProbability\>\"", "->", "maxProb"}], ",", 
       RowBox[{"\"\<Outcome\>\"", "->", 
        RowBox[{"First", "[", "maxLabel", "]"}]}]}], "|>"}]}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[63]:=",ExpressionUUID->"37060cb3-84b8-44d9-b98a-5e96a9c344a9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CompareWithGroundtruth", "[", 
    RowBox[{"outcomes_", ",", "groundtruth_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "predictedOutcome", ",", "groundtruthStandard", ",", "isCorrect"}], 
      "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{
      "Get", " ", "the", " ", "actual", " ", "predicted", " ", "outcome"}], 
      "*)"}], 
     RowBox[{
      RowBox[{"predictedOutcome", "=", 
       RowBox[{
        RowBox[{"GetMaxProbabilityOutcome", "[", "outcomes", "]"}], "[", 
        "\"\<Outcome\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Check", " ", "if", " ", "the", " ", "prediction", " ", "matches", " ",
         "the", " ", "groundtruth"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"isCorrect", "=", 
       RowBox[{"predictedOutcome", "==", "groundtruth"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Return", " ", "the", " ", "comparison", " ", "results"}], 
       "*)"}], 
      RowBox[{"Return", "[", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<PredictedOutcome\>\"", "->", "predictedOutcome"}], ",", 
         
         RowBox[{"\"\<GroundtruthOutcome\>\"", "->", "groundtruth"}], ",", 
         RowBox[{"\"\<IsCorrect\>\"", "->", "isCorrect"}]}], "|>"}], "]"}], 
      ";"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9581903973558683`*^9, 3.958190460985188*^9}, {
  3.958190534089403*^9, 3.95819055916028*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"b0c03dd3-7d7a-4441-8a85-b77dd84b6725"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CompareClassicalQuantum", "[", 
    RowBox[{"dataPoint_", ",", 
     RowBox[{"\[Theta]1_", ":", "0"}], ",", 
     RowBox[{"\[Theta]2_", ":", "0"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"classicalProbs", ",", "quantumResult", ",", "comparison"}], 
      "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{"Classical", " ", "probabilities", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"using", " ", "\[Theta]"}], "=", "0"}], ")"}]}], "*)"}], 
     RowBox[{
      RowBox[{"classicalProbs", "=", 
       RowBox[{"ComputeOutcomeProbabilities", "[", 
        RowBox[{"dataPoint", ",", 
         RowBox[{"\[Pi]", "/", "2"}], ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Quantum", " ", "probabilities"}], "*)"}], 
      RowBox[{"quantumResult", "=", 
       RowBox[{"ComputeOutcomeProbabilities", "[", 
        RowBox[{"dataPoint", ",", "\[Theta]1", ",", "\[Theta]2"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"classicalProbs", "===", "$Failed"}], "||", 
         RowBox[{"quantumResult", "===", "$Failed"}]}], ",", 
        RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Calculate", " ", "differences"}], "*)"}], 
      RowBox[{"comparison", "=", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Classical\>\"", "->", 
          RowBox[{"classicalProbs", "[", "\"\<Probabilities\>\"", "]"}]}], 
         ",", 
         RowBox[{"\"\<Quantum\>\"", "->", 
          RowBox[{"quantumResult", "[", "\"\<Probabilities\>\"", "]"}]}], ",", 
         RowBox[{"\"\<Differences\>\"", "->", 
          RowBox[{
           RowBox[{"quantumResult", "[", "\"\<Probabilities\>\"", "]"}], "-", 
           
           RowBox[{"classicalProbs", "[", "\"\<Probabilities\>\"", "]"}]}]}], 
         ",", 
         RowBox[{"\"\<MaxDifference\>\"", "->", 
          RowBox[{"Max", "[", 
           RowBox[{"Abs", "[", 
            RowBox[{"Values", "[", 
             RowBox[{
              RowBox[{"quantumResult", "[", "\"\<Probabilities\>\"", "]"}], 
              "-", 
              RowBox[{"classicalProbs", "[", "\"\<Probabilities\>\"", "]"}]}],
              "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"\"\<ClassicalPrediction\>\"", "->", 
          RowBox[{
           RowBox[{"GetMaxProbabilityOutcome", "[", 
            RowBox[{"classicalProbs", "[", "\"\<Probabilities\>\"", "]"}], 
            "]"}], "[", "\"\<Outcome\>\"", "]"}]}], ",", 
         RowBox[{"\"\<QuantumPrediction\>\"", "->", 
          RowBox[{
           RowBox[{"GetMaxProbabilityOutcome", "[", 
            RowBox[{"quantumResult", "[", "\"\<Probabilities\>\"", "]"}], 
            "]"}], "[", "\"\<Outcome\>\"", "]"}]}]}], "|>"}]}], ";", 
      "\[IndentingNewLine]", "comparison"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9581923812362957`*^9, 3.958192381238245*^9}, {
  3.95819241376832*^9, 3.958192430186256*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"e276e700-71d7-41ec-9adf-5604169f0560"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Enhanced", " ", "Theta", " ", "Optimization", " ", "Function", " ", "for",
     " ", "Quantum", " ", "Extensive", " ", "Form", " ", "Game"}], "*)"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
      "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{"CORE", " ", "THETA", " ", "OPTIMIZATION", " ", "FUNCTION"}], 
   "*)"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
      "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"FindOptimalThetas", "[", 
      RowBox[{"dataset_", ",", 
       RowBox[{"thetaGridSize_", ":", "10"}], ",", 
       RowBox[{"optimizationMethod_", ":", "\"\<GridSearch\>\""}], ",", 
       RowBox[{"numRandomSamples_", ":", "100"}], ",", 
       RowBox[{"verbose_", ":", "False"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"thetaValues", ",", 
         RowBox[{"bestAccuracy", "=", 
          RowBox[{"-", "Infinity"}]}], ",", 
         RowBox[{"bestThetas", "=", 
          RowBox[{"{", "}"}]}], ",", "currentAccuracy", ",", "results", ",", 
         "theta1", ",", "theta2", ",", "numToTest", ",", "statusCounter", ",",
          "correctCount", ",", "totalCount"}], "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Safe", " ", "computation", " ", "function", " ", "to", " ", "handle",
          " ", "potential", " ", "errors"}], "*)"}], 
       RowBox[{
        RowBox[{
         RowBox[{"SafeComputeProbabilities", "[", 
          RowBox[{"dataPoint_", ",", "theta1_", ",", "theta2_"}], "]"}], ":=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "result", "}"}], ",", 
           RowBox[{
            RowBox[{"result", "=", 
             RowBox[{"Check", "[", 
              RowBox[{
               RowBox[{"ComputeOutcomeProbabilities", "[", 
                RowBox[{"dataPoint", ",", "theta1", ",", "theta2"}], "]"}], 
               ",", "$Failed", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Power", "::", "infy"}], ",", 
                 RowBox[{"Infinity", "::", "indet"}], ",", 
                 RowBox[{"General", "::", "stop"}], ",", 
                 RowBox[{"NumericFunction", "::", "argx"}], ",", 
                 RowBox[{"NumericFunction", "::", "argr"}], ",", 
                 RowBox[{"Values", "::", "invrl"}]}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "result"}]}], "\[IndentingNewLine]", 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Safe", " ", "comparison", " ", "function"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"SafeCompareWithGroundtruth", "[", 
          RowBox[{"outcomes_", ",", "groundtruth_"}], "]"}], ":=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "result", "}"}], ",", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"outcomes", "===", "$Failed"}], "||", 
               RowBox[{"!", 
                RowBox[{"AssociationQ", "[", "outcomes", "]"}]}]}], ",", 
              RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"result", "=", 
             RowBox[{"Check", "[", 
              RowBox[{
               RowBox[{"CompareWithGroundtruth", "[", 
                RowBox[{"outcomes", ",", "groundtruth"}], "]"}], ",", 
               "$Failed", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Part", "::", "partw"}], ",", 
                 RowBox[{"Part", "::", "partd"}], ",", 
                 RowBox[{"General", "::", "stop"}]}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "result"}]}], "\[IndentingNewLine]", 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Create", " ", "grid", " ", "of", " ", "theta", " ", "values"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"thetaValues", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"2", " ", "Pi", "*", 
             RowBox[{"i", "/", "thetaGridSize"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", 
             RowBox[{"thetaGridSize", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Determine", " ", "method", " ", "and", " ", "number", " ", "of", 
          " ", "tests"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"optimizationMethod", "==", "\"\<GridSearch\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Grid", " ", "search"}], "-", 
            RowBox[{
            "test", " ", "all", " ", "combinations", " ", "of", " ", "2", " ",
              "thetas"}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"numToTest", "=", 
            RowBox[{"thetaGridSize", "^", "2"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"numToTest", ">", "10000"}], ",", "\[IndentingNewLine]", 
             
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{
               "\"\<Warning: Grid search will test \>\"", ",", "numToTest", 
                ",", "\"\< combinations. This may take a long time.\>\""}], 
               "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"Progress", " ", "tracking"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"statusCounter", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"Grid", " ", "search", " ", "loop"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"statusCounter", "++"}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "Update", " ", "progress", " ", "every", " ", "5", "%"}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{"statusCounter", ",", 
                   RowBox[{"Max", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{"numToTest", "/", "20"}], "]"}]}], "]"}]}], "]"}],
                  "==", "0"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Print", "[", 
                  RowBox[{"\"\<Progress: \>\"", ",", 
                   RowBox[{"Round", "[", 
                    RowBox[{"100.0", "*", 
                    RowBox[{"statusCounter", "/", "numToTest"}]}], "]"}], 
                   ",", "\"\<% complete\>\""}], "]"}], ";"}]}], "]"}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "Test", " ", "current", " ", "theta", " ", "combination"}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"correctCount", ",", "totalCount"}], "}"}], "=", 
               RowBox[{"TestThetaCombination", "[", 
                RowBox[{"dataset", ",", "theta1", ",", "theta2"}], "]"}]}], 
              ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"Calculate", " ", "accuracy"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"totalCount", ">", "0"}], ",", 
                RowBox[{
                 RowBox[{"currentAccuracy", "=", 
                  RowBox[{"N", "[", 
                   RowBox[{"correctCount", "/", "totalCount"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Update", " ", "best", " ", "result", " ", "if", " ", 
                   "improved"}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"currentAccuracy", ">", "bestAccuracy"}], ",", 
                   RowBox[{
                    RowBox[{"bestAccuracy", "=", "currentAccuracy"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"bestThetas", "=", 
                    RowBox[{"{", 
                    RowBox[{"theta1", ",", "theta2"}], "}"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{"verbose", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<New best accuracy found: \>\"", ",", "bestAccuracy", 
                    ",", "\"\< (\>\"", ",", "correctCount", ",", 
                    "\"\< correct out of \>\"", ",", "totalCount", ",", 
                    "\"\<) with thetas: \>\"", ",", "bestThetas"}], "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
                  "\[IndentingNewLine]", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}], ",", 
             RowBox[{"{", 
              RowBox[{"theta1", ",", "thetaValues"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"theta2", ",", "thetaValues"}], "}"}]}], 
            "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Random", " ", "sampling", " ", "strategy"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{
               "\"\<Using random sampling strategy with \>\"", ",", 
                "numRandomSamples", ",", "\"\< samples\>\""}], "]"}], ";"}]}],
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{"(*", 
             RowBox[{"Randomly", " ", "sample", " ", "thetas"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"theta1", "=", 
               RowBox[{"RandomReal", "[", 
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"2", " ", "Pi"}]}], "}"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"theta2", "=", 
               RowBox[{"RandomReal", "[", 
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"2", " ", "Pi"}]}], "}"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"Report", " ", "progress"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"verbose", "&&", 
                 RowBox[{
                  RowBox[{"Mod", "[", 
                   RowBox[{"i", ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{"numRandomSamples", "/", "10"}], "]"}]}], "]"}]}],
                    "]"}], "==", "0"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Print", "[", 
                  RowBox[{"\"\<Progress: \>\"", ",", 
                   RowBox[{"Round", "[", 
                    RowBox[{"100.0", "*", 
                    RowBox[{"i", "/", "numRandomSamples"}]}], "]"}], ",", 
                   "\"\<% complete\>\""}], "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "Test", " ", "current", " ", "theta", " ", "combination"}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"correctCount", ",", "totalCount"}], "}"}], "=", 
               RowBox[{"TestThetaCombination", "[", 
                RowBox[{"dataset", ",", "theta1", ",", "theta2"}], "]"}]}], 
              ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"Calculate", " ", "accuracy"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"totalCount", ">", "0"}], ",", 
                RowBox[{
                 RowBox[{"currentAccuracy", "=", 
                  RowBox[{"N", "[", 
                   RowBox[{"correctCount", "/", "totalCount"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Update", " ", "best", " ", "result", " ", "if", " ", 
                   "improved"}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"currentAccuracy", ">", "bestAccuracy"}], ",", 
                   RowBox[{
                    RowBox[{"bestAccuracy", "=", "currentAccuracy"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"bestThetas", "=", 
                    RowBox[{"{", 
                    RowBox[{"theta1", ",", "theta2"}], "}"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{"verbose", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<New best accuracy found: \>\"", ",", "bestAccuracy", 
                    ",", "\"\< (\>\"", ",", "correctCount", ",", 
                    "\"\< correct out of \>\"", ",", "totalCount", ",", 
                    "\"\<) with thetas: \>\"", ",", "bestThetas"}], "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
                  "\[IndentingNewLine]", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "numRandomSamples"}], "}"}]}], 
            "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
        RowBox[{"(*", 
         RowBox[{"end", " ", "main", " ", "If"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Check", " ", "if", " ", "we", " ", "found", " ", "any", " ", 
          "valid", " ", "thetas"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"bestThetas", "===", 
           RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<Warning: No valid theta combinations found. Try adjusting \
parameters.\>\"", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Return", "[", 
            RowBox[{"<|", 
             RowBox[{
              RowBox[{"\"\<BestThetas\>\"", "->", 
               RowBox[{"{", "}"}]}], ",", 
              RowBox[{"\"\<Accuracy\>\"", "->", "0"}], ",", 
              RowBox[{"\"\<CorrectPredictions\>\"", "->", "0"}], ",", 
              RowBox[{"\"\<TotalCases\>\"", "->", "0"}], ",", 
              RowBox[{"\"\<Method\>\"", "->", "optimizationMethod"}]}], 
             "|>"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Return", " ", "results"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<BestThetas\>\"", "->", "bestThetas"}], ",", 
          RowBox[{"\"\<Accuracy\>\"", "->", "bestAccuracy"}], ",", 
          RowBox[{"\"\<CorrectPredictions\>\"", "->", "correctCount"}], ",", 
          RowBox[{"\"\<TotalCases\>\"", "->", "totalCount"}], ",", 
          RowBox[{"\"\<Method\>\"", "->", "optimizationMethod"}]}], 
         "|>"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"HELPER", " ", "FUNCTIONS"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Test", " ", "a", " ", "specific", " ", "theta", " ", "combination", " ", 
     "on", " ", "the", " ", "entire", " ", "dataset"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"TestThetaCombination", "[", 
      RowBox[{"dataset_", ",", "theta1_", ",", "theta2_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"correctCount", "=", "0"}], ",", 
         RowBox[{"totalCount", "=", "0"}], ",", "outcomes", ",", "comparison",
          ",", "dataPoint"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"dataPoint", "=", 
            RowBox[{"dataset", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"Compute", " ", "outcome", " ", "probabilities"}], "*)"}], 
           RowBox[{"outcomes", "=", 
            RowBox[{"Check", "[", 
             RowBox[{
              RowBox[{"ComputeOutcomeProbabilities", "[", 
               RowBox[{"dataPoint", ",", "theta1", ",", "theta2"}], "]"}], 
              ",", "$Failed", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Power", "::", "infy"}], ",", 
                RowBox[{"Infinity", "::", "indet"}], ",", 
                RowBox[{"General", "::", "stop"}], ",", 
                RowBox[{"Values", "::", "invrl"}]}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"Skip", " ", "failed", " ", "computations"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"outcomes", "=!=", "$Failed"}], "&&", 
              RowBox[{"AssociationQ", "[", "outcomes", "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"Compare", " ", "with", " ", "ground", " ", "truth"}], 
              "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"comparison", "=", 
               RowBox[{"Check", "[", 
                RowBox[{
                 RowBox[{"CompareWithGroundtruth", "[", 
                  RowBox[{"outcomes", ",", 
                   RowBox[{"dataPoint", "[", "\"\<groundtruth\>\"", "]"}]}], 
                  "]"}], ",", "$Failed", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Part", "::", "partw"}], ",", 
                   RowBox[{"Part", "::", "partd"}], ",", 
                   RowBox[{"General", "::", "stop"}]}], "}"}]}], "]"}]}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "Count", " ", "if", " ", "comparison", " ", "successful"}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"comparison", "=!=", "$Failed"}], "&&", 
                 RowBox[{"KeyExistsQ", "[", 
                  RowBox[{"comparison", ",", "\"\<IsCorrect\>\""}], "]"}]}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"totalCount", "++"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"comparison", "[", "\"\<IsCorrect\>\"", "]"}], ",",
                    "\[IndentingNewLine]", 
                   RowBox[{"correctCount", "++"}]}], "\[IndentingNewLine]", 
                  "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "dataset", "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"correctCount", ",", "totalCount"}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"ADVANCED", " ", "OPTIMIZATION", " ", "FUNCTIONS"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Multi", "-", 
     RowBox[{
     "start", " ", "optimization", " ", "for", " ", "better", " ", "global", 
      " ", "search"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FindOptimalThetasMultiStart", "[", 
      RowBox[{"dataset_", ",", 
       RowBox[{"numStarts_", ":", "10"}], ",", 
       RowBox[{"gridSizePerStart_", ":", "5"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"results", ",", "bestResult", ",", "i"}], "}"}], ",", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<Running multi-start optimization with \>\"", ",", "numStarts", 
          ",", "\"\< starts...\>\""}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Run", " ", "multiple", " ", "optimizations"}], "*)"}], 
        RowBox[{"results", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<Starting optimization \>\"", ",", "i", ",", "\"\< of \>\"", 
              ",", "numStarts"}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"FindOptimalThetas", "[", 
             RowBox[{
             "dataset", ",", "gridSizePerStart", ",", 
              "\"\<RandomSampling\>\"", ",", "50", ",", "False"}], "]"}]}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "numStarts"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Find", " ", "best", " ", "result"}], "*)"}], 
        RowBox[{"bestResult", "=", 
         RowBox[{"First", "[", 
          RowBox[{"SortBy", "[", 
           RowBox[{"results", ",", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"#", "[", "\"\<Accuracy\>\"", "]"}]}], "&"}]}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
        "Print", "[", "\"\<Multi-start optimization complete.\>\"", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Best accuracy: \>\"", ",", 
          RowBox[{"bestResult", "[", "\"\<Accuracy\>\"", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Best thetas: \>\"", ",", 
          RowBox[{"bestResult", "[", "\"\<BestThetas\>\"", "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", "bestResult"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Gradient", "-", 
     RowBox[{"free", " ", "optimization", " ", "using", " ", "Nelder"}], "-", 
     "Mead", "-", 
     RowBox[{"like", " ", "approach"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"OptimizeThetasNelderMead", "[", 
      RowBox[{"dataset_", ",", 
       RowBox[{"initialThetas_", ":", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Pi", "/", "4"}], ",", 
          RowBox[{"Pi", "/", "4"}]}], "}"}]}], ",", 
       RowBox[{"maxIterations_", ":", "50"}], ",", 
       RowBox[{"tolerance_", ":", "0.001"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "currentThetas", ",", "currentAccuracy", ",", "bestThetas", ",", 
         "bestAccuracy", ",", 
         RowBox[{"stepSize", "=", 
          RowBox[{"Pi", "/", "10"}]}], ",", 
         RowBox[{"iteration", "=", "1"}], ",", "improved"}], "}"}], ",", 
       RowBox[{
        RowBox[{"currentThetas", "=", "initialThetas"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"bestThetas", ",", "bestAccuracy"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"currentThetas", ",", 
           RowBox[{"EvaluateThetaAccuracy", "[", 
            RowBox[{"dataset", ",", 
             RowBox[{"currentThetas", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"currentThetas", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
        "Print", "[", "\"\<Starting Nelder-Mead-like optimization...\>\"", 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Initial accuracy: \>\"", ",", "bestAccuracy"}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"iteration", "<=", "maxIterations"}], ",", 
          RowBox[{
           RowBox[{"improved", "=", "False"}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "Try", " ", "improvements", " ", "in", " ", "each", " ", 
             "direction"}], "*)"}], 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"testThetas", ",", "testAccuracy"}], "}"}], ",", 
               RowBox[{
                RowBox[{"testThetas", "=", "currentThetas"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"testThetas", "[", 
                  RowBox[{"[", "direction", "]"}], "]"}], "+=", 
                 RowBox[{"stepSize", "*", "step"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{"Keep", " ", "thetas", " ", 
                  RowBox[{"in", "[", 
                   RowBox[{"0", ",", 
                    RowBox[{"2", "\[Pi]"}]}], "]"}], " ", "range"}], "*)"}], 
                RowBox[{
                 RowBox[{"testThetas", "[", 
                  RowBox[{"[", "direction", "]"}], "]"}], "=", 
                 RowBox[{"Mod", "[", 
                  RowBox[{
                   RowBox[{"testThetas", "[", 
                    RowBox[{"[", "direction", "]"}], "]"}], ",", 
                   RowBox[{"2", " ", "Pi"}]}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"testAccuracy", "=", 
                 RowBox[{"EvaluateThetaAccuracy", "[", 
                  RowBox[{"dataset", ",", 
                   RowBox[{"testThetas", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{"testThetas", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"testAccuracy", ">", "bestAccuracy"}], ",", 
                  RowBox[{
                   RowBox[{"bestAccuracy", "=", "testAccuracy"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"bestThetas", "=", "testThetas"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"currentThetas", "=", "testThetas"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"improved", "=", "True"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<Iteration \>\"", ",", "iteration", ",", 
                    "\"\<: New best accuracy \>\"", ",", "bestAccuracy", ",", 
                    "\"\< with thetas \>\"", ",", "bestThetas"}], "]"}], 
                   ";"}]}], "]"}], ";"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"direction", ",", "1", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"step", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], "]"}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "Reduce", " ", "step", " ", "size", " ", "if", " ", "no", " ", 
             "improvement"}], "*)"}], 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", "improved"}], ",", 
             RowBox[{"stepSize", "*=", "0.8"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"Check", " ", "convergence"}], "*)"}], 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"stepSize", "<", "tolerance"}], ",", 
             RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"iteration", "++"}], ";"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Optimization complete after \>\"", ",", 
          RowBox[{"iteration", "-", "1"}], ",", "\"\< iterations.\>\""}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<BestThetas\>\"", "->", "bestThetas"}], ",", 
          RowBox[{"\"\<Accuracy\>\"", "->", "bestAccuracy"}], ",", 
          RowBox[{"\"\<Iterations\>\"", "->", 
           RowBox[{"iteration", "-", "1"}]}], ",", 
          RowBox[{"\"\<Method\>\"", "->", "\"\<NelderMead\>\""}]}], 
         "|>"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Evaluate", " ", "accuracy", " ", "for", " ", "a", " ", "specific", " ", 
     "theta", " ", "combination"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"EvaluateThetaAccuracy", "[", 
      RowBox[{"dataset_", ",", "theta1_", ",", "theta2_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"correctCount", ",", "totalCount"}], "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"correctCount", ",", "totalCount"}], "}"}], "=", 
         RowBox[{"TestThetaCombination", "[", 
          RowBox[{"dataset", ",", "theta1", ",", "theta2"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"totalCount", ">", "0"}], ",", 
          RowBox[{"N", "[", 
           RowBox[{"correctCount", "/", "totalCount"}], "]"}], ",", "0"}], 
         "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"VISUALIZATION", " ", "AND", " ", "ANALYSIS", " ", "FUNCTIONS"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Create", " ", "a", " ", "heatmap", " ", "of", " ", "accuracy", " ", 
     "across", " ", "theta", " ", "space"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PlotThetaAccuracyHeatmap", "[", 
      RowBox[{"dataset_", ",", 
       RowBox[{"gridSize_", ":", "20"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "thetaValues", ",", "accuracyData", ",", "theta1", ",", "theta2"}], 
        "}"}], ",", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<Computing accuracy heatmap with grid size \>\"", ",", 
          "gridSize", ",", "\"\<...\>\""}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"thetaValues", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"2", " ", "Pi", "*", 
             RowBox[{"i", "/", "gridSize"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", 
             RowBox[{"gridSize", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"accuracyData", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"EvaluateThetaAccuracy", "[", 
            RowBox[{"dataset", ",", "theta1", ",", "theta2"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"theta1", ",", "thetaValues"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"theta2", ",", "thetaValues"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ArrayPlot", "[", 
         RowBox[{"accuracyData", ",", 
          RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", 
          RowBox[{
          "PlotLabel", "->", 
           "\"\<Prediction Accuracy Across Theta Space\>\""}], ",", 
          RowBox[{"FrameLabel", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<\[Theta]\:2081\>\"", ",", "\"\<\[Theta]\:2082\>\""}],
             "}"}]}], ",", 
          RowBox[{"PlotLegends", "->", "Automatic"}], ",", 
          RowBox[{"DataRange", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"2", " ", "Pi"}]}], "}"}]}], "}"}]}], ",", 
          RowBox[{"FrameTicks", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"2", " ", "Pi", "*", 
                  RowBox[{"i", "/", "4"}]}], ",", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"N", "[", 
                   RowBox[{
                    RowBox[{"2", " ", "Pi", "*", 
                    RowBox[{"i", "/", "4"}]}], ",", "2"}], "]"}], "]"}]}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "4"}], "}"}]}], "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"2", " ", "Pi", "*", 
                  RowBox[{"i", "/", "4"}]}], ",", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"N", "[", 
                   RowBox[{
                    RowBox[{"2", " ", "Pi", "*", 
                    RowBox[{"i", "/", "4"}]}], ",", "2"}], "]"}], "]"}]}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "4"}], "}"}]}], "]"}]}], 
            "}"}]}]}], "]"}]}]}], "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Analyze", " ", "sensitivity", " ", "around", " ", "optimal", " ", 
     "thetas"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"AnalyzeThetaSensitivity", "[", 
      RowBox[{"dataset_", ",", "optimalThetas_", ",", 
       RowBox[{"perturbationSize_", ":", 
        RowBox[{"Pi", "/", "20"}]}], ",", 
       RowBox[{"numSamples_", ":", "100"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "theta1", ",", "theta2", ",", "baseAccuracy", ",", 
         "perturbedAccuracies", ",", "sensitivity"}], "}"}], ",", 
       RowBox[{
        RowBox[{"baseAccuracy", "=", 
         RowBox[{"EvaluateThetaAccuracy", "[", 
          RowBox[{"dataset", ",", 
           RowBox[{"optimalThetas", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"optimalThetas", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"perturbedAccuracies", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"theta1", "=", 
             RowBox[{
              RowBox[{"optimalThetas", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "+", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "perturbationSize"}], ",", "perturbationSize"}],
                 "}"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"theta2", "=", 
             RowBox[{
              RowBox[{"optimalThetas", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "+", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "perturbationSize"}], ",", "perturbationSize"}],
                 "}"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"Keep", " ", "in", " ", "valid", " ", "range"}], "*)"}], 
            
            RowBox[{"theta1", "=", 
             RowBox[{"Mod", "[", 
              RowBox[{"theta1", ",", 
               RowBox[{"2", " ", "Pi"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"theta2", "=", 
             RowBox[{"Mod", "[", 
              RowBox[{"theta2", ",", 
               RowBox[{"2", " ", "Pi"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"EvaluateThetaAccuracy", "[", 
             RowBox[{"dataset", ",", "theta1", ",", "theta2"}], "]"}]}], ",", 
           
           RowBox[{"{", "numSamples", "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"sensitivity", "=", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<BaseAccuracy\>\"", "->", "baseAccuracy"}], ",", 
           RowBox[{"\"\<MeanPerturbedAccuracy\>\"", "->", 
            RowBox[{"Mean", "[", "perturbedAccuracies", "]"}]}], ",", 
           RowBox[{"\"\<StdPerturbedAccuracy\>\"", "->", 
            RowBox[{"StandardDeviation", "[", "perturbedAccuracies", "]"}]}], 
           ",", 
           RowBox[{"\"\<MinPerturbedAccuracy\>\"", "->", 
            RowBox[{"Min", "[", "perturbedAccuracies", "]"}]}], ",", 
           RowBox[{"\"\<MaxPerturbedAccuracy\>\"", "->", 
            RowBox[{"Max", "[", "perturbedAccuracies", "]"}]}], ",", 
           RowBox[{"\"\<PerturbationSize\>\"", "->", "perturbationSize"}]}], 
          "|>"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "\"\<Sensitivity Analysis Results:\>\"", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Base accuracy: \>\"", ",", "baseAccuracy"}], "]"}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Mean perturbed accuracy: \>\"", ",", 
          RowBox[{
          "sensitivity", "[", "\"\<MeanPerturbedAccuracy\>\"", "]"}]}], "]"}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Standard deviation: \>\"", ",", 
          RowBox[{"sensitivity", "[", "\"\<StdPerturbedAccuracy\>\"", "]"}]}],
          "]"}], ";", "\[IndentingNewLine]", "sensitivity"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"COMPREHENSIVE", " ", "THETA", " ", "SEARCH"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], 
    "*)"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Main", " ", "function", " ", "that", " ", "combines", " ", "multiple", 
     " ", "optimization", " ", "strategies"}], "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"ComprehensiveThetaSearch", "[", 
      RowBox[{"dataset_", ",", " ", "gridsize_", ",", 
       RowBox[{"verbose_", ":", "True"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "gridResult", ",", "multiStartResult", ",", "nelderMeadResult", ",", 
         "bestResult"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", "\[IndentingNewLine]", 
          RowBox[{
          "Print", "[", 
           "\"\<=== Comprehensive Theta Parameter Search ===\>\"", "]"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"1.", " ", "Grid", " ", "search"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", "\[IndentingNewLine]", 
          RowBox[{
          "Print", "[", "\"\<\\n1. Running grid search...\>\"", "]"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"gridResult", "=", 
         RowBox[{"FindOptimalThetas", "[", 
          RowBox[{
          "dataset", ",", "gridsize", ",", "\"\<GridSearch\>\"", ",", "100", 
           ",", "verbose"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"2.", " ", "Multi"}], "-", 
          RowBox[{"start", " ", "random", " ", "search"}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", "\[IndentingNewLine]", 
          RowBox[{
          "Print", "[", "\"\<\\n2. Running multi-start optimization...\>\"", 
           "]"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"multiStartResult", "=", 
         RowBox[{"FindOptimalThetasMultiStart", "[", 
          RowBox[{"dataset", ",", "5", ",", "6"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"3.", " ", "Nelder"}], "-", 
          RowBox[{"Mead", " ", "refinement"}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", "\[IndentingNewLine]", 
          RowBox[{
          "Print", "[", "\"\<\\n3. Running Nelder-Mead refinement...\>\"", 
           "]"}]}], "]"}], "\[IndentingNewLine]", ";", "\[IndentingNewLine]", 
        
        RowBox[{"nelderMeadResult", "=", 
         RowBox[{"OptimizeThetasNelderMead", "[", 
          RowBox[{"dataset", ",", 
           RowBox[{"multiStartResult", "[", "\"\<BestThetas\>\"", "]"}], ",", 
           "30", ",", "0.01"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Choose", " ", "best", " ", "result"}], "*)"}], 
        RowBox[{"bestResult", "=", 
         RowBox[{"First", "[", 
          RowBox[{"SortBy", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "gridResult", ",", "multiStartResult", ",", "nelderMeadResult"}],
              "}"}], ",", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"#", "[", "\"\<Accuracy\>\"", "]"}]}], "&"}]}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", 
          RowBox[{
           RowBox[{"Print", "[", "\"\<\\n=== Final Results ===\>\"", "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Best method: \>\"", ",", 
             RowBox[{"bestResult", "[", "\"\<Method\>\"", "]"}]}], "]"}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Best accuracy: \>\"", ",", 
             RowBox[{"bestResult", "[", "\"\<Accuracy\>\"", "]"}]}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Best thetas: \>\"", ",", 
             RowBox[{"bestResult", "[", "\"\<BestThetas\>\"", "]"}]}], "]"}], 
           ";"}]}], "]"}], ";", "\[IndentingNewLine]", "bestResult"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.958198835540843*^9, 3.958198857233759*^9}, 
   3.9581989227910223`*^9},
 CellLabel->"In[93]:=",ExpressionUUID->"7c78365d-eebe-4380-8eed-24e3eb6a4880"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
      "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{
   "CONFUSION", " ", "MATRIX", " ", "COMPUTATION", " ", "AND", " ", 
    "VISUALIZATION"}], "*)"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
      "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ComputeConfusionMatrix", "[", 
      RowBox[{"dataset_", ",", "theta1_", ",", "theta2_", ",", 
       RowBox[{"verbose_", ":", "False"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "predictions", ",", "groundTruths", ",", "uniqueOutcomes", ",", 
         "confusionMatrix", ",", "accuracyMetrics", ",", 
         "classificationResults", ",", "dataPoint", ",", "outcomes", ",", 
         "predictedOutcome", ",", "actualOutcome", ",", 
         RowBox[{"totalPredictions", "=", "0"}], ",", 
         RowBox[{"successfulPredictions", "=", "0"}]}], "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "Initialize", " ", "lists", " ", "to", " ", "store", " ", "results"}],
         "*)"}], 
       RowBox[{
        RowBox[{"predictions", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"groundTruths", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"classificationResults", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Computing predictions for \>\"", ",", 
            RowBox[{"Length", "[", "dataset", "]"}], ",", 
            "\"\< cases...\>\""}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Process", " ", "each", " ", "data", " ", "point"}], "*)"}], 
        
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"dataPoint", "=", 
            RowBox[{"dataset", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "Compute", " ", "outcome", " ", "probabilities", " ", "with", " ",
              "error", " ", "handling"}], "*)"}], 
           RowBox[{"outcomes", "=", 
            RowBox[{"Check", "[", 
             RowBox[{
              RowBox[{"ComputeOutcomeProbabilities", "[", 
               RowBox[{"dataPoint", ",", "theta1", ",", "theta2"}], "]"}], 
              ",", "$Failed", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Power", "::", "infy"}], ",", 
                RowBox[{"Infinity", "::", "indet"}], ",", 
                RowBox[{"General", "::", "stop"}], ",", 
                RowBox[{"Values", "::", "invrl"}], ",", 
                RowBox[{"NumericFunction", "::", "argx"}]}], "}"}]}], "]"}]}],
            ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"If", " ", "computation", " ", "successful"}], ",", 
             RowBox[{"extract", " ", "prediction"}]}], "*)"}], 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"outcomes", "=!=", "$Failed"}], "&&", 
              RowBox[{"AssociationQ", "[", "outcomes", "]"}]}], ",", 
             RowBox[{"(*", 
              RowBox[{"Get", " ", "predicted", " ", "outcome", " ", 
               RowBox[{"(", 
                RowBox[{"highest", " ", "probability"}], ")"}]}], "*)"}], 
             RowBox[{
              RowBox[{"predictedOutcome", "=", 
               RowBox[{"Check", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"GetMaxProbabilityOutcome", "[", "outcomes", "]"}], 
                  "[", "\"\<Outcome\>\"", "]"}], ",", "$Failed", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Part", "::", "partw"}], ",", 
                   RowBox[{"Part", "::", "partd"}], ",", 
                   RowBox[{"General", "::", "stop"}]}], "}"}]}], "]"}]}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"actualOutcome", "=", 
               RowBox[{"dataPoint", "[", "\"\<groundtruth\>\"", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "Store", " ", "results", " ", "if", " ", "both", " ", 
                "prediction", " ", "and", " ", "ground", " ", "truth", " ", 
                "are", " ", "valid"}], "*)"}], 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"predictedOutcome", "=!=", "$Failed"}], "&&", 
                 RowBox[{"actualOutcome", "=!=", 
                  RowBox[{"Missing", "[", "\"\<NotAvailable\>\"", "]"}]}]}], 
                ",", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"predictions", ",", "predictedOutcome"}], "]"}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"groundTruths", ",", "actualOutcome"}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"classificationResults", ",", 
                   RowBox[{"<|", 
                    RowBox[{
                    RowBox[{"\"\<Index\>\"", "->", "i"}], ",", 
                    RowBox[{"\"\<Predicted\>\"", "->", "predictedOutcome"}], 
                    ",", 
                    RowBox[{"\"\<Actual\>\"", "->", "actualOutcome"}], ",", 
                    RowBox[{"\"\<Correct\>\"", "->", 
                    RowBox[{"(", 
                    RowBox[{"predictedOutcome", "==", "actualOutcome"}], 
                    ")"}]}], ",", 
                    RowBox[{"\"\<Probabilities\>\"", "->", "outcomes"}]}], 
                    "|>"}]}], "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"successfulPredictions", "++"}], ";"}]}], "]"}], 
              ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"totalPredictions", "++"}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"Progress", " ", "reporting"}], "*)"}], 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"verbose", "&&", 
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{"i", ",", 
                 RowBox[{"Max", "[", 
                  RowBox[{"1", ",", 
                   RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"Length", "[", "dataset", "]"}], "/", "10"}], 
                    "]"}]}], "]"}]}], "]"}], "==", "0"}]}], ",", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"\"\<Progress: \>\"", ",", 
                RowBox[{"Round", "[", 
                 RowBox[{"100.0", "*", 
                  RowBox[{"i", "/", 
                   RowBox[{"Length", "[", "dataset", "]"}]}]}], "]"}], ",", 
                "\"\<% complete\>\""}], "]"}], ";"}]}], "]"}], ";"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "dataset", "]"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Successfully processed \>\"", ",", "successfulPredictions", 
             ",", "\"\< out of \>\"", ",", "totalPredictions", ",", 
             "\"\< cases\>\""}], "]"}], ";"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Check", " ", "if", " ", "we", " ", "have", " ", "valid", " ", 
          "predictions"}], "*)"}], 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "predictions", "]"}], "==", "0"}], ",", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<Error: No valid predictions generated. Check theta values \
and dataset.\>\"", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Return", "[", "$Failed", "]"}], ";"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Get", " ", "unique", " ", "outcomes", " ", 
          RowBox[{"(", 
           RowBox[{
           "union", " ", "of", " ", "predictions", " ", "and", " ", "ground", 
            " ", "truth"}], ")"}]}], "*)"}], 
        RowBox[{"uniqueOutcomes", "=", 
         RowBox[{"Union", "[", 
          RowBox[{"predictions", ",", "groundTruths"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Unique outcomes found: \>\"", ",", "uniqueOutcomes"}], "]"}],
            ";", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Total valid predictions: \>\"", ",", 
             RowBox[{"Length", "[", "predictions", "]"}]}], "]"}], ";"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Build", " ", "confusion", " ", "matrix"}], "*)"}], 
        RowBox[{"confusionMatrix", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Count", "[", 
            RowBox[{
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{"groundTruths", ",", "predictions"}], "}"}]}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"actual", ",", "predicted"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"actual", ",", "uniqueOutcomes"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"predicted", ",", "uniqueOutcomes"}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Calculate", " ", "accuracy", " ", "metrics"}], "*)"}], 
        RowBox[{"accuracyMetrics", "=", 
         RowBox[{"CalculateAccuracyMetrics", "[", 
          RowBox[{"predictions", ",", "groundTruths", ",", "uniqueOutcomes"}],
           "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Return", " ", "comprehensive", " ", "results"}], "*)"}], 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<ConfusionMatrix\>\"", "->", "confusionMatrix"}], ",", 
          RowBox[{"\"\<Outcomes\>\"", "->", "uniqueOutcomes"}], ",", 
          RowBox[{"\"\<Predictions\>\"", "->", "predictions"}], ",", 
          RowBox[{"\"\<GroundTruths\>\"", "->", "groundTruths"}], ",", 
          RowBox[{
          "\"\<ClassificationResults\>\"", "->", "classificationResults"}], 
          ",", 
          RowBox[{"\"\<AccuracyMetrics\>\"", "->", "accuracyMetrics"}], ",", 
          RowBox[{"\"\<Theta1\>\"", "->", "theta1"}], ",", 
          RowBox[{"\"\<Theta2\>\"", "->", "theta2"}], ",", 
          RowBox[{"\"\<TotalCases\>\"", "->", 
           RowBox[{"Length", "[", "predictions", "]"}]}], ",", 
          RowBox[{"\"\<SuccessRate\>\"", "->", 
           RowBox[{"N", "[", 
            RowBox[{"successfulPredictions", "/", "totalPredictions"}], 
            "]"}]}]}], "|>"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"ACCURACY", " ", "METRICS", " ", "CALCULATION"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], 
    "*)"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CalculateAccuracyMetrics", "[", 
      RowBox[{"predictions_", ",", "groundTruths_", ",", "uniqueOutcomes_"}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "overallAccuracy", ",", "precisionByClass", ",", "recallByClass", ",",
          "f1ScoreByClass", ",", "supportByClass", ",", "truePositives", ",", 
         "falsePositives", ",", "falseNegatives", ",", "macroPrecision", ",", 
         "macroRecall", ",", "macroF1", ",", "weightedF1"}], "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Overall", " ", "accuracy"}], "*)"}], 
       RowBox[{
        RowBox[{"overallAccuracy", "=", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"Count", "[", 
            RowBox[{
             RowBox[{"MapThread", "[", 
              RowBox[{"Equal", ",", 
               RowBox[{"{", 
                RowBox[{"predictions", ",", "groundTruths"}], "}"}]}], "]"}], 
             ",", "True"}], "]"}], "/", 
           RowBox[{"Length", "[", "predictions", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Per", "-", 
          RowBox[{"class", " ", "metrics"}]}], "*)"}], 
        RowBox[{"precisionByClass", "=", 
         RowBox[{"<|", "|>"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"recallByClass", "=", 
         RowBox[{"<|", "|>"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"f1ScoreByClass", "=", 
         RowBox[{"<|", "|>"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"supportByClass", "=", 
         RowBox[{"<|", "|>"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"True", " ", "positives"}], ",", 
           RowBox[{"false", " ", "positives"}], ",", 
           RowBox[{
           "false", " ", "negatives", " ", "for", " ", "this", " ", 
            "class"}]}], "*)"}], 
         RowBox[{
          RowBox[{
           RowBox[{"truePositives", "=", 
            RowBox[{"Count", "[", 
             RowBox[{
              RowBox[{"MapThread", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
                RowBox[{"{", 
                 RowBox[{"groundTruths", ",", "predictions"}], "}"}]}], "]"}],
               ",", 
              RowBox[{"{", 
               RowBox[{"outcome", ",", "outcome"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"falsePositives", "=", 
            RowBox[{
             RowBox[{"Count", "[", 
              RowBox[{
               RowBox[{"MapThread", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"groundTruths", ",", "predictions"}], "}"}]}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"_", ",", "outcome"}], "}"}]}], "]"}], "-", 
             "truePositives"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"falseNegatives", "=", 
            RowBox[{
             RowBox[{"Count", "[", 
              RowBox[{
               RowBox[{"MapThread", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"groundTruths", ",", "predictions"}], "}"}]}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"outcome", ",", "_"}], "}"}]}], "]"}], "-", 
             "truePositives"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"Support", " ", 
             RowBox[{"(", 
              RowBox[{"number", " ", "of", " ", "actual", " ", "instances"}], 
              ")"}]}], "*)"}], 
           RowBox[{
            RowBox[{"supportByClass", "[", "outcome", "]"}], "=", 
            RowBox[{"Count", "[", 
             RowBox[{"groundTruths", ",", "outcome"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"Precision", "=", 
             RowBox[{"TP", "/", 
              RowBox[{"(", 
               RowBox[{"TP", "+", "FP"}], ")"}]}]}], "*)"}], 
           RowBox[{
            RowBox[{"precisionByClass", "[", "outcome", "]"}], "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"truePositives", "+", "falsePositives"}], ">", "0"}], 
              ",", 
              RowBox[{"N", "[", 
               RowBox[{"truePositives", "/", 
                RowBox[{"(", 
                 RowBox[{"truePositives", "+", "falsePositives"}], ")"}]}], 
               "]"}], ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"Recall", "=", 
             RowBox[{"TP", "/", 
              RowBox[{"(", 
               RowBox[{"TP", "+", "FN"}], ")"}]}]}], "*)"}], 
           RowBox[{
            RowBox[{"recallByClass", "[", "outcome", "]"}], "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"truePositives", "+", "falseNegatives"}], ">", "0"}], 
              ",", 
              RowBox[{"N", "[", 
               RowBox[{"truePositives", "/", 
                RowBox[{"(", 
                 RowBox[{"truePositives", "+", "falseNegatives"}], ")"}]}], 
               "]"}], ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"F1", " ", "Score"}], "=", 
             RowBox[{"2", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"Precision", "*", "Recall"}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{"Precision", "+", "Recall"}], ")"}]}]}]}], "*)"}], 
           RowBox[{
            RowBox[{"f1ScoreByClass", "[", "outcome", "]"}], "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"precisionByClass", "[", "outcome", "]"}], "+", 
                RowBox[{"recallByClass", "[", "outcome", "]"}]}], ">", "0"}], 
              ",", 
              RowBox[{"N", "[", 
               RowBox[{"2", "*", 
                RowBox[{"precisionByClass", "[", "outcome", "]"}], "*", 
                RowBox[{
                 RowBox[{"recallByClass", "[", "outcome", "]"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"precisionByClass", "[", "outcome", "]"}], "+", 
                   RowBox[{"recallByClass", "[", "outcome", "]"}]}], 
                  ")"}]}]}], "]"}], ",", "0"}], "]"}]}], ";"}], ",", 
          RowBox[{"{", 
           RowBox[{"outcome", ",", "uniqueOutcomes"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Macro", " ", "averages"}], "*)"}], 
        RowBox[{"macroPrecision", "=", 
         RowBox[{"Mean", "[", 
          RowBox[{"Values", "[", "precisionByClass", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"macroRecall", "=", 
         RowBox[{"Mean", "[", 
          RowBox[{"Values", "[", "recallByClass", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"macroF1", "=", 
         RowBox[{"Mean", "[", 
          RowBox[{"Values", "[", "f1ScoreByClass", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Weighted", " ", "F1", " ", 
          RowBox[{"(", 
           RowBox[{"weighted", " ", "by", " ", "support"}], ")"}]}], "*)"}], 
        RowBox[{"weightedF1", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Total", "[", 
             RowBox[{"Values", "[", "supportByClass", "]"}], "]"}], ">", 
            "0"}], ",", 
           RowBox[{
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"supportByClass", "[", "outcome", "]"}], "*", 
               RowBox[{"f1ScoreByClass", "[", "outcome", "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"outcome", ",", "uniqueOutcomes"}], "}"}]}], "]"}], 
            "/", 
            RowBox[{"Total", "[", 
             RowBox[{"Values", "[", "supportByClass", "]"}], "]"}]}], ",", 
           "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<OverallAccuracy\>\"", "->", "overallAccuracy"}], ",", 
          RowBox[{"\"\<PrecisionByClass\>\"", "->", "precisionByClass"}], ",", 
          RowBox[{"\"\<RecallByClass\>\"", "->", "recallByClass"}], ",", 
          RowBox[{"\"\<F1ScoreByClass\>\"", "->", "f1ScoreByClass"}], ",", 
          RowBox[{"\"\<SupportByClass\>\"", "->", "supportByClass"}], ",", 
          RowBox[{"\"\<MacroPrecision\>\"", "->", "macroPrecision"}], ",", 
          RowBox[{"\"\<MacroRecall\>\"", "->", "macroRecall"}], ",", 
          RowBox[{"\"\<MacroF1\>\"", "->", "macroF1"}], ",", 
          RowBox[{"\"\<WeightedF1\>\"", "->", "weightedF1"}]}], "|>"}]}]}], 
      "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], 
    "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"VISUALIZATION", " ", "FUNCTIONS"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], 
    "*)"}], 
   RowBox[{"(*", 
    RowBox[{
    "ENHANCED", " ", "CONFUSION", " ", "MATRIX", " ", "VISUALIZATION"}], 
    "*)"}], 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], 
    "*)"}], 
   RowBox[{"(*", 
    RowBox[{
    "Enhanced", " ", "version", " ", "that", " ", "works", " ", "with", " ", 
     "both", " ", "data", " ", "formats"}], "*)"}], 
   RowBox[{
    RowBox[{
     RowBox[{"PlotConfusionMatrixEnhanced", "[", 
      RowBox[{"data_", ",", 
       RowBox[{"title_", ":", "\"\<Confusion Matrix\>\""}], ",", 
       "options___"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "confusionMatrix", ",", "allCategories", ",", "matrixData", ",", 
         "accuracyByClass", ",", "totalsByClass", ",", "plotMatrix", ",", 
         "plotAccuracy", ",", "layout", ",", "summaryTable", ",", 
         "predictions", ",", "groundtruths", ",", "normalizedMatrix", ",", 
         "cellAnnotations", ",", "colorScheme", ",", "fontSize", ",", 
         "imageSize", ",", "showPercentages", ",", "showCounts", ",", 
         "optionRules"}], "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Convert", " ", "options", " ", "to", " ", "rules"}], "*)"}], 
       
       RowBox[{
        RowBox[{"optionRules", "=", 
         RowBox[{"{", "options", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Parse", " ", "options", " ", "with", " ", "defaults"}], 
         "*)"}], 
        RowBox[{"colorScheme", "=", 
         RowBox[{
          RowBox[{"Replace", "[", 
           RowBox[{"ColorScheme", ",", "optionRules", ",", 
            RowBox[{"{", "1", "}"}]}], "]"}], "/.", " ", 
          RowBox[{"ColorScheme", "->", "\"\<BlueGreenYellow\>\""}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"fontSize", "=", 
         RowBox[{
          RowBox[{"Replace", "[", 
           RowBox[{"FontSize", ",", "optionRules", ",", 
            RowBox[{"{", "1", "}"}]}], "]"}], "/.", " ", 
          RowBox[{"FontSize", "->", "12"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"imageSize", "=", 
         RowBox[{
          RowBox[{"Replace", "[", 
           RowBox[{"ImageSize", ",", "optionRules", ",", 
            RowBox[{"{", "1", "}"}]}], "]"}], "/.", " ", 
          RowBox[{"ImageSize", "->", "500"}]}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"showPercentages", "=", 
         RowBox[{
          RowBox[{"Replace", "[", 
           RowBox[{"ShowPercentages", ",", "optionRules", ",", 
            RowBox[{"{", "1", "}"}]}], "]"}], "/.", " ", 
          RowBox[{"ShowPercentages", "->", "True"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"showCounts", "=", 
         RowBox[{
          RowBox[{"Replace", "[", 
           RowBox[{"ShowCounts", ",", "optionRules", ",", 
            RowBox[{"{", "1", "}"}]}], "]"}], "/.", " ", 
          RowBox[{"ShowCounts", "->", "True"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Extract", " ", "predictions", " ", "and", " ", "ground", " ", 
          "truths", " ", "based", " ", "on", " ", "data", " ", "format"}], 
         "*)"}], 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"AssociationQ", "[", "data", "]"}], "&&", 
           RowBox[{"KeyExistsQ", "[", 
            RowBox[{"data", ",", "\"\<ConfusionMatrix\>\""}], "]"}]}], ",", 
          RowBox[{"(*", 
           RowBox[{
           "Data", " ", "from", " ", "ComputeConfusionMatrix", " ", 
            "function"}], "*)"}], 
          RowBox[{
           RowBox[{"confusionMatrix", "=", 
            RowBox[{"data", "[", "\"\<ConfusionMatrix\>\"", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"allCategories", "=", 
            RowBox[{"data", "[", "\"\<Outcomes\>\"", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"predictions", "=", 
            RowBox[{"data", "[", "\"\<Predictions\>\"", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"groundtruths", "=", 
            RowBox[{"data", "[", "\"\<GroundTruths\>\"", "]"}]}], ";"}], ",", 
          
          RowBox[{"(*", 
           RowBox[{
           "Data", " ", "from", " ", "GetModelMetrics", " ", "function", " ", 
            
            RowBox[{"(", 
             RowBox[{"list", " ", "of", " ", "comparison", " ", "results"}], 
             ")"}]}], "*)"}], 
          RowBox[{
           RowBox[{"predictions", "=", 
            RowBox[{"Cases", "[", 
             RowBox[{"data", ",", 
              RowBox[{
               RowBox[{"r_", "/;", 
                RowBox[{"KeyExistsQ", "[", 
                 RowBox[{"r", ",", "\"\<PredictedOutcome\>\""}], "]"}]}], ":>", 
               RowBox[{"r", "[", "\"\<PredictedOutcome\>\"", "]"}]}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"groundtruths", "=", 
            RowBox[{"Cases", "[", 
             RowBox[{"data", ",", 
              RowBox[{
               RowBox[{"r_", "/;", 
                RowBox[{"KeyExistsQ", "[", 
                 RowBox[{"r", ",", "\"\<GroundtruthOutcome\>\""}], "]"}]}], ":>", 
               RowBox[{"r", "[", "\"\<GroundtruthOutcome\>\"", "]"}]}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"allCategories", "=", 
            RowBox[{"Union", "[", 
             RowBox[{"predictions", ",", "groundtruths"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"Build", " ", "confusion", " ", "matrix"}], "*)"}], 
           RowBox[{"confusionMatrix", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Count", "[", 
               RowBox[{
                RowBox[{"MapThread", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"groundtruths", ",", "predictions"}], "}"}]}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"actual", ",", "predicted"}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"actual", ",", "allCategories"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"predicted", ",", "allCategories"}], "}"}]}], "]"}]}], 
           ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Calculate", " ", "totals", " ", "by", " ", "class", " ", "for", " ",
           "normalization"}], "*)"}], 
        RowBox[{"totalsByClass", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"confusionMatrix", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "allCategories", "]"}]}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Create", " ", "normalized", " ", "matrix", " ", "for", " ", 
          "percentage", " ", "display"}], "*)"}], 
        RowBox[{"normalizedMatrix", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"totalsByClass", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ">", "0"}], ",", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"confusionMatrix", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}], "/", 
               RowBox[{"totalsByClass", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", "0"}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "allCategories", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", 
             RowBox[{"Length", "[", "allCategories", "]"}]}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Create", " ", "cell", " ", "annotations"}], "*)"}], 
        RowBox[{"cellAnnotations", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"count", ",", "percentage", ",", "annotation"}], "}"}], 
             ",", 
             RowBox[{
              RowBox[{"count", "=", 
               RowBox[{"confusionMatrix", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"percentage", "=", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"totalsByClass", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ">", "0"}], ",", 
                 RowBox[{"100", "*", 
                  RowBox[{"count", "/", 
                   RowBox[{"totalsByClass", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ",", "0"}], "]"}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"Build", " ", "annotation", " ", "text"}], "*)"}], 
              RowBox[{"annotation", "=", "\"\<\>\""}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{"showCounts", ",", 
                RowBox[{"annotation", "=", 
                 RowBox[{"ToString", "[", "count", "]"}]}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"showPercentages", "&&", "showCounts"}], ",", 
                RowBox[{"annotation", "=", 
                 RowBox[{"annotation", "<>", "\"\<\\n\>\""}]}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{"showPercentages", ",", 
                RowBox[{"annotation", "=", 
                 RowBox[{"annotation", "<>", "\"\<(\>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"NumberForm", "[", 
                    RowBox[{"percentage", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}], "]"}], "<>", 
                  "\"\<%)\>\""}]}]}], "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "Style", " ", "based", " ", "on", " ", "whether", " ", 
                RowBox[{"it", "'"}], "s", " ", "on", " ", "diagonal", " ", 
                RowBox[{"(", 
                 RowBox[{"correct", " ", "predictions"}], ")"}]}], "*)"}], 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"i", "==", "j"}], ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                   "annotation", ",", "Bold", ",", "fontSize", ",", "White"}],
                    "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"j", "-", "1"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "allCategories", "]"}], "-", 
                    "i"}]}], "}"}]}], "]"}], ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{"annotation", ",", "fontSize", ",", "Black"}], 
                   "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"j", "-", "1"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "allCategories", "]"}], "-", 
                    "i"}]}], "}"}]}], "]"}]}], "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "allCategories", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", 
             RowBox[{"Length", "[", "allCategories", "]"}]}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Create", " ", "the", " ", "main", " ", "confusion", " ", "matrix", 
          " ", "plot"}], "*)"}], 
        RowBox[{"plotMatrix", "=", 
         RowBox[{"ArrayPlot", "[", 
          RowBox[{
           RowBox[{"Reverse", "[", "normalizedMatrix", "]"}], ",", 
           RowBox[{"ColorFunction", "->", "colorScheme"}], ",", 
           RowBox[{"PlotLabel", "->", 
            RowBox[{"Style", "[", 
             RowBox[{"title", ",", "Bold", ",", 
              RowBox[{"fontSize", "+", "4"}]}], "]"}]}], ",", 
           RowBox[{"FrameLabel", "->", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Predicted Outcome\>\"", ",", "Bold", ",", 
                RowBox[{"fontSize", "+", "2"}]}], "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Actual Outcome\>\"", ",", "Bold", ",", 
                RowBox[{"fontSize", "+", "2"}]}], "]"}]}], "}"}]}], ",", 
           RowBox[{"PlotLegends", "->", 
            RowBox[{"BarLegend", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"colorScheme", ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
              RowBox[{"LegendLabel", "->", 
               RowBox[{"Style", "[", 
                RowBox[{
                "\"\<Accuracy Rate\>\"", ",", "Bold", ",", "fontSize"}], 
                "]"}]}]}], "]"}]}], ",", 
           RowBox[{"FrameTicks", "->", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"i", "-", "1"}], ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"allCategories", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "fontSize"}], 
                   "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Length", "[", "allCategories", "]"}]}], "}"}]}], 
               "]"}], ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", "allCategories", "]"}], "-", "i"}], 
                  ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"allCategories", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "fontSize"}], 
                   "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Length", "[", "allCategories", "]"}]}], "}"}]}], 
               "]"}]}], "}"}]}], ",", 
           RowBox[{"FrameTicksStyle", "->", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", "fontSize"}], "]"}]}], ",", 
           RowBox[{"Epilog", "->", 
            RowBox[{"Flatten", "[", "cellAnnotations", "]"}]}], ",", 
           RowBox[{"AspectRatio", "->", "1"}], ",", 
           RowBox[{"ImageSize", "->", "imageSize"}], ",", 
           RowBox[{"PlotRangePadding", "->", "0.1"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Calculate", " ", "accuracy", " ", "metrics"}], "*)"}], 
        RowBox[{"accuracyByClass", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"totalsByClass", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ">", "0"}], ",", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"confusionMatrix", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "i"}], "]"}], "]"}], "/", 
                RowBox[{"totalsByClass", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ",", "4"}], "]"}], ",", 
             "0"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "allCategories", "]"}]}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Create", " ", "class", " ", "accuracy", " ", "bar", " ", "chart"}], 
         "*)"}], 
        RowBox[{"plotAccuracy", "=", 
         RowBox[{"BarChart", "[", 
          RowBox[{"accuracyByClass", ",", 
           RowBox[{"ChartLabels", "->", 
            RowBox[{"Placed", "[", 
             RowBox[{"allCategories", ",", "Below", ",", 
              RowBox[{
               RowBox[{"Rotate", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"Pi", "/", "4"}]}], "]"}], "&"}]}], "]"}]}], ",", 
           RowBox[{"PlotLabel", "->", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Accuracy by Class\>\"", ",", "Bold", ",", 
              RowBox[{"fontSize", "+", "2"}]}], "]"}]}], ",", 
           RowBox[{"AxesLabel", "->", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<Outcome Category\>\"", ",", "Bold", ",", "fontSize"}], 
               "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Accuracy\>\"", ",", "Bold", ",", "fontSize"}], 
               "]"}]}], "}"}]}], ",", 
           RowBox[{"PlotRange", "->", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], ",", 
           RowBox[{"GridLines", "->", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{"{", 
               RowBox[{
               "0.2", ",", "0.4", ",", "0.6", ",", "0.8", ",", "1.0"}], 
               "}"}]}], "}"}]}], ",", 
           RowBox[{"GridLinesStyle", "->", 
            RowBox[{"Directive", "[", 
             RowBox[{"Gray", ",", "Dashed"}], "]"}]}], ",", 
           RowBox[{"ChartStyle", "->", "\"\<Pastel\>\""}], ",", 
           RowBox[{"LabelingFunction", "->", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Placed", "[", 
               RowBox[{
                RowBox[{"NumberForm", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"{", 
                   RowBox[{"3", ",", "3"}], "}"}]}], "]"}], ",", "Above"}], 
               "]"}], "&"}], ")"}]}], ",", 
           RowBox[{"ImageSize", "->", "imageSize"}], ",", 
           RowBox[{"BarSpacing", "->", "0.2"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Create", " ", "detailed", " ", "summary", " ", "table"}], 
         "*)"}], 
        RowBox[{"summaryTable", "=", 
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"Prepend", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"cat", ",", "Bold"}], "]"}], ",", 
                 RowBox[{"totalsByClass", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"allCategories", ",", "cat"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], ",", 
                 
                 RowBox[{"Count", "[", 
                  RowBox[{"predictions", ",", "cat"}], "]"}], ",", 
                 RowBox[{"confusionMatrix", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"allCategories", ",", "cat"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"allCategories", ",", "cat"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], 
                 ",", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{
                   RowBox[{"accuracyByClass", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"allCategories", ",", "cat"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], ",", 
                   
                   RowBox[{"{", 
                    RowBox[{"4", ",", "3"}], "}"}]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"cat", ",", "allCategories"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Category\>\"", ",", "Bold"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Actual Count\>\"", ",", "Bold"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Predicted Count\>\"", ",", "Bold"}], "]"}], ",", 
               
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Correct\>\"", ",", "Bold"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Accuracy\>\"", ",", "Bold"}], "]"}]}], "}"}]}], 
            "]"}], ",", 
           RowBox[{"Frame", "->", "All"}], ",", 
           RowBox[{"Background", "->", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{"{", 
               RowBox[{"LightBlue", ",", "None"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Alignment", "->", 
            RowBox[{"{", 
             RowBox[{"Left", ",", "Center"}], "}"}]}], ",", 
           RowBox[{"Spacings", "->", 
            RowBox[{"{", 
             RowBox[{"2", ",", "1"}], "}"}]}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Calculate", " ", "overall", " ", "metrics"}], "*)"}], 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "overallAccuracy", ",", "totalCorrect", ",", "totalCases"}], "}"}],
           ",", 
          RowBox[{
           RowBox[{"totalCorrect", "=", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{"confusionMatrix", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "i"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"Length", "[", "allCategories", "]"}]}], "}"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"totalCases", "=", 
            RowBox[{"Total", "[", 
             RowBox[{"Flatten", "[", "confusionMatrix", "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"overallAccuracy", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"totalCases", ">", "0"}], ",", 
              RowBox[{"N", "[", 
               RowBox[{
                RowBox[{"totalCorrect", "/", "totalCases"}], ",", "4"}], 
               "]"}], ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"Create", " ", "comprehensive", " ", "visualization"}], 
            "*)"}], 
           RowBox[{"Column", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Confusion Matrix Analysis\>\"", ",", "Bold", ",", 
                 RowBox[{"fontSize", "+", "6"}], ",", "Blue"}], "]"}], ",", 
               RowBox[{"Spacer", "[", "10", "]"}], ",", 
               RowBox[{"(*", 
                RowBox[{"Overall", " ", "accuracy", " ", "display"}], "*)"}], 
               
               RowBox[{"Framed", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"\"\<Overall Accuracy: \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"overallAccuracy", ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "3"}], "}"}]}], "]"}], "]"}], "<>", 
                    "\"\< (\>\"", "<>", 
                    RowBox[{"ToString", "[", "totalCorrect", "]"}], "<>", 
                    "\"\</\>\"", "<>", 
                    RowBox[{"ToString", "[", "totalCases", "]"}], "<>", 
                    "\"\<)\>\""}], ",", "Bold", ",", 
                   RowBox[{"fontSize", "+", "2"}], ",", "Purple"}], "]"}], 
                 ",", 
                 RowBox[{"Background", "->", "LightYellow"}], ",", 
                 RowBox[{"FrameStyle", "->", "Purple"}]}], "]"}], ",", 
               RowBox[{"Spacer", "[", "15", "]"}], ",", 
               RowBox[{"(*", 
                RowBox[{"Main", " ", "confusion", " ", "matrix"}], "*)"}], 
               "plotMatrix", ",", 
               RowBox[{"Spacer", "[", "15", "]"}], ",", 
               RowBox[{"(*", 
                RowBox[{"Accuracy", " ", "by", " ", "class", " ", "chart"}], 
                "*)"}], "plotAccuracy", ",", 
               RowBox[{"Spacer", "[", "15", "]"}], ",", 
               RowBox[{"(*", 
                RowBox[{"Summary", " ", "table"}], "*)"}], 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Detailed Breakdown\>\"", ",", "Bold", ",", 
                 RowBox[{"fontSize", "+", "2"}]}], "]"}], ",", "summaryTable",
                ",", 
               RowBox[{"Spacer", "[", "10", "]"}], ",", 
               RowBox[{"(*", 
                RowBox[{"Additional", " ", "statistics"}], "*)"}], 
               RowBox[{"Grid", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\<Total Predictions:\>\"", ",", "totalCases"}],
                     "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<Correct Predictions:\>\"", ",", "totalCorrect"}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\<Error Rate:\>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"1", "-", "overallAccuracy"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "3"}], "}"}]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\<Number of Classes:\>\"", ",", 
                    RowBox[{"Length", "[", "allCategories", "]"}]}], "}"}]}], 
                  "}"}], ",", 
                 RowBox[{"Frame", "->", "True"}], ",", 
                 RowBox[{"Background", "->", "LightGreen"}], ",", 
                 RowBox[{"Alignment", "->", 
                  RowBox[{"{", 
                   RowBox[{"Left", ",", "Right"}], "}"}]}]}], "]"}]}], "}"}], 
             ",", 
             RowBox[{"Alignment", "->", "Center"}], ",", 
             RowBox[{"Spacings", "->", "2"}]}], "]"}]}]}], "]"}]}]}], "]"}]}],
     ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"SIMPLIFIED", " ", "ROBUST", " ", "VERSION"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], 
    "*)"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Simplified", " ", "version", " ", "with", " ", "fixed", " ", 
     "parameters", " ", "for", " ", "reliability"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PlotConfusionMatrixSimple", "[", 
      RowBox[{"data_", ",", 
       RowBox[{"title_", ":", "\"\<Confusion Matrix\>\""}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "confusionMatrix", ",", "allCategories", ",", "predictions", ",", 
         "groundtruths", ",", "normalizedMatrix", ",", "cellAnnotations", ",",
          "totalsByClass", ",", "accuracyByClass", ",", "plotMatrix", ",", 
         "plotAccuracy", ",", "summaryTable", ",", "overallAccuracy", ",", 
         "totalCorrect", ",", "totalCases"}], "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "Extract", " ", "data", " ", "based", " ", "on", " ", "format"}], 
        "*)"}], 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"AssociationQ", "[", "data", "]"}], "&&", 
           RowBox[{"KeyExistsQ", "[", 
            RowBox[{"data", ",", "\"\<ConfusionMatrix\>\""}], "]"}]}], ",", 
          RowBox[{"(*", 
           RowBox[{
           "Data", " ", "from", " ", "ComputeConfusionMatrix", " ", 
            "function"}], "*)"}], 
          RowBox[{
           RowBox[{"confusionMatrix", "=", 
            RowBox[{"data", "[", "\"\<ConfusionMatrix\>\"", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"allCategories", "=", 
            RowBox[{"data", "[", "\"\<Outcomes\>\"", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"predictions", "=", 
            RowBox[{"data", "[", "\"\<Predictions\>\"", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"groundtruths", "=", 
            RowBox[{"data", "[", "\"\<GroundTruths\>\"", "]"}]}], ";"}], ",", 
          
          RowBox[{"(*", 
           RowBox[{
           "Data", " ", "from", " ", "GetModelMetrics", " ", "function"}], 
           "*)"}], 
          RowBox[{
           RowBox[{"predictions", "=", 
            RowBox[{"Cases", "[", 
             RowBox[{"data", ",", 
              RowBox[{
               RowBox[{"r_", "/;", 
                RowBox[{"KeyExistsQ", "[", 
                 RowBox[{"r", ",", "\"\<PredictedOutcome\>\""}], "]"}]}], ":>", 
               RowBox[{"r", "[", "\"\<PredictedOutcome\>\"", "]"}]}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"groundtruths", "=", 
            RowBox[{"Cases", "[", 
             RowBox[{"data", ",", 
              RowBox[{
               RowBox[{"r_", "/;", 
                RowBox[{"KeyExistsQ", "[", 
                 RowBox[{"r", ",", "\"\<GroundtruthOutcome\>\""}], "]"}]}], ":>", 
               RowBox[{"r", "[", "\"\<GroundtruthOutcome\>\"", "]"}]}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"allCategories", "=", 
            RowBox[{"Union", "[", 
             RowBox[{"predictions", ",", "groundtruths"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"confusionMatrix", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Count", "[", 
               RowBox[{
                RowBox[{"MapThread", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"groundtruths", ",", "predictions"}], "}"}]}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"actual", ",", "predicted"}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"actual", ",", "allCategories"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"predicted", ",", "allCategories"}], "}"}]}], "]"}]}], 
           ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Calculate", " ", "metrics"}], "*)"}], 
        RowBox[{"totalsByClass", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"confusionMatrix", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "allCategories", "]"}]}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"normalizedMatrix", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"totalsByClass", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ">", "0"}], ",", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"confusionMatrix", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}], "/", 
               RowBox[{"totalsByClass", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", "0"}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "allCategories", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", 
             RowBox[{"Length", "[", "allCategories", "]"}]}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"accuracyByClass", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"totalsByClass", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ">", "0"}], ",", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"confusionMatrix", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "i"}], "]"}], "]"}], "/", 
                RowBox[{"totalsByClass", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ",", "4"}], "]"}], ",", 
             "0"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "allCategories", "]"}]}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"totalCorrect", "=", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"confusionMatrix", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "i"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "allCategories", "]"}]}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"totalCases", "=", 
         RowBox[{"Total", "[", 
          RowBox[{"Flatten", "[", "confusionMatrix", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"overallAccuracy", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"totalCases", ">", "0"}], ",", 
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"totalCorrect", "/", "totalCases"}], ",", "4"}], "]"}], 
           ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Create", " ", "annotations"}], "*)"}], 
        RowBox[{"cellAnnotations", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "count", ",", "percentage", ",", "annotation", ",", 
               "textColor"}], "}"}], ",", 
             RowBox[{
              RowBox[{"count", "=", 
               RowBox[{"confusionMatrix", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"percentage", "=", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"totalsByClass", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ">", "0"}], ",", 
                 RowBox[{"100", "*", 
                  RowBox[{"count", "/", 
                   RowBox[{"totalsByClass", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ",", "0"}], "]"}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"annotation", "=", 
               RowBox[{
                RowBox[{"ToString", "[", "count", "]"}], "<>", "\"\<\\n(\>\"",
                 "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{"percentage", ",", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}], "]"}], "<>", 
                "\"\<%)\>\""}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"textColor", "=", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"i", "==", "j"}], ",", "White", ",", "Black"}], 
                "]"}]}], ";", 
              RowBox[{"(*", 
               RowBox[{
               "White", " ", "text", " ", "on", " ", "diagonal", " ", "for", 
                " ", "correct", " ", "predictions"}], "*)"}], 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                 "annotation", ",", "Bold", ",", "11", ",", "textColor"}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"j", "-", "1"}], ",", 
                  RowBox[{
                   RowBox[{"Length", "[", "allCategories", "]"}], "-", 
                   "i"}]}], "}"}]}], "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "allCategories", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", 
             RowBox[{"Length", "[", "allCategories", "]"}]}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Main", " ", "confusion", " ", "matrix", " ", "plot"}], 
         "*)"}], 
        RowBox[{"plotMatrix", "=", 
         RowBox[{"ArrayPlot", "[", 
          RowBox[{
           RowBox[{"Reverse", "[", "normalizedMatrix", "]"}], ",", 
           RowBox[{"ColorFunction", "->", "\"\<BlueGreenYellow\>\""}], ",", 
           RowBox[{"PlotLabel", "->", 
            RowBox[{"Style", "[", 
             RowBox[{"title", ",", "Bold", ",", "14"}], "]"}]}], ",", 
           RowBox[{"FrameLabel", "->", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Predicted Outcome\>\"", ",", "Bold", ",", "12"}], 
               "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Actual Outcome\>\"", ",", "Bold", ",", "12"}], 
               "]"}]}], "}"}]}], ",", 
           RowBox[{"PlotLegends", "->", 
            RowBox[{"BarLegend", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\"\<BlueGreenYellow\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
              RowBox[{"LegendLabel", "->", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Accuracy Rate\>\"", ",", "Bold", ",", "10"}], 
                "]"}]}]}], "]"}]}], ",", 
           RowBox[{"FrameTicks", "->", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"i", "-", "1"}], ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"allCategories", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "10"}], "]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Length", "[", "allCategories", "]"}]}], "}"}]}], 
               "]"}], ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", "allCategories", "]"}], "-", "i"}], 
                  ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"allCategories", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "10"}], "]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Length", "[", "allCategories", "]"}]}], "}"}]}], 
               "]"}]}], "}"}]}], ",", 
           RowBox[{"FrameTicksStyle", "->", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", "10"}], "]"}]}], ",", 
           RowBox[{"Epilog", "->", 
            RowBox[{"Flatten", "[", "cellAnnotations", "]"}]}], ",", 
           RowBox[{"AspectRatio", "->", "1"}], ",", 
           RowBox[{"ImageSize", "->", "450"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Accuracy", " ", "by", " ", "class", " ", "chart"}], "*)"}], 
        
        RowBox[{"plotAccuracy", "=", 
         RowBox[{"BarChart", "[", 
          RowBox[{"accuracyByClass", ",", 
           RowBox[{"ChartLabels", "->", 
            RowBox[{"Placed", "[", 
             RowBox[{"allCategories", ",", "Below"}], "]"}]}], ",", 
           RowBox[{"PlotLabel", "->", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Accuracy by Class\>\"", ",", "Bold", ",", "12"}], 
             "]"}]}], ",", 
           RowBox[{"AxesLabel", "->", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Outcome Category\>\"", ",", "Bold", ",", "10"}], 
               "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Accuracy\>\"", ",", "Bold", ",", "10"}], "]"}]}], 
             "}"}]}], ",", 
           RowBox[{"PlotRange", "->", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], ",", 
           RowBox[{"GridLines", "->", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{"{", 
               RowBox[{
               "0.2", ",", "0.4", ",", "0.6", ",", "0.8", ",", "1.0"}], 
               "}"}]}], "}"}]}], ",", 
           RowBox[{"GridLinesStyle", "->", 
            RowBox[{"Directive", "[", 
             RowBox[{"Gray", ",", "Dashed"}], "]"}]}], ",", 
           RowBox[{"ChartStyle", "->", "\"\<Pastel\>\""}], ",", 
           RowBox[{"LabelingFunction", "->", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Placed", "[", 
               RowBox[{
                RowBox[{"NumberForm", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"{", 
                   RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", "Above"}], 
               "]"}], "&"}], ")"}]}], ",", 
           RowBox[{"ImageSize", "->", "450"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Summary", " ", "table"}], "*)"}], 
        RowBox[{"summaryTable", "=", 
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"Prepend", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"allCategories", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "Bold"}], "]"}], ",", 
                 RowBox[{"totalsByClass", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"Count", "[", 
                  RowBox[{"predictions", ",", 
                   RowBox[{"allCategories", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
                 RowBox[{"confusionMatrix", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "i"}], "]"}], "]"}], ",", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{
                   RowBox[{"accuracyByClass", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"4", ",", "3"}], "}"}]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"Length", "[", "allCategories", "]"}]}], "}"}]}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Category\>\"", ",", "Bold"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Actual\>\"", ",", "Bold"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Predicted\>\"", ",", "Bold"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Correct\>\"", ",", "Bold"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Accuracy\>\"", ",", "Bold"}], "]"}]}], "}"}]}], 
            "]"}], ",", 
           RowBox[{"Frame", "->", "All"}], ",", 
           RowBox[{"Background", "->", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{"{", 
               RowBox[{"LightBlue", ",", "None"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Alignment", "->", 
            RowBox[{"{", 
             RowBox[{"Left", ",", "Center"}], "}"}]}], ",", 
           RowBox[{"Spacings", "->", 
            RowBox[{"{", 
             RowBox[{"1.5", ",", "1"}], "}"}]}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Final", " ", "layout"}], "*)"}], 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<Confusion Matrix Analysis\>\"", ",", "Bold", ",", "16", ",",
               "Blue"}], "]"}], ",", 
            RowBox[{"Spacer", "[", "8", "]"}], ",", 
            RowBox[{"Framed", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"\"\<Overall Accuracy: \>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"NumberForm", "[", 
                   RowBox[{"overallAccuracy", ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "3"}], "}"}]}], "]"}], "]"}], "<>", 
                 "\"\< (\>\"", "<>", 
                 RowBox[{"ToString", "[", "totalCorrect", "]"}], "<>", 
                 "\"\</\>\"", "<>", 
                 RowBox[{"ToString", "[", "totalCases", "]"}], "<>", 
                 "\"\<)\>\""}], ",", "Bold", ",", "14", ",", "Purple"}], 
               "]"}], ",", 
              RowBox[{"Background", "->", "LightYellow"}], ",", 
              RowBox[{"FrameStyle", "->", "Purple"}]}], "]"}], ",", 
            RowBox[{"Spacer", "[", "12", "]"}], ",", "plotMatrix", ",", 
            RowBox[{"Spacer", "[", "12", "]"}], ",", "plotAccuracy", ",", 
            RowBox[{"Spacer", "[", "12", "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Detailed Breakdown\>\"", ",", "Bold", ",", "12"}], 
             "]"}], ",", "summaryTable"}], "}"}], ",", 
          RowBox[{"Alignment", "->", "Center"}], ",", 
          RowBox[{"Spacings", "->", "1"}]}], "]"}]}]}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Create", " ", "a", " ", "normalized", " ", "confusion", " ", "matrix", 
     " ", 
     RowBox[{"(", 
      RowBox[{"showing", " ", "percentages", " ", "only"}], ")"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PlotNormalizedConfusionMatrix", "[", 
      RowBox[{"data_", ",", 
       RowBox[{"title_", ":", "\"\<Normalized Confusion Matrix\>\""}]}], 
      "]"}], ":=", 
     RowBox[{"PlotConfusionMatrixEnhanced", "[", 
      RowBox[{"data", ",", "title", ",", 
       RowBox[{"ShowCounts", "->", "False"}], ",", 
       RowBox[{"ShowPercentages", "->", "True"}], ",", 
       RowBox[{"ColorScheme", "->", "\"\<SunsetColors\>\""}]}], "]"}]}], 
    ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Create", " ", "a", " ", "counts"}], "-", 
     RowBox[{"only", " ", "confusion", " ", "matrix"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PlotCountsConfusionMatrix", "[", 
      RowBox[{"data_", ",", 
       RowBox[{"title_", ":", "\"\<Confusion Matrix (Counts)\>\""}]}], "]"}], 
     ":=", 
     RowBox[{"PlotConfusionMatrixEnhanced", "[", 
      RowBox[{"data", ",", "title", ",", 
       RowBox[{"ShowCounts", "->", "True"}], ",", 
       RowBox[{"ShowPercentages", "->", "False"}], ",", 
       RowBox[{"ColorScheme", "->", "\"\<TemperatureMap\>\""}]}], "]"}]}], 
    ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Create", " ", "a", " ", "compact", " ", "confusion", " ", "matrix", " ", 
     "for", " ", "publications"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PlotCompactConfusionMatrix", "[", 
      RowBox[{"data_", ",", 
       RowBox[{"title_", ":", "\"\<Confusion Matrix\>\""}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "confusionMatrix", ",", "allCategories", ",", "predictions", ",", 
         "groundtruths", ",", "normalizedMatrix"}], "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Extract", " ", "data"}], "*)"}], 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"AssociationQ", "[", "data", "]"}], "&&", 
           RowBox[{"KeyExistsQ", "[", 
            RowBox[{"data", ",", "\"\<ConfusionMatrix\>\""}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"confusionMatrix", "=", 
            RowBox[{"data", "[", "\"\<ConfusionMatrix\>\"", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"allCategories", "=", 
            RowBox[{"data", "[", "\"\<Outcomes\>\"", "]"}]}], ";"}], ",", 
          RowBox[{
           RowBox[{"predictions", "=", 
            RowBox[{"Cases", "[", 
             RowBox[{"data", ",", 
              RowBox[{
               RowBox[{"r_", "/;", 
                RowBox[{"KeyExistsQ", "[", 
                 RowBox[{"r", ",", "\"\<PredictedOutcome\>\""}], "]"}]}], ":>", 
               RowBox[{"r", "[", "\"\<PredictedOutcome\>\"", "]"}]}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"groundtruths", "=", 
            RowBox[{"Cases", "[", 
             RowBox[{"data", ",", 
              RowBox[{
               RowBox[{"r_", "/;", 
                RowBox[{"KeyExistsQ", "[", 
                 RowBox[{"r", ",", "\"\<GroundtruthOutcome\>\""}], "]"}]}], ":>", 
               RowBox[{"r", "[", "\"\<GroundtruthOutcome\>\"", "]"}]}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"allCategories", "=", 
            RowBox[{"Union", "[", 
             RowBox[{"predictions", ",", "groundtruths"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"confusionMatrix", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Count", "[", 
               RowBox[{
                RowBox[{"MapThread", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"groundtruths", ",", "predictions"}], "}"}]}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"actual", ",", "predicted"}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"actual", ",", "allCategories"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"predicted", ",", "allCategories"}], "}"}]}], "]"}]}], 
           ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Create", " ", "simple"}], ",", 
          RowBox[{"clean", " ", "visualization"}]}], "*)"}], 
        RowBox[{"ArrayPlot", "[", 
         RowBox[{
          RowBox[{"Reverse", "[", "confusionMatrix", "]"}], ",", 
          RowBox[{"ColorFunction", "->", "\"\<BlueGreenYellow\>\""}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Style", "[", 
            RowBox[{"title", ",", "Bold", ",", "14"}], "]"}]}], ",", 
          RowBox[{"FrameLabel", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<Predicted\>\"", ",", "\"\<Actual\>\""}], "}"}]}], 
          ",", 
          RowBox[{"FrameTicks", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", 
                 RowBox[{"allCategories", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"Length", "[", "allCategories", "]"}]}], "}"}]}], 
              "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "allCategories", "]"}], "-", "i"}], 
                 ",", 
                 RowBox[{"allCategories", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"Length", "[", "allCategories", "]"}]}], "}"}]}], 
              "]"}]}], "}"}]}], ",", 
          RowBox[{"Epilog", "->", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"ToString", "[", 
                RowBox[{"confusionMatrix", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"j", "-", "1"}], ",", 
                 RowBox[{
                  RowBox[{"Length", "[", "allCategories", "]"}], "-", "i"}]}],
                 "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "allCategories", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", 
               RowBox[{"Length", "[", "allCategories", "]"}]}], "}"}]}], 
            "]"}]}], ",", 
          RowBox[{"AspectRatio", "->", "1"}], ",", 
          RowBox[{"ImageSize", "->", "300"}]}], "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"COMPARATIVE", " ", "ANALYSIS", " ", "FUNCTIONS"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], 
    "*)"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Compare", " ", "confusion", " ", "matrices", " ", "from", " ", 
     "different", " ", 
     RowBox[{"models", "/", "parameters"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CompareConfusionMatrices", "[", 
      RowBox[{"dataList_", ",", "titleList_", ",", 
       RowBox[{"mainTitle_", ":", "\"\<Model Comparison\>\""}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"plots", ",", "accuracies", ",", "comparisonTable"}], "}"}], 
       ",", 
       RowBox[{"(*", 
        RowBox[{"Create", " ", "individual", " ", "plots"}], "*)"}], 
       RowBox[{
        RowBox[{"plots", "=", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"PlotCompactConfusionMatrix", "[", 
             RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"dataList", ",", "titleList"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Calculate", " ", "accuracies", " ", "for", " ", "comparison"}], 
         "*)"}], 
        RowBox[{"accuracies", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "confusionMatrix", ",", "allCategories", ",", "predictions", 
               ",", "groundtruths", ",", "totalCorrect", ",", "totalCases"}], 
              "}"}], ",", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"AssociationQ", "[", 
                  RowBox[{"dataList", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "]"}], "&&", 
                 RowBox[{"KeyExistsQ", "[", 
                  RowBox[{
                   RowBox[{"dataList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                   "\"\<ConfusionMatrix\>\""}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"confusionMatrix", "=", 
                  RowBox[{
                   RowBox[{"dataList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                   "\"\<ConfusionMatrix\>\"", "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"allCategories", "=", 
                  RowBox[{
                   RowBox[{"dataList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<Outcomes\>\"", 
                   "]"}]}], ";"}], ",", 
                RowBox[{
                 RowBox[{"predictions", "=", 
                  RowBox[{"Cases", "[", 
                   RowBox[{
                    RowBox[{"dataList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"r_", "/;", 
                    RowBox[{"KeyExistsQ", "[", 
                    RowBox[{"r", ",", "\"\<PredictedOutcome\>\""}], "]"}]}], ":>", 
                    RowBox[{"r", "[", "\"\<PredictedOutcome\>\"", "]"}]}]}], 
                   "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"groundtruths", "=", 
                  RowBox[{"Cases", "[", 
                   RowBox[{
                    RowBox[{"dataList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"r_", "/;", 
                    RowBox[{"KeyExistsQ", "[", 
                    RowBox[{"r", ",", "\"\<GroundtruthOutcome\>\""}], "]"}]}],
                     ":>", 
                    RowBox[{"r", "[", "\"\<GroundtruthOutcome\>\"", "]"}]}]}],
                    "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"allCategories", "=", 
                  RowBox[{"Union", "[", 
                   RowBox[{"predictions", ",", "groundtruths"}], "]"}]}], ";",
                  "\[IndentingNewLine]", 
                 RowBox[{"confusionMatrix", "=", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"Count", "[", 
                    RowBox[{
                    RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"groundtruths", ",", "predictions"}], "}"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"actual", ",", "predicted"}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"actual", ",", "allCategories"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"predicted", ",", "allCategories"}], "}"}]}], 
                   "]"}]}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"totalCorrect", "=", 
               RowBox[{"Sum", "[", 
                RowBox[{
                 RowBox[{"confusionMatrix", "[", 
                  RowBox[{"[", 
                   RowBox[{"j", ",", "j"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", 
                   RowBox[{"Length", "[", "allCategories", "]"}]}], "}"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"totalCases", "=", 
               RowBox[{"Total", "[", 
                RowBox[{"Flatten", "[", "confusionMatrix", "]"}], "]"}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"totalCases", ">", "0"}], ",", 
                RowBox[{"N", "[", 
                 RowBox[{
                  RowBox[{"totalCorrect", "/", "totalCases"}], ",", "4"}], 
                 "]"}], ",", "0"}], "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "dataList", "]"}]}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Create", " ", "comparison", " ", "table"}], "*)"}], 
        RowBox[{"comparisonTable", "=", 
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"Prepend", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"titleList", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{
                   RowBox[{"accuracies", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"4", ",", "3"}], "}"}]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"Length", "[", "titleList", "]"}]}], "}"}]}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Model\>\"", ",", "Bold"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Accuracy\>\"", ",", "Bold"}], "]"}]}], "}"}]}], 
            "]"}], ",", 
           RowBox[{"Frame", "->", "All"}], ",", 
           RowBox[{"Background", "->", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{"{", 
               RowBox[{"LightBlue", ",", "None"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Alignment", "->", 
            RowBox[{"{", 
             RowBox[{"Left", ",", "Center"}], "}"}]}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Layout", " ", "everything"}], "*)"}], 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"mainTitle", ",", "Bold", ",", "16"}], "]"}], ",", 
            RowBox[{"Spacer", "[", "10", "]"}], ",", "comparisonTable", ",", 
            RowBox[{"Spacer", "[", "15", "]"}], ",", 
            RowBox[{"Grid", "[", 
             RowBox[{
              RowBox[{"Partition", "[", 
               RowBox[{"plots", ",", "2", ",", "2", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}], ",", "\"\<\>\""}], "]"}], 
              ",", 
              RowBox[{"Spacings", "->", 
               RowBox[{"{", 
                RowBox[{"3", ",", "3"}], "}"}]}]}], "]"}]}], "}"}], ",", 
          RowBox[{"Alignment", "->", "Center"}]}], "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"USAGE", " ", "EXAMPLES", " ", "AND", " ", "OPTIONS"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], 
    "*)"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Available", " ", "options", " ", "for", " ", 
      RowBox[{"PlotConfusionMatrixEnhanced", ":", 
       RowBox[{"-", "ColorScheme"}], ":", "\"\<BlueGreenYellow\>\""}]}], ",", 
     "\"\<TemperatureMap\>\"", ",", "\"\<SunsetColors\>\"", ",", 
     RowBox[{"etc", ".", 
      RowBox[{"-", 
       RowBox[{"FontSize", ":", 
        RowBox[{"12", " ", 
         RowBox[{"(", "default", ")"}]}]}]}]}], ",", 
     RowBox[{
      RowBox[{"or", " ", "any", " ", "integer"}], "-", 
      RowBox[{"ImageSize", ":", 
       RowBox[{"500", " ", 
        RowBox[{"(", "default", ")"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"or", " ", "any", " ", "integer"}], "-", 
      RowBox[{"ShowPercentages", ":", 
       RowBox[{
        RowBox[{"True", "/", "False"}], "-", "ShowCounts"}], ":", 
       RowBox[{"True", "/", "False"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Usage", " ", 
     RowBox[{"Examples", ":", 
      RowBox[{
      "1.", " ", "Enhanced", " ", "visualization", " ", "with", " ", "all", 
       " ", "features"}], ":", 
      RowBox[{
       RowBox[{
        RowBox[{"PlotConfusionMatrixEnhanced", "[", 
         RowBox[{
         "confusionResult", ",", "\"\<Quantum Model Performance\>\""}], "]"}],
         " ", "2.", " ", "Percentage"}], "-", 
       RowBox[{"only", " ", 
        RowBox[{"display", ":", 
         RowBox[{
          RowBox[{
           RowBox[{"PlotNormalizedConfusionMatrix", "[", 
            RowBox[{"confusionResult", ",", "\"\<Model Accuracy Rates\>\""}], 
            "]"}], " ", "3.", " ", "Counts"}], "-", 
          RowBox[{"only", " ", "display"}]}], ":", 
         RowBox[{
          RowBox[{"PlotCountsConfusionMatrix", "[", 
           RowBox[{"confusionResult", ",", "\"\<Prediction Counts\>\""}], 
           "]"}], " ", "4.", " ", "Compact", " ", "version", " ", "for", " ", 
          
          RowBox[{"papers", ":", 
           RowBox[{
            RowBox[{"PlotCompactConfusionMatrix", "[", 
             RowBox[{"confusionResult", ",", "\"\<Quantum vs Classical\>\""}],
              "]"}], " ", "5.", " ", "Compare", " ", "multiple", " ", 
            "models"}], ":", 
           RowBox[{
            RowBox[{"CompareConfusionMatrices", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "classicalResults", ",", "quantumResults1", ",", 
                "quantumResults2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Classical\>\"", ",", 
                "\"\<Quantum \[Theta]\:2081=\[Pi]/4\>\"", ",", 
                "\"\<Quantum \[Theta]\:2081=\[Pi]/2\>\""}], "}"}], ",", 
              "\"\<Model Performance Comparison\>\""}], "]"}], " ", "6.", " ",
             "Custom", " ", 
            RowBox[{"styling", ":", 
             RowBox[{"PlotConfusionMatrixEnhanced", "[", 
              RowBox[{"confusionResult", ",", "\"\<Custom Matrix\>\"", ",", 
               RowBox[{"ColorScheme", "->", "\"\<SunsetColors\>\""}], ",", 
               RowBox[{"FontSize", "->", "14"}], ",", 
               RowBox[{"ImageSize", "->", "600"}], ",", 
               RowBox[{"ShowPercentages", "->", "True"}], ",", 
               RowBox[{"ShowCounts", "->", "False"}]}], 
              "]"}]}]}]}]}]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"COMPARATIVE", " ", "ANALYSIS", " ", "FUNCTIONS"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Compare", " ", "confusion", " ", "matrices", " ", "from", " ", 
     "different", " ", 
     RowBox[{"models", "/", "parameters"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CompareConfusionMatrices", "[", 
      RowBox[{"dataList_", ",", "titleList_", ",", 
       RowBox[{"mainTitle_", ":", "\"\<Model Comparison\>\""}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"plots", ",", "accuracies", ",", "comparisonTable"}], "}"}], 
       ",", 
       RowBox[{"(*", 
        RowBox[{"Create", " ", "individual", " ", "plots"}], "*)"}], 
       RowBox[{
        RowBox[{"plots", "=", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"PlotCompactConfusionMatrix", "[", 
             RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"dataList", ",", "titleList"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Calculate", " ", "accuracies", " ", "for", " ", "comparison"}], 
         "*)"}], 
        RowBox[{"accuracies", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "confusionMatrix", ",", "allCategories", ",", "predictions", 
               ",", "groundtruths", ",", "totalCorrect", ",", "totalCases"}], 
              "}"}], ",", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"AssociationQ", "[", 
                  RowBox[{"dataList", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "]"}], "&&", 
                 RowBox[{"KeyExistsQ", "[", 
                  RowBox[{
                   RowBox[{"dataList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                   "\"\<ConfusionMatrix\>\""}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"confusionMatrix", "=", 
                  RowBox[{
                   RowBox[{"dataList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                   "\"\<ConfusionMatrix\>\"", "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"allCategories", "=", 
                  RowBox[{
                   RowBox[{"dataList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<Outcomes\>\"", 
                   "]"}]}], ";"}], ",", 
                RowBox[{
                 RowBox[{"predictions", "=", 
                  RowBox[{"Cases", "[", 
                   RowBox[{
                    RowBox[{"dataList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"r_", "/;", 
                    RowBox[{"KeyExistsQ", "[", 
                    RowBox[{"r", ",", "\"\<PredictedOutcome\>\""}], "]"}]}], ":>", 
                    RowBox[{"r", "[", "\"\<PredictedOutcome\>\"", "]"}]}]}], 
                   "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"groundtruths", "=", 
                  RowBox[{"Cases", "[", 
                   RowBox[{
                    RowBox[{"dataList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"r_", "/;", 
                    RowBox[{"KeyExistsQ", "[", 
                    RowBox[{"r", ",", "\"\<GroundtruthOutcome\>\""}], "]"}]}],
                     ":>", 
                    RowBox[{"r", "[", "\"\<GroundtruthOutcome\>\"", "]"}]}]}],
                    "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"allCategories", "=", 
                  RowBox[{"Union", "[", 
                   RowBox[{"predictions", ",", "groundtruths"}], "]"}]}], ";",
                  "\[IndentingNewLine]", 
                 RowBox[{"confusionMatrix", "=", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"Count", "[", 
                    RowBox[{
                    RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"groundtruths", ",", "predictions"}], "}"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"actual", ",", "predicted"}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"actual", ",", "allCategories"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"predicted", ",", "allCategories"}], "}"}]}], 
                   "]"}]}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"totalCorrect", "=", 
               RowBox[{"Sum", "[", 
                RowBox[{
                 RowBox[{"confusionMatrix", "[", 
                  RowBox[{"[", 
                   RowBox[{"j", ",", "j"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", 
                   RowBox[{"Length", "[", "allCategories", "]"}]}], "}"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"totalCases", "=", 
               RowBox[{"Total", "[", 
                RowBox[{"Flatten", "[", "confusionMatrix", "]"}], "]"}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"totalCases", ">", "0"}], ",", 
                RowBox[{"N", "[", 
                 RowBox[{
                  RowBox[{"totalCorrect", "/", "totalCases"}], ",", "4"}], 
                 "]"}], ",", "0"}], "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "dataList", "]"}]}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Create", " ", "comparison", " ", "table"}], "*)"}], 
        RowBox[{"comparisonTable", "=", 
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"Prepend", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"titleList", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{
                   RowBox[{"accuracies", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"4", ",", "3"}], "}"}]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"Length", "[", "titleList", "]"}]}], "}"}]}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Model\>\"", ",", "Bold"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Accuracy\>\"", ",", "Bold"}], "]"}]}], "}"}]}], 
            "]"}], ",", 
           RowBox[{"Frame", "->", "All"}], ",", 
           RowBox[{"Background", "->", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{"{", 
               RowBox[{"LightBlue", ",", "None"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Alignment", "->", 
            RowBox[{"{", 
             RowBox[{"Left", ",", "Center"}], "}"}]}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Layout", " ", "everything"}], "*)"}], 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"mainTitle", ",", "Bold", ",", "16"}], "]"}], ",", 
            RowBox[{"Spacer", "[", "10", "]"}], ",", "comparisonTable", ",", 
            RowBox[{"Spacer", "[", "15", "]"}], ",", 
            RowBox[{"Grid", "[", 
             RowBox[{
              RowBox[{"Partition", "[", 
               RowBox[{"plots", ",", "2", ",", "2", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}], ",", "\"\<\>\""}], "]"}], 
              ",", 
              RowBox[{"Spacings", "->", 
               RowBox[{"{", 
                RowBox[{"3", ",", "3"}], "}"}]}]}], "]"}]}], "}"}], ",", 
          RowBox[{"Alignment", "->", "Center"}]}], "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Create", " ", "a", " ", "comprehensive", " ", "metrics", " ", "table"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CreateMetricsTable", "[", "confusionMatrixResult_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"metrics", ",", "outcomes", ",", "tableData"}], "}"}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"confusionMatrixResult", "===", "$Failed"}], ",", 
          RowBox[{
           RowBox[{"Return", "[", 
            RowBox[{"Grid", "[", 
             RowBox[{"{", 
              RowBox[{"{", "\"\<Error: Failed to compute metrics\>\"", "}"}], 
              "}"}], "]"}], "]"}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"metrics", "=", 
         RowBox[{
         "confusionMatrixResult", "[", "\"\<AccuracyMetrics\>\"", "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"outcomes", "=", 
         RowBox[{"confusionMatrixResult", "[", "\"\<Outcomes\>\"", "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Prepare", " ", "table", " ", "data"}], "*)"}], 
        RowBox[{"tableData", "=", 
         RowBox[{"Prepend", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"outcome", ",", 
               RowBox[{
                RowBox[{"metrics", "[", "\"\<SupportByClass\>\"", "]"}], "[", 
                "outcome", "]"}], ",", 
               RowBox[{"NumberForm", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"metrics", "[", "\"\<PrecisionByClass\>\"", "]"}], 
                  "[", "outcome", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "3"}], "}"}]}], "]"}], ",", 
               RowBox[{"NumberForm", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"metrics", "[", "\"\<RecallByClass\>\"", "]"}], "[",
                   "outcome", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "3"}], "}"}]}], "]"}], ",", 
               RowBox[{"NumberForm", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"metrics", "[", "\"\<F1ScoreByClass\>\"", "]"}], 
                  "[", "outcome", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "3"}], "}"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"outcome", ",", "outcomes"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Outcome\>\"", ",", "\"\<Support\>\"", ",", 
             "\"\<Precision\>\"", ",", "\"\<Recall\>\"", ",", 
             "\"\<F1-Score\>\""}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Add", " ", "summary", " ", "rows"}], "*)"}], 
        RowBox[{"AppendTo", "[", 
         RowBox[{"tableData", ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\>\"", ",", "\"\<\>\"", ",", "\"\<\>\"", ",", "\"\<\>\"", 
            ",", "\"\<\>\""}], "}"}]}], "]"}], ";", 
        RowBox[{"(*", "Separator", "*)"}], 
        RowBox[{"AppendTo", "[", 
         RowBox[{"tableData", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Macro Avg\>\"", ",", "\"\<\>\"", ",", 
            RowBox[{"NumberForm", "[", 
             RowBox[{
              RowBox[{"metrics", "[", "\"\<MacroPrecision\>\"", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "3"}], "}"}]}], "]"}], ",", 
            RowBox[{"NumberForm", "[", 
             RowBox[{
              RowBox[{"metrics", "[", "\"\<MacroRecall\>\"", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "3"}], "}"}]}], "]"}], ",", 
            RowBox[{"NumberForm", "[", 
             RowBox[{
              RowBox[{"metrics", "[", "\"\<MacroF1\>\"", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "3"}], "}"}]}], "]"}]}], "}"}]}], "]"}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"tableData", ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Weighted Avg\>\"", ",", "\"\<\>\"", ",", "\"\<\>\"", ",", 
            "\"\<\>\"", ",", 
            RowBox[{"NumberForm", "[", 
             RowBox[{
              RowBox[{"metrics", "[", "\"\<WeightedF1\>\"", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "3"}], "}"}]}], "]"}]}], "}"}]}], "]"}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"tableData", ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Overall Accuracy\>\"", ",", "\"\<\>\"", ",", "\"\<\>\"", ",", 
            "\"\<\>\"", ",", 
            RowBox[{"NumberForm", "[", 
             RowBox[{
              RowBox[{"metrics", "[", "\"\<OverallAccuracy\>\"", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "3"}], "}"}]}], "]"}]}], "}"}]}], "]"}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Create", " ", "formatted", " ", "grid"}], "*)"}], 
        RowBox[{"Grid", "[", 
         RowBox[{"tableData", ",", 
          RowBox[{"Frame", "->", "All"}], ",", 
          RowBox[{"Background", "->", 
           RowBox[{"{", 
            RowBox[{"None", ",", 
             RowBox[{"{", 
              RowBox[{
              "LightGray", ",", "None", ",", "None", ",", "None", ",", "None",
                ",", "None", ",", "LightBlue", ",", "LightGreen", ",", 
               "LightGreen", ",", "LightYellow"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"Alignment", "->", 
           RowBox[{"{", 
            RowBox[{"Left", ",", "Center"}], "}"}]}], ",", 
          RowBox[{"Spacings", "->", 
           RowBox[{"{", 
            RowBox[{"2", ",", "1"}], "}"}]}]}], "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"COMPREHENSIVE", " ", "ANALYSIS", " ", "FUNCTION"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], 
    "*)"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"AnalyzeModelPerformance", "[", 
      RowBox[{"dataset_", ",", "theta1_", ",", "theta2_", ",", 
       RowBox[{"title_", ":", "\"\<Model Performance Analysis\>\""}]}], "]"}],
      ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "confusionResult", ",", "plot", ",", "metricsTable", ",", "summary"}],
         "}"}], ",", 
       RowBox[{
        RowBox[{
        "Print", "[", 
         "\"\<Computing confusion matrix and performance metrics...\>\"", 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Compute", " ", "confusion", " ", "matrix"}], "*)"}], 
        RowBox[{"confusionResult", "=", 
         RowBox[{"ComputeConfusionMatrix", "[", 
          RowBox[{"dataset", ",", "theta1", ",", "theta2", ",", "True"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"confusionResult", "===", "$Failed"}], ",", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<Error: Could not analyze model performance.\>\"", "]"}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"Return", "[", "$Failed", "]"}], ";"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Create", " ", "visualizations"}], "*)"}], 
        RowBox[{"plot", "=", 
         RowBox[{"PlotConfusionMatrix", "[", 
          RowBox[{"confusionResult", ",", "title"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"metricsTable", "=", 
         RowBox[{"CreateMetricsTable", "[", "confusionResult", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Print", " ", "summary"}], "*)"}], 
        RowBox[{"summary", "=", 
         RowBox[{"confusionResult", "[", "\"\<AccuracyMetrics\>\"", "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "\"\<\\n=== Performance Summary ===\>\"", "]"}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Overall Accuracy: \>\"", ",", 
          RowBox[{"NumberForm", "[", 
           RowBox[{
            RowBox[{"summary", "[", "\"\<OverallAccuracy\>\"", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "4"}], "}"}]}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Macro F1-Score: \>\"", ",", 
          RowBox[{"NumberForm", "[", 
           RowBox[{
            RowBox[{"summary", "[", "\"\<MacroF1\>\"", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "4"}], "}"}]}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Weighted F1-Score: \>\"", ",", 
          RowBox[{"NumberForm", "[", 
           RowBox[{
            RowBox[{"summary", "[", "\"\<WeightedF1\>\"", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "4"}], "}"}]}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Total Cases: \>\"", ",", 
          RowBox[{"confusionResult", "[", "\"\<TotalCases\>\"", "]"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Success Rate: \>\"", ",", 
          RowBox[{"NumberForm", "[", 
           RowBox[{
            RowBox[{"confusionResult", "[", "\"\<SuccessRate\>\"", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "4"}], "}"}]}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Theta1: \>\"", ",", 
          RowBox[{"NumberForm", "[", 
           RowBox[{"theta1", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "4"}], "}"}]}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Theta2: \>\"", ",", 
          RowBox[{"NumberForm", "[", 
           RowBox[{"theta2", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "4"}], "}"}]}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Display", " ", "results"}], "*)"}], 
        RowBox[{"Print", "[", "\"\<\\n=== Confusion Matrix ===\>\"", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "plot", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "\"\<\\n=== Detailed Metrics ===\>\"", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "metricsTable", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Return", " ", "results", " ", "for", " ", "further", " ", 
          "analysis"}], "*)"}], "confusionResult"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"COMPARISON", " ", "FUNCTIONS"}], "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CompareMultipleThetas", "[", 
      RowBox[{"dataset_", ",", "thetaPairs_", ",", 
       RowBox[{"labels_", ":", "Automatic"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "results", ",", "comparisonTable", ",", "accuracies", ",", "i"}], 
        "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "Compute", " ", "results", " ", "for", " ", "each", " ", "theta", " ",
          "pair"}], "*)"}], 
       RowBox[{
        RowBox[{"results", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<Computing results for theta pair \>\"", ",", "i", ",", 
              "\"\<: \>\"", ",", 
              RowBox[{"thetaPairs", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"ComputeConfusionMatrix", "[", 
             RowBox[{"dataset", ",", 
              RowBox[{"thetaPairs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"thetaPairs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", "False"}], 
             "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "thetaPairs", "]"}]}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Create", " ", "comparison", " ", "table"}], "*)"}], 
        RowBox[{"accuracies", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"results", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "=!=", "$Failed"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"results", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               "\"\<AccuracyMetrics\>\"", "]"}], "[", 
              "\"\<OverallAccuracy\>\"", "]"}], ",", "0"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Prepare", " ", "labels"}], "*)"}], 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"labels", "===", "Automatic"}], ",", 
          RowBox[{
           RowBox[{"labels", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"\"\<Config \>\"", "<>", 
               RowBox[{"ToString", "[", "i", "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"Length", "[", "thetaPairs", "]"}]}], "}"}]}], 
             "]"}]}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"comparisonTable", "=", 
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"Prepend", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"labels", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"\"\<(\>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"thetaPairs", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "<>", 
                  "\"\<, \>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"thetaPairs", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "<>", 
                  "\"\<)\>\""}], ",", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{
                   RowBox[{"accuracies", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "4"}], "}"}]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"Length", "[", "thetaPairs", "]"}]}], "}"}]}], "]"}],
              ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Configuration\>\"", ",", 
               "\"\<Thetas (\[Theta]\:2081, \[Theta]\:2082)\>\"", ",", 
               "\"\<Accuracy\>\""}], "}"}]}], "]"}], ",", 
           RowBox[{"Frame", "->", "All"}], ",", 
           RowBox[{"Background", "->", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{"{", 
               RowBox[{"LightGray", ",", "None"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Alignment", "->", 
            RowBox[{"{", 
             RowBox[{"Left", ",", "Center"}], "}"}]}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
        "Print", "[", "\"\<=== Theta Comparison Results ===\>\"", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "comparisonTable", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Return", " ", "detailed", " ", "results"}], "*)"}], 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<Results\>\"", "->", "results"}], ",", 
          RowBox[{"\"\<ThetaPairs\>\"", "->", "thetaPairs"}], ",", 
          RowBox[{"\"\<Accuracies\>\"", "->", "accuracies"}], ",", 
          RowBox[{"\"\<Labels\>\"", "->", "labels"}]}], "|>"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.958199167775234*^9, 3.958199175989634*^9}, 
   3.958199439196514*^9, {3.95819949025786*^9, 3.958199498867613*^9}, {
   3.95819958924078*^9, 3.9581995993134747`*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"5499313d-eeb6-4fca-ac22-a47768cc7599"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing", "Section",
 CellChangeTimes->{{3.901470103209635*^9, 3.901470108444337*^9}, {
  3.955156191541572*^9, 3.9551561935607967`*^9}, {3.955157397048046*^9, 
  3.9551573985583553`*^9}},ExpressionUUID->"b4583698-08d3-44b3-b5f7-\
5a9519a748d7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dataset", "=", 
    RowBox[{
    "LoadDataset", "[", 
     "\"\</Users/162191/Documents/GitHub/quantum_international_interaction_\
game/Norm_Form/balanced_data.csv\>\"", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.958188240937295*^9, 3.958188260692772*^9}, {
   3.9581934108655987`*^9, 3.958193426513609*^9}, {3.958200176238941*^9, 
   3.9582001779848146`*^9}, 3.958200400973689*^9},
 CellLabel->
  "In[152]:=",ExpressionUUID->"d9023ecc-3c5b-4414-8904-02b54722b819"],

Cell[CellGroupData[{

Cell[BoxData["dataPoint"], "Input",
 CellLabel->
  "In[153]:=",ExpressionUUID->"4ccda66a-d4ee-4210-9be7-7c84ce712a91"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Player1\"\>", "\[Rule]", "\<\"USA\"\>"}], ",", 
   RowBox[{"\<\"Player2\"\>", "\[Rule]", "\<\"ESP\"\>"}], ",", 
   RowBox[{"\<\"U1SQ\"\>", "\[Rule]", 
    RowBox[{"-", "0.238012`"}]}], ",", 
   RowBox[{"\<\"U1Acq1\"\>", "\[Rule]", 
    RowBox[{"-", "1.368436`"}]}], ",", 
   RowBox[{"\<\"U1Acq2\"\>", "\[Rule]", "1.025024`"}], ",", 
   RowBox[{"\<\"U1Nego\"\>", "\[Rule]", 
    RowBox[{"-", "1.101216`"}]}], ",", 
   RowBox[{"\<\"U1Cap1\"\>", "\[Rule]", 
    RowBox[{"-", "2.25679`"}]}], ",", 
   RowBox[{"\<\"U1Cap2\"\>", "\[Rule]", "1.051597`"}], ",", 
   RowBox[{"\<\"U1War1\"\>", "\[Rule]", 
    RowBox[{"-", "1.51882`"}]}], ",", 
   RowBox[{"\<\"U1War2\"\>", "\[Rule]", 
    RowBox[{"-", "1.962997`"}]}], ",", 
   RowBox[{"\<\"U2SQ\"\>", "\[Rule]", 
    RowBox[{"-", "0.575933`"}]}], ",", 
   RowBox[{"\<\"U2Acq2\"\>", "\[Rule]", 
    RowBox[{"-", "1.511569`"}]}], ",", 
   RowBox[{"\<\"U2Acq1\"\>", "\[Rule]", "0.627684`"}], ",", 
   RowBox[{"\<\"U2Nego\"\>", "\[Rule]", "0.591662`"}], ",", 
   RowBox[{"\<\"U2Cap2\"\>", "\[Rule]", 
    RowBox[{"-", "1.528407`"}]}], ",", 
   RowBox[{"\<\"U2Cap1\"\>", "\[Rule]", "0.861688`"}], ",", 
   RowBox[{"\<\"U2War2\"\>", "\[Rule]", "0.817247`"}], ",", 
   RowBox[{"\<\"U2War1\"\>", "\[Rule]", "0.808828`"}], ",", 
   RowBox[{"\<\"groundtruth\"\>", "\[Rule]", "\<\"Cap2\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.9581934480431833`*^9, 3.958193460559916*^9}, 
   3.9582001858639517`*^9, 3.9582003059379253`*^9, 3.958200405833087*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"cd469064-83be-4481-8af9-ab7db3075946"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"groundtruth", " ", "=", " ", 
  RowBox[{"dataPoint", "[", "\"\<groundtruth\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.958189931978198*^9, 3.9581899507250834`*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"a2a99823-f43c-4f5c-9f18-95f46319ca4d"],

Cell[BoxData["\<\"Cap2\"\>"], "Output",
 CellChangeTimes->{{3.9581934480497017`*^9, 3.958193462937531*^9}, 
   3.95820031015345*^9, 3.958200407583805*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"e7fd0c74-a39f-4972-9929-f6bcbd48fd54"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataPoint", "=", 
  RowBox[{"dataset", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.958188290234222*^9, 3.958188290236177*^9}, 
   3.9581883307720423`*^9, {3.958188619404222*^9, 3.9581886298573217`*^9}, {
   3.958188725193583*^9, 3.95818873417516*^9}, {3.958189804820797*^9, 
   3.958189807653363*^9}, 3.9582002185364*^9},
 CellLabel->
  "In[155]:=",ExpressionUUID->"b23aed60-4c76-4f4b-a996-8a9955eefec2"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Player1\"\>", "\[Rule]", "\<\"EST\"\>"}], ",", 
   RowBox[{"\<\"Player2\"\>", "\[Rule]", "\<\"GBR\"\>"}], ",", 
   RowBox[{"\<\"U1SQ\"\>", "\[Rule]", "0.294146`"}], ",", 
   RowBox[{"\<\"U1Acq1\"\>", "\[Rule]", 
    RowBox[{"-", "1.112666`"}]}], ",", 
   RowBox[{"\<\"U1Acq2\"\>", "\[Rule]", "1.49916`"}], ",", 
   RowBox[{"\<\"U1Nego\"\>", "\[Rule]", 
    RowBox[{"-", "0.458194`"}]}], ",", 
   RowBox[{"\<\"U1Cap1\"\>", "\[Rule]", 
    RowBox[{"-", "1.862086`"}]}], ",", 
   RowBox[{"\<\"U1Cap2\"\>", "\[Rule]", "1.425453`"}], ",", 
   RowBox[{"\<\"U1War1\"\>", "\[Rule]", 
    RowBox[{"-", "0.906611`"}]}], ",", 
   RowBox[{"\<\"U1War2\"\>", "\[Rule]", 
    RowBox[{"-", "1.281321`"}]}], ",", 
   RowBox[{"\<\"U2SQ\"\>", "\[Rule]", "0.16449`"}], ",", 
   RowBox[{"\<\"U2Acq2\"\>", "\[Rule]", 
    RowBox[{"-", "1.180503`"}]}], ",", 
   RowBox[{"\<\"U2Acq1\"\>", "\[Rule]", "1.401224`"}], ",", 
   RowBox[{"\<\"U2Nego\"\>", "\[Rule]", "0.293366`"}], ",", 
   RowBox[{"\<\"U2Cap2\"\>", "\[Rule]", 
    RowBox[{"-", "1.609618`"}]}], ",", 
   RowBox[{"\<\"U2Cap1\"\>", "\[Rule]", "1.2333`"}], ",", 
   RowBox[{"\<\"U2War2\"\>", "\[Rule]", 
    RowBox[{"-", "0.089115`"}]}], ",", 
   RowBox[{"\<\"U2War1\"\>", "\[Rule]", 
    RowBox[{"-", "0.303673`"}]}], ",", 
   RowBox[{"\<\"groundtruth\"\>", "\[Rule]", "\<\"SQ\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.958200219730649*^9, 3.958200313172604*^9, 
  3.958200409071046*^9},
 CellLabel->
  "Out[155]=",ExpressionUUID->"5cc59d3c-fc04-45d6-b682-19059ca15598"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"outcomes", " ", "=", " ", 
  RowBox[{"ComputeOutcomeProbabilities", "[", 
   RowBox[{"dataPoint", ",", "0", ",", "0"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.958189494092712*^9, 3.958189507063815*^9}, {
  3.958189652288293*^9, 3.958189658133504*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"769899d6-7fc5-494b-81a0-82d0e66a455c"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SQ\"\>", "\[Rule]", "0.12147026603862543`"}], ",", 
   RowBox[{"\<\"Acq1\"\>", "\[Rule]", "0.11287575770877552`"}], ",", 
   RowBox[{"\<\"Acq2\"\>", "\[Rule]", "0.12592664031355044`"}], ",", 
   RowBox[{"\<\"Nego\"\>", "\[Rule]", "0.16846906979689522`"}], ",", 
   RowBox[{"\<\"Cap1\"\>", "\[Rule]", "0.0002197548256188759`"}], ",", 
   RowBox[{"\<\"Cap2\"\>", "\[Rule]", "0.01993820003610969`"}], ",", 
   RowBox[{"\<\"War1\"\>", "\[Rule]", "0.2826312414835296`"}], ",", 
   RowBox[{"\<\"War2\"\>", "\[Rule]", "0.16846906979689522`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.958193448085182*^9, 3.9581934674013977`*^9}, 
   3.958200320262081*^9, 3.9582004115649357`*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"0abdb404-d5a2-402a-8246-9d31b7ecb476"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maxOutcome", "=", 
  RowBox[{"GetMaxProbabilityOutcome", "[", "outcomes", "]"}]}]], "Input",
 CellChangeTimes->{{3.9581897305161657`*^9, 3.958189735057067*^9}, 
   3.958189811868498*^9, {3.9581899659694843`*^9, 3.958189969689035*^9}, {
   3.958190061152467*^9, 3.958190064498*^9}, {3.95819029111479*^9, 
   3.958190314721403*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"d1b501a7-f246-4ca2-972d-8903f317114b"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"MaxProbability\"\>", "\[Rule]", "0.2826312414835296`"}], ",", 
   
   RowBox[{"\<\"Outcome\"\>", "\[Rule]", "\<\"War1\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.958193448090152*^9, 3.95819347136797*^9}},
 CellLabel->"Out[89]=",ExpressionUUID->"872bfaea-89d6-4b0a-8c39-458cbe0bbd0b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GetMaxProbabilityOutcome", "[", "outcomes", "]"}], "[", 
  "\"\<Outcome\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.958190405520362*^9, 3.958190408288278*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"2e447e9e-8388-4b2f-b7fb-dea27f89e1e9"],

Cell[BoxData["\<\"War1\"\>"], "Output",
 CellChangeTimes->{{3.95819344809938*^9, 3.958193474334779*^9}},
 CellLabel->"Out[90]=",ExpressionUUID->"d6d656a1-c587-41a4-b0b1-49806f8cd693"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CompareWithGroundtruth", "[", 
  RowBox[{"outcomes", ",", "groundtruth"}], "]"}]], "Input",
 CellChangeTimes->{{3.958190466974522*^9, 3.958190477463368*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"e4baea83-49b2-4372-a820-fc7214e0cfa2"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"PredictedOutcome\"\>", "\[Rule]", "\<\"War1\"\>"}], ",", 
   RowBox[{"\<\"GroundtruthOutcome\"\>", "\[Rule]", "\<\"SQ\"\>"}], ",", 
   RowBox[{"\<\"IsCorrect\"\>", "\[Rule]", "False"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.9581934481026907`*^9, 3.958193476178522*^9}},
 CellLabel->"Out[91]=",ExpressionUUID->"a06b7796-86c1-4fdb-a008-33d7130edcb4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\n", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
      "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"USAGE", " ", "EXAMPLES"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
      "===", "===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}],
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Example", " ", 
      RowBox[{"usage", ":", 
       RowBox[{"1.", " ", "Basic", " ", "optimization"}], ":", "result"}]}], 
     "=", 
     RowBox[{"FindOptimalThetas", "[", 
      RowBox[{
      "dataset", ",", "10", ",", "\"\<GridSearch\>\"", ",", "0", ",", 
       "True"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"2.", " ", "Random", " ", 
      RowBox[{"sampling", ":", "result"}]}], "=", 
     RowBox[{"FindOptimalThetas", "[", 
      RowBox[{
      "dataset", ",", "5", ",", "\"\<RandomSampling\>\"", ",", "200", ",", 
       "True"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"3.", " ", "Multi"}], "-", 
      RowBox[{"start", " ", 
       RowBox[{"approach", ":", "result"}]}]}], "=", 
     RowBox[{"FindOptimalThetasMultiStart", "[", 
      RowBox[{"dataset", ",", "10", ",", "8"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"4.", " ", "Comprehensive", " ", "search", " ", 
       RowBox[{"(", "recommended", ")"}]}], ":", "result"}], "=", 
     RowBox[{"ComprehensiveThetaSearch", "[", 
      RowBox[{"dataset", ",", "True"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"5.", " ", "Visualize", " ", 
     RowBox[{"results", ":", 
      RowBox[{"PlotThetaAccuracyHeatmap", "[", 
       RowBox[{"dataset", ",", "15"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"1.", " ", "Basic", " ", "confusion", " ", 
      RowBox[{"matrix", ":", "result"}]}], "=", 
     RowBox[{"ComputeConfusionMatrix", "[", 
      RowBox[{"dataset", ",", 
       RowBox[{"Pi", "/", "4"}], ",", 
       RowBox[{"Pi", "/", "3"}], ",", "True"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"2.", " ", "Comprehensive", " ", 
     RowBox[{"analysis", ":", 
      RowBox[{"AnalyzeModelPerformance", "[", 
       RowBox[{"dataset", ",", 
        RowBox[{"Pi", "/", "4"}], ",", 
        RowBox[{"Pi", "/", "3"}], ",", "\"\<Quantum Game Performance\>\""}], 
       "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"3.", " ", "Compare", " ", "multiple", " ", "theta", " ", 
      RowBox[{"configurations", ":", "thetaPairs"}]}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Pi", "/", "4"}], ",", 
         RowBox[{"Pi", "/", "4"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Pi", "/", "2"}], ",", 
         RowBox[{"Pi", "/", "3"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Pi", ",", 
         RowBox[{"Pi", "/", "2"}]}], "}"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"comparison", "=", 
     RowBox[{"CompareMultipleThetas", "[", 
      RowBox[{"dataset", ",", "thetaPairs"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"4.", " ", "Visualize", " ", "specific", " ", 
      RowBox[{"result", ":", "plot"}]}], "=", 
     RowBox[{"PlotConfusionMatrix", "[", 
      RowBox[{"result", ",", "\"\<My Confusion Matrix\>\""}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"table", "=", 
     RowBox[{"CreateMetricsTable", "[", "result", "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.958192623490447*^9, 3.9581926336400423`*^9}, 
   3.958192706254778*^9, {3.958192854936853*^9, 3.958193140768598*^9}, {
   3.958193228650131*^9, 3.95819324013575*^9}, {3.958193270591213*^9, 
   3.958193351881132*^9}, 3.9581933985004463`*^9, {3.958199183350782*^9, 
   3.958199195682415*^9}},ExpressionUUID->"56fecdf0-1797-40c8-8419-\
2e1d0c49c873"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"ComprehensiveThetaSearch", "[", 
    RowBox[{"dataset", ",", " ", "10", ",", " ", "True"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.95819264336369*^9, 3.958192674155884*^9}, {
  3.958193218778411*^9, 3.958193224149604*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"1bc6d937-e35a-45bc-b2d1-bbfa5f014d20"],

Cell[CellGroupData[{

Cell[BoxData["\<\"=== Comprehensive Theta Parameter Search ===\"\>"], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.9581934812503653`*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"83a3ad1b-b00f-4820-b6e4-ab8d4c3529bf"],

Cell[BoxData["\<\"\\n1. Running grid search...\"\>"], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.958193481251227*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"c9f1dab3-51cb-43dd-a051-48051a090c55"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"New best accuracy found: \"\>", "\[InvisibleSpace]", 
   "0.1848013816925734`", "\[InvisibleSpace]", "\<\" (\"\>", 
   "\[InvisibleSpace]", "107", 
   "\[InvisibleSpace]", "\<\" correct out of \"\>", "\[InvisibleSpace]", 
   "579", "\[InvisibleSpace]", "\<\") with thetas: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}]}],
  SequenceForm[
  "New best accuracy found: ", 0.1848013816925734, " (", 107, 
   " correct out of ", 579, ") with thetas: ", {0., 0.}],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.958193491990377*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"98149b4a-41a0-4b86-b8da-502c14aec8ba"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Progress: \"\>", "\[InvisibleSpace]", "5", 
   "\[InvisibleSpace]", "\<\"% complete\"\>"}],
  SequenceForm["Progress: ", 5, "% complete"],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.958193524110626*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"ad3cb61b-0d7f-4fc1-b75b-99dbc4a77428"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Progress: \"\>", "\[InvisibleSpace]", "10", 
   "\[InvisibleSpace]", "\<\"% complete\"\>"}],
  SequenceForm["Progress: ", 10, "% complete"],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.958193577927946*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"eafb18d3-e2a3-4e83-8fcb-b7226ebcf87c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Progress: \"\>", "\[InvisibleSpace]", "15", 
   "\[InvisibleSpace]", "\<\"% complete\"\>"}],
  SequenceForm["Progress: ", 15, "% complete"],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.9581936316286087`*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"ac78258f-f5f1-4bde-96d1-b204a8e78599"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Progress: \"\>", "\[InvisibleSpace]", "20", 
   "\[InvisibleSpace]", "\<\"% complete\"\>"}],
  SequenceForm["Progress: ", 20, "% complete"],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.95819368550585*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"96194b5a-409a-46e8-9a89-d9c3034a7a23"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Progress: \"\>", "\[InvisibleSpace]", "25", 
   "\[InvisibleSpace]", "\<\"% complete\"\>"}],
  SequenceForm["Progress: ", 25, "% complete"],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.9581937396188498`*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"3da9485b-0a27-4f36-a01a-e1c08ccb48ef"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Progress: \"\>", "\[InvisibleSpace]", "30", 
   "\[InvisibleSpace]", "\<\"% complete\"\>"}],
  SequenceForm["Progress: ", 30, "% complete"],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.958193794040382*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"7cddb4ea-1fab-4376-bdc6-fbe00ba9e7fd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Progress: \"\>", "\[InvisibleSpace]", "35", 
   "\[InvisibleSpace]", "\<\"% complete\"\>"}],
  SequenceForm["Progress: ", 35, "% complete"],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.9581938511287117`*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"b314de56-a1b2-462f-ac1d-58fe62e4b273"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Progress: \"\>", "\[InvisibleSpace]", "40", 
   "\[InvisibleSpace]", "\<\"% complete\"\>"}],
  SequenceForm["Progress: ", 40, "% complete"],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.9581939054292507`*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"75e0edeb-d8e3-4a7e-add0-d66f6fcef51c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Progress: \"\>", "\[InvisibleSpace]", "45", 
   "\[InvisibleSpace]", "\<\"% complete\"\>"}],
  SequenceForm["Progress: ", 45, "% complete"],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.958193958339563*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"947d7e83-f9c0-43d5-96da-7cf02d0140d1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Progress: \"\>", "\[InvisibleSpace]", "50", 
   "\[InvisibleSpace]", "\<\"% complete\"\>"}],
  SequenceForm["Progress: ", 50, "% complete"],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.958194012230463*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"b7dda55e-45e9-4281-a392-5c94e89688ae"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Progress: \"\>", "\[InvisibleSpace]", "55", 
   "\[InvisibleSpace]", "\<\"% complete\"\>"}],
  SequenceForm["Progress: ", 55, "% complete"],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.958194066725428*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"37a50331-c18d-4899-be12-2325c5a38035"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Progress: \"\>", "\[InvisibleSpace]", "60", 
   "\[InvisibleSpace]", "\<\"% complete\"\>"}],
  SequenceForm["Progress: ", 60, "% complete"],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.95819412049372*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"0d1ae536-16c2-4fd9-8447-5b3233c1a3bd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Progress: \"\>", "\[InvisibleSpace]", "65", 
   "\[InvisibleSpace]", "\<\"% complete\"\>"}],
  SequenceForm["Progress: ", 65, "% complete"],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.9581941740819187`*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"06776560-c029-4bf5-bc5e-3a0528ba1108"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Progress: \"\>", "\[InvisibleSpace]", "70", 
   "\[InvisibleSpace]", "\<\"% complete\"\>"}],
  SequenceForm["Progress: ", 70, "% complete"],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.958194227512789*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"5530c1e5-ca3f-4136-80de-ffacc8545f93"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Progress: \"\>", "\[InvisibleSpace]", "75", 
   "\[InvisibleSpace]", "\<\"% complete\"\>"}],
  SequenceForm["Progress: ", 75, "% complete"],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.958194280993548*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"feb784ff-a2bd-4ac8-bde7-33dde480ed5d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Progress: \"\>", "\[InvisibleSpace]", "80", 
   "\[InvisibleSpace]", "\<\"% complete\"\>"}],
  SequenceForm["Progress: ", 80, "% complete"],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.958194335843809*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"f9dc6ee1-dc87-431e-a7f8-1593c73fa8e5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Progress: \"\>", "\[InvisibleSpace]", "85", 
   "\[InvisibleSpace]", "\<\"% complete\"\>"}],
  SequenceForm["Progress: ", 85, "% complete"],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.958194390127192*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"532c739b-6edd-43f3-9406-5e2eba48469a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Progress: \"\>", "\[InvisibleSpace]", "90", 
   "\[InvisibleSpace]", "\<\"% complete\"\>"}],
  SequenceForm["Progress: ", 90, "% complete"],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.958194443507176*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"c0096503-7a7d-4d6a-b3c0-b3b3decb3528"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Progress: \"\>", "\[InvisibleSpace]", "95", 
   "\[InvisibleSpace]", "\<\"% complete\"\>"}],
  SequenceForm["Progress: ", 95, "% complete"],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.958194496841374*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"c5ff992a-1019-47b5-b67e-b42b1c3653b2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Progress: \"\>", "\[InvisibleSpace]", "100", 
   "\[InvisibleSpace]", "\<\"% complete\"\>"}],
  SequenceForm["Progress: ", 100, "% complete"],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.95819455045546*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"f576b5c9-4cff-495e-870d-b634a9b7850b"],

Cell[BoxData["\<\"\\n2. Running multi-start optimization...\"\>"], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.958194561401567*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"1f0e8cfe-279d-4b83-9938-f05245b7f505"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running multi-start optimization with \"\>", 
   "\[InvisibleSpace]", "5", "\[InvisibleSpace]", "\<\" starts...\"\>"}],
  SequenceForm["Running multi-start optimization with ", 5, " starts..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.95819456140247*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"a4d49e9c-c201-44fd-8da6-cfc80c182e98"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Starting optimization \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Starting optimization ", 1, " of ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.958194561402923*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"47045dd6-269a-4d1e-9ca6-d5684320bfd6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Starting optimization \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Starting optimization ", 2, " of ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.9581951086622963`*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"481e0fc9-11d8-439a-8141-c7540f4b1925"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Starting optimization \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Starting optimization ", 3, " of ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.958195650576869*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"ecc8e983-d76b-47e1-8796-d5c212dd559b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Starting optimization \"\>", "\[InvisibleSpace]", "4", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Starting optimization ", 4, " of ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.958196223893506*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"e72bb28d-2250-4354-b946-282f46360cfa"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Starting optimization \"\>", "\[InvisibleSpace]", "5", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Starting optimization ", 5, " of ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.958196799294783*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"acec11b2-6915-432f-8a5c-a506cd025b11"],

Cell[BoxData["\<\"Multi-start optimization complete.\"\>"], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.958197380229039*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"fab00a80-29d8-4c71-a782-f6fca13edecf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Best accuracy: \"\>", "\[InvisibleSpace]", 
   "0.18652849740932642`"}],
  SequenceForm["Best accuracy: ", 0.18652849740932642`],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.958197380231163*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"8b363084-f303-4c14-9453-d12e7b3a4f1e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Best thetas: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1.503934724485581`", ",", "3.9531665144766173`"}], "}"}]}],
  SequenceForm["Best thetas: ", {1.503934724485581, 3.9531665144766173`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.958197380231697*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"c040f7f2-d8dd-4cc1-ab77-0384ec853f3d"],

Cell[BoxData["\<\"\\n3. Running Nelder-Mead refinement...\"\>"], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.958197380233246*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"1a2ab51c-d960-47a7-9284-b47a248b2b9a"],

Cell[BoxData["\<\"Starting Nelder-Mead-like optimization...\"\>"], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.958197392115581*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"e321539e-d930-4247-9a15-0d0e090fba05"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Initial accuracy: \"\>", "\[InvisibleSpace]", 
   "0.18652849740932642`"}],
  SequenceForm["Initial accuracy: ", 0.18652849740932642`],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.958197392116561*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"2f04b3ff-e611-41a1-beb4-712768f9fc65"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Optimization complete after \"\>", "\[InvisibleSpace]", "15", 
   "\[InvisibleSpace]", "\<\" iterations.\"\>"}],
  SequenceForm["Optimization complete after ", 15, " iterations."],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.958198132419595*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"988d84ad-08f7-4dc2-a69e-d9453bcd1512"],

Cell[BoxData["\<\"\\n=== Final Results ===\"\>"], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.958198132427896*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"4c396bc9-029b-4604-b2b6-7f8540170f29"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Best method: \"\>", 
   "\[InvisibleSpace]", "\<\"RandomSampling\"\>"}],
  SequenceForm["Best method: ", "RandomSampling"],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.9581981324298067`*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"71b576d1-2769-4821-ba91-5436d7d8a6c2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Best accuracy: \"\>", "\[InvisibleSpace]", 
   "0.18652849740932642`"}],
  SequenceForm["Best accuracy: ", 0.18652849740932642`],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.958198132431315*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"bcb608bb-d31d-4983-a9c4-99556e6e1997"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Best thetas: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1.503934724485581`", ",", "3.9531665144766173`"}], "}"}]}],
  SequenceForm["Best thetas: ", {1.503934724485581, 3.9531665144766173`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.958193448117406*^9, 3.9581981324367743`*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"062709af-2cce-460f-8763-48f2653f8b01"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotThetaAccuracyHeatmap", "[", 
  RowBox[{"dataset", ",", " ", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.958198940838995*^9, 3.958198945537663*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"fd14d59f-4d18-4611-8463-943283ca30f0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Computing accuracy heatmap with grid size \"\>", 
   "\[InvisibleSpace]", "20", "\[InvisibleSpace]", "\<\"...\"\>"}],
  SequenceForm["Computing accuracy heatmap with grid size ", 20, "..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.958198945870852*^9},
 CellLabel->
  "During evaluation of \
In[101]:=",ExpressionUUID->"386066b4-7904-45ca-8b9c-e39ac50c5732"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.9581991638162622`*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"5940db57-36c8-4692-9fd2-decc5e3eb325"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"ComputeConfusionMatrix", "[", 
    RowBox[{"dataset", ",", "1.5039347", ",", "3.9531665", ",", "True"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9581992098130207`*^9, 3.9581992173558683`*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"82092d34-9a1c-49ec-9304-e4f577f3d4a1"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Computing predictions for \"\>", "\[InvisibleSpace]", "579", 
   "\[InvisibleSpace]", "\<\" cases...\"\>"}],
  SequenceForm["Computing predictions for ", 579, " cases..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.958199217837248*^9},
 CellLabel->
  "During evaluation of \
In[108]:=",ExpressionUUID->"e0cdfba1-ec9b-4f38-9a1d-e89855fb130a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Progress: \"\>", "\[InvisibleSpace]", "10", 
   "\[InvisibleSpace]", "\<\"% complete\"\>"}],
  SequenceForm["Progress: ", 10, "% complete"],
  Editable->False]], "Print",
 CellChangeTimes->{3.958199218955221*^9},
 CellLabel->
  "During evaluation of \
In[108]:=",ExpressionUUID->"b70fe0a5-9d2a-4aa5-ae5f-71e82f319785"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Progress: \"\>", "\[InvisibleSpace]", "20", 
   "\[InvisibleSpace]", "\<\"% complete\"\>"}],
  SequenceForm["Progress: ", 20, "% complete"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9581992200916033`*^9},
 CellLabel->
  "During evaluation of \
In[108]:=",ExpressionUUID->"f5727475-cb01-4c60-b98d-b9ff10f3482f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Progress: \"\>", "\[InvisibleSpace]", "30", 
   "\[InvisibleSpace]", "\<\"% complete\"\>"}],
  SequenceForm["Progress: ", 30, "% complete"],
  Editable->False]], "Print",
 CellChangeTimes->{3.958199221197155*^9},
 CellLabel->
  "During evaluation of \
In[108]:=",ExpressionUUID->"f718b0bb-a18a-49c3-9a8d-6881bb5f1dae"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Progress: \"\>", "\[InvisibleSpace]", "40", 
   "\[InvisibleSpace]", "\<\"% complete\"\>"}],
  SequenceForm["Progress: ", 40, "% complete"],
  Editable->False]], "Print",
 CellChangeTimes->{3.958199222324294*^9},
 CellLabel->
  "During evaluation of \
In[108]:=",ExpressionUUID->"26feb32b-40ca-4351-933e-49d1667d004b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Progress: \"\>", "\[InvisibleSpace]", "50", 
   "\[InvisibleSpace]", "\<\"% complete\"\>"}],
  SequenceForm["Progress: ", 50, "% complete"],
  Editable->False]], "Print",
 CellChangeTimes->{3.958199223451418*^9},
 CellLabel->
  "During evaluation of \
In[108]:=",ExpressionUUID->"f0f27f67-fd70-404e-a34e-37206abee2e3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Progress: \"\>", "\[InvisibleSpace]", "60", 
   "\[InvisibleSpace]", "\<\"% complete\"\>"}],
  SequenceForm["Progress: ", 60, "% complete"],
  Editable->False]], "Print",
 CellChangeTimes->{3.958199224548993*^9},
 CellLabel->
  "During evaluation of \
In[108]:=",ExpressionUUID->"51c99223-64b0-4ef9-ba9f-429076cec60c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Progress: \"\>", "\[InvisibleSpace]", "70", 
   "\[InvisibleSpace]", "\<\"% complete\"\>"}],
  SequenceForm["Progress: ", 70, "% complete"],
  Editable->False]], "Print",
 CellChangeTimes->{3.958199225660265*^9},
 CellLabel->
  "During evaluation of \
In[108]:=",ExpressionUUID->"9fded862-0895-4aeb-9c04-7eba6cd8d5db"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Progress: \"\>", "\[InvisibleSpace]", "80", 
   "\[InvisibleSpace]", "\<\"% complete\"\>"}],
  SequenceForm["Progress: ", 80, "% complete"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9581992267578077`*^9},
 CellLabel->
  "During evaluation of \
In[108]:=",ExpressionUUID->"9773a854-87b8-4171-b98e-ac6c30e5256c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Progress: \"\>", "\[InvisibleSpace]", "90", 
   "\[InvisibleSpace]", "\<\"% complete\"\>"}],
  SequenceForm["Progress: ", 90, "% complete"],
  Editable->False]], "Print",
 CellChangeTimes->{3.958199227875868*^9},
 CellLabel->
  "During evaluation of \
In[108]:=",ExpressionUUID->"b02d3dd9-9db6-484e-ba82-b4678f6e4775"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Successfully processed \"\>", "\[InvisibleSpace]", "579", 
   "\[InvisibleSpace]", "\<\" out of \"\>", "\[InvisibleSpace]", "579", 
   "\[InvisibleSpace]", "\<\" cases\"\>"}],
  SequenceForm["Successfully processed ", 579, " out of ", 579, " cases"],
  Editable->False]], "Print",
 CellChangeTimes->{3.958199228960917*^9},
 CellLabel->
  "During evaluation of \
In[108]:=",ExpressionUUID->"8c04dd38-5781-46b3-8388-73c8be89f324"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Unique outcomes found: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"Acq1\"\>", ",", "\<\"Acq2\"\>", ",", "\<\"Cap1\"\>", 
     ",", "\<\"Cap2\"\>", ",", "\<\"Nego\"\>", ",", "\<\"SQ\"\>", 
     ",", "\<\"War1\"\>", ",", "\<\"War2\"\>"}], "}"}]}],
  SequenceForm[
  "Unique outcomes found: ", {
   "Acq1", "Acq2", "Cap1", "Cap2", "Nego", "SQ", "War1", "War2"}],
  Editable->False]], "Print",
 CellChangeTimes->{3.95819922896179*^9},
 CellLabel->
  "During evaluation of \
In[108]:=",ExpressionUUID->"c415bf8c-4339-4efe-92cc-b072c2d2e851"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total valid predictions: \"\>", "\[InvisibleSpace]", "579"}],
  SequenceForm["Total valid predictions: ", 579],
  Editable->False]], "Print",
 CellChangeTimes->{3.9581992289622602`*^9},
 CellLabel->
  "During evaluation of \
In[108]:=",ExpressionUUID->"cc0dfdae-db19-4684-9284-d7dc52c052bf"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"plot", " ", "=", " ", 
   RowBox[{"PlotConfusionMatrixEnhanced", "[", "\[IndentingNewLine]", 
    RowBox[{
    "result", ",", "\[IndentingNewLine]", "\"\<Quantum Extended Form\>\"", 
     ",", "\[IndentingNewLine]", 
     RowBox[{"ColorScheme", "->", "\"\<TemperatureMap\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"FontSize", "->", "14"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ShowPercentages", "->", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ShowCounts", "->", "True"}]}], "]"}]}], "\n"}]], "Input",
 CellChangeTimes->{{3.9581992466234818`*^9, 3.958199270631853*^9}, {
  3.95819951211094*^9, 3.9581995222240143`*^9}, {3.958199876761804*^9, 
  3.958199934673524*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"246ca029-c9e3-4663-ad6f-11fb89ac73e8"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\"\<Confusion Matrix Analysis\>\"",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontSize->18,
      FontWeight->Bold,
      FontColor->RGBColor[0, 0, 1]]},
    {
     TemplateBox[{10},
      "Spacer1"]},
    {
     FrameBox[
      StyleBox["\"\<Overall Accuracy: 0.187 (108/579)\>\"",
       StripOnInput->False,
       LineColor->RGBColor[0.5, 0, 0.5],
       FrontFaceColor->RGBColor[0.5, 0, 0.5],
       BackFaceColor->RGBColor[0.5, 0, 0.5],
       GraphicsColor->RGBColor[0.5, 0, 0.5],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[0.5, 0, 0.5]],
      Background->RGBColor[1, 1, 0.85],
      FrameStyle->RGBColor[0.5, 0, 0.5],
      StripOnInput->False]},
    {
     TemplateBox[{15},
      "Spacer1"]},
    {
     TemplateBox[{"", 
       FormBox[
        FormBox[
         TemplateBox[{
           FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   StyleBox[
                    StyleBox[
                    "\"Accuracy Rate\"", StripOnInput -> False, FontSize -> 
                    12, FontWeight -> Bold], StripOnInput -> False, 
                    FontFamily -> "Arial", Background -> Automatic]}, {
                  "\[Placeholder]"}}, AutoDelete -> False, 
                 GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], StripOnInput -> False, LineIndent -> 0], 
             StripOnInput -> False, FontFamily -> "Arial", Background -> 
             Automatic], TraditionalForm]}, "BarLegend", 
          DisplayFunction -> (#& ), 
          InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"\"BlueGreenYellow\"", ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLabel", "\[Rule]", 
                 StyleBox[
                 "\"Accuracy Rate\"", Bold, 12, StripOnInput -> False]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", "500"}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
             "]"}]& )], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{15},
      "Spacer1"]},
    {
     GraphicsBox[{
       {Opacity[0], 
        PointBox[{{0.4266666666666667, 0.}, {8.416666666666666, 0.}}]}, {{}, 
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
         Thickness[Small]}], 
         {RGBColor[0.761959, 0.470832, 0.940597], EdgeForm[{Opacity[0.644], 
          Thickness[Small]}], 
          RectangleBox[{0.5833333333333334, 0.}, {1.4166666666666665, 0.},
           RoundingRadius->0]}, 
         {RGBColor[0.842163, 0.62107, 0.8495695714285715], EdgeForm[{Opacity[
          0.644], Thickness[Small]}], 
          RectangleBox[{1.5833333333333333, 0.}, {2.4166666666666665, 0.7474747474747475},
           
           RoundingRadius->0]}, 
         {RGBColor[
          0.9133704285714286, 0.7086834285714285, 0.6405378571428572], 
          EdgeForm[{Opacity[0.644], Thickness[Small]}], 
          RectangleBox[{2.583333333333333, 0.}, {3.416666666666666, 0.},
           RoundingRadius->0]}, 
         {RGBColor[
          0.9496274285714286, 0.8200274285714285, 0.5905707142857143], 
          EdgeForm[{Opacity[0.644], Thickness[Small]}], 
          RectangleBox[{3.5833333333333326, 0.}, {4.416666666666666, 0.},
           RoundingRadius->0]}, 
         {RGBColor[
          0.9581918571428572, 0.9248882857142857, 0.6055372857142857], 
          EdgeForm[{Opacity[0.644], Thickness[Small]}], 
          RectangleBox[{4.583333333333333, 0.}, {5.416666666666666, 0.},
           RoundingRadius->0]}, 
         {RGBColor[
          0.8992781428571429, 0.9456901428571428, 0.7131011428571428], 
          EdgeForm[{Opacity[0.644], Thickness[Small]}], 
          RectangleBox[{5.583333333333333, 0.}, {6.416666666666666, 0.0202020202020202},
           
           RoundingRadius->0]}, 
         {RGBColor[0.695512, 0.8505658571428572, 0.898783], EdgeForm[{Opacity[
          0.644], Thickness[Small]}], 
          RectangleBox[{6.583333333333333, 0.}, {7.416666666666666, 0.32323232323232326},
           
           RoundingRadius->0]}, 
         {RGBColor[0.431296, 0.709773, 0.927077], EdgeForm[{Opacity[0.644], 
          Thickness[Small]}], 
          RectangleBox[{7.583333333333333, 0.}, {8.416666666666666, 0.},
           RoundingRadius->0]}}, {}, {}}, {}, {InsetBox[
         RotationBox["\<\"Acq1\"\>",
          BoxRotation->0.7853981633974483], Offset[{0, -4}, {1., 0.}], 
         ImageScaled[{0.5, 1}]], InsetBox[
         TagBox[
          InterpretationBox[
           StyleBox["\<\"0\"\>",
            ShowStringCharacters->False],
           0,
           Editable->False],
          NumberForm[#, {3, 3}]& ], Offset[{0, 4}, {1., 0.}], 
         ImageScaled[{0.5, 0}]], InsetBox[
         RotationBox["\<\"Acq2\"\>",
          BoxRotation->0.7853981633974483], Offset[{0, -4}, {2., 0.}], 
         ImageScaled[{0.5, 1}]], InsetBox[
         TagBox[
          InterpretationBox[
           StyleBox["\<\"0.747\"\>",
            ShowStringCharacters->False],
           0.7474747474747474747`4.,
           AutoDelete->True],
          NumberForm[#, {3, 3}]& ], Offset[{0, 4}, {2., 0.7474747474747475}], 
         ImageScaled[{0.5, 0}]], InsetBox[
         RotationBox["\<\"Cap1\"\>",
          BoxRotation->0.7853981633974483], 
         Offset[{0, -4}, {2.9999999999999996, 0.}], ImageScaled[{0.5, 1}]], 
        InsetBox[
         TagBox[
          InterpretationBox[
           StyleBox["\<\"0\"\>",
            ShowStringCharacters->False],
           0,
           Editable->False],
          NumberForm[#, {3, 3}]& ], Offset[{0, 4}, {2.9999999999999996, 0.}], 
         ImageScaled[{0.5, 0}]], InsetBox[
         RotationBox["\<\"Cap2\"\>",
          BoxRotation->0.7853981633974483], 
         Offset[{0, -4}, {3.999999999999999, 0.}], ImageScaled[{0.5, 1}]], 
        InsetBox[
         TagBox[
          InterpretationBox[
           StyleBox["\<\"0\"\>",
            ShowStringCharacters->False],
           0,
           Editable->False],
          NumberForm[#, {3, 3}]& ], Offset[{0, 4}, {3.999999999999999, 0.}], 
         ImageScaled[{0.5, 0}]], InsetBox[
         RotationBox["\<\"Nego\"\>",
          BoxRotation->0.7853981633974483], Offset[{0, -4}, {5., 0.}], 
         ImageScaled[{0.5, 1}]], InsetBox[
         TagBox[
          InterpretationBox[
           StyleBox["\<\"0\"\>",
            ShowStringCharacters->False],
           0,
           Editable->False],
          NumberForm[#, {3, 3}]& ], Offset[{0, 4}, {5., 0.}], 
         ImageScaled[{0.5, 0}]], InsetBox[
         RotationBox["\<\"SQ\"\>",
          BoxRotation->0.7853981633974483], Offset[{0, -4}, {6., 0.}], 
         ImageScaled[{0.5, 1}]], InsetBox[
         TagBox[
          InterpretationBox[
           StyleBox["\<\"0.020\"\>",
            ShowStringCharacters->False],
           0.020202020202020202`4.,
           AutoDelete->True],
          NumberForm[#, {3, 3}]& ], Offset[{0, 4}, {6., 0.0202020202020202}], 
         ImageScaled[{0.5, 0}]], InsetBox[
         RotationBox["\<\"War1\"\>",
          BoxRotation->0.7853981633974483], Offset[{0, -4}, {7., 0.}], 
         ImageScaled[{0.5, 1}]], InsetBox[
         TagBox[
          InterpretationBox[
           StyleBox["\<\"0.323\"\>",
            ShowStringCharacters->False],
           0.3232323232323232323`4.,
           AutoDelete->True],
          NumberForm[#, {3, 3}]& ], Offset[{0, 4}, {7., 0.32323232323232326}],
          ImageScaled[{0.5, 0}]], InsetBox[
         RotationBox["\<\"War2\"\>",
          BoxRotation->0.7853981633974483], Offset[{0, -4}, {8., 0.}], 
         ImageScaled[{0.5, 1}]], InsetBox[
         TagBox[
          InterpretationBox[
           StyleBox["\<\"0\"\>",
            ShowStringCharacters->False],
           0,
           Editable->False],
          NumberForm[#, {3, 3}]& ], Offset[{0, 4}, {8., 0.}], 
         ImageScaled[{0.5, 0}]]}, {}, {}, 
       StyleBox[
        StyleBox[{
          {Thickness[Tiny], 
           LineBox[{{0.4266666666666667, 0.}, {8.576466666666665, 0.}}], 
           StyleBox[
            {Thickness[Tiny], InsetBox[
              TagBox[
               StyleBox["\<\"Outcome Category\"\>",
                StripOnInput->False,
                FontSize->12,
                FontWeight->Bold],
               HoldForm], Offset[{10., 0.}, {8.416666666666664, 0.}], NCache[
              ImageScaled[{0, Rational[1, 2]}], ImageScaled[{0, 0.5}]], 
              Automatic, {1, 0}]}, "GraphicsLabel",
            StripOnInput->False]}, 
          StyleBox[{
            {Thickness[Tiny], 
             LineBox[{{0.5833333333333334, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {0.5833333333333334, 
                0.}]}], 
             LineBox[{{8.416666666666664, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {8.416666666666664, 
                0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
            StyleBox[{}, "GraphicsLabel",
             StripOnInput->False]}, "GraphicsTicks",
           StripOnInput->False]},
         Antialiasing->False], "GraphicsAxes",
        StripOnInput->False]},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, True},
      AxesLabel->{
        FormBox[
         TagBox[
          StyleBox["\"Outcome Category\"", Bold, 12, StripOnInput -> False], 
          HoldForm], TraditionalForm], 
        FormBox[
         TagBox[
          StyleBox["\"Accuracy\"", Bold, 12, StripOnInput -> False], 
          HoldForm], TraditionalForm]},
      AxesOrigin->{0.4266666666666667, 0.},
      CoordinatesToolOptions:>{"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )},
      DisplayFunction->Identity,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, {0.2, 0.4, 0.6, 0.8, 1.}},
      GridLinesStyle->Directive[
        GrayLevel[0.5], 
        Dashing[{Small, Small}]],
      ImageSize->500,
      PlotLabel->FormBox[
        StyleBox["\"Accuracy by Class\"", Bold, 14, StripOnInput -> False], 
        TraditionalForm],
      PlotRange->{{All, All}, {0, 1}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{None, Automatic}]},
    {
     TemplateBox[{15},
      "Spacer1"]},
    {
     StyleBox["\"\<Detailed Breakdown\>\"",
      StripOnInput->False,
      FontSize->14,
      FontWeight->Bold]},
    {
     TagBox[GridBox[{
        {
         StyleBox["\"\<Category\>\"",
          StripOnInput->False,
          FontWeight->Bold], 
         StyleBox["\"\<Actual Count\>\"",
          StripOnInput->False,
          FontWeight->Bold], 
         StyleBox["\"\<Predicted Count\>\"",
          StripOnInput->False,
          FontWeight->Bold], 
         StyleBox["\"\<Correct\>\"",
          StripOnInput->False,
          FontWeight->Bold], 
         StyleBox["\"\<Accuracy\>\"",
          StripOnInput->False,
          FontWeight->Bold]},
        {
         StyleBox["\"\<Acq1\>\"",
          StripOnInput->False,
          FontWeight->Bold], "6", "10", "0", 
         TagBox[
          InterpretationBox[
           StyleBox["\<\"0\"\>",
            ShowStringCharacters->False],
           0,
           Editable->False],
          NumberForm[#, {4, 3}]& ]},
        {
         StyleBox["\"\<Acq2\>\"",
          StripOnInput->False,
          FontWeight->Bold], "99", "367", "74", 
         TagBox[
          InterpretationBox[
           StyleBox["\<\"0.747\"\>",
            ShowStringCharacters->False],
           0.7474747474747474747`4.,
           AutoDelete->True],
          NumberForm[#, {4, 3}]& ]},
        {
         StyleBox["\"\<Cap1\>\"",
          StripOnInput->False,
          FontWeight->Bold], "56", "0", "0", 
         TagBox[
          InterpretationBox[
           StyleBox["\<\"0\"\>",
            ShowStringCharacters->False],
           0,
           Editable->False],
          NumberForm[#, {4, 3}]& ]},
        {
         StyleBox["\"\<Cap2\>\"",
          StripOnInput->False,
          FontWeight->Bold], "99", "0", "0", 
         TagBox[
          InterpretationBox[
           StyleBox["\<\"0\"\>",
            ShowStringCharacters->False],
           0,
           Editable->False],
          NumberForm[#, {4, 3}]& ]},
        {
         StyleBox["\"\<Nego\>\"",
          StripOnInput->False,
          FontWeight->Bold], "99", "1", "0", 
         TagBox[
          InterpretationBox[
           StyleBox["\<\"0\"\>",
            ShowStringCharacters->False],
           0,
           Editable->False],
          NumberForm[#, {4, 3}]& ]},
        {
         StyleBox["\"\<SQ\>\"",
          StripOnInput->False,
          FontWeight->Bold], "99", "17", "2", 
         TagBox[
          InterpretationBox[
           StyleBox["\<\"0.020\"\>",
            ShowStringCharacters->False],
           0.020202020202020202`4.,
           AutoDelete->True],
          NumberForm[#, {4, 3}]& ]},
        {
         StyleBox["\"\<War1\>\"",
          StripOnInput->False,
          FontWeight->Bold], "99", "184", "32", 
         TagBox[
          InterpretationBox[
           StyleBox["\<\"0.323\"\>",
            ShowStringCharacters->False],
           0.3232323232323232323`4.,
           AutoDelete->True],
          NumberForm[#, {4, 3}]& ]},
        {
         StyleBox["\"\<War2\>\"",
          StripOnInput->False,
          FontWeight->Bold], "22", "0", "0", 
         TagBox[
          InterpretationBox[
           StyleBox["\<\"0\"\>",
            ShowStringCharacters->False],
           0,
           Editable->False],
          NumberForm[#, {4, 3}]& ]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
       GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
           RGBColor[0.87, 0.94, 1], None}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{1}}}],
      "Grid"]},
    {
     TemplateBox[{10},
      "Spacer1"]},
    {
     TagBox[GridBox[{
        {"\"\<Total Predictions:\>\"", "579"},
        {"\"\<Correct Predictions:\>\"", "108"},
        {"\"\<Error Rate:\>\"", 
         TagBox[
          InterpretationBox[
           StyleBox["\<\"0.813\"\>",
            ShowStringCharacters->False],
           0.8134715025906735751`4.639597151641946,
           AutoDelete->True],
          NumberForm[#, {4, 3}]& ]},
        {"\"\<Number of Classes:\>\"", "8"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}}],
  "Column"]], "Input",
 CellChangeTimes->{{3.9582001210408773`*^9, 
  3.958200122633212*^9}},ExpressionUUID->"9a525b04-013f-494f-8e35-\
65f235622237"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"table", "=", 
  RowBox[{"CreateMetricsTable", "[", "result", "]"}]}]], "Input",
 CellChangeTimes->{3.958199287275888*^9},
 CellLabel->
  "In[138]:=",ExpressionUUID->"80480de2-32e8-4714-8542-1d3f3087a247"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Outcome\"\>", "\<\"Support\"\>", "\<\"Precision\"\>", "\<\"Recall\"\
\>", "\<\"F1-Score\"\>"},
    {"\<\"Acq1\"\>", "6", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.000\"\>",
        ShowStringCharacters->False],
       0.,
       AutoDelete->True],
      NumberForm[#, {1, 3}]& ], 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.000\"\>",
        ShowStringCharacters->False],
       0.,
       AutoDelete->True],
      NumberForm[#, {1, 3}]& ], 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0\"\>",
        ShowStringCharacters->False],
       0,
       Editable->False],
      NumberForm[#, {1, 3}]& ]},
    {"\<\"Acq2\"\>", "99", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.200\"\>",
        ShowStringCharacters->False],
       0.2016348773841962,
       AutoDelete->True],
      NumberForm[#, {1, 3}]& ], 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.700\"\>",
        ShowStringCharacters->False],
       0.7474747474747475,
       AutoDelete->True],
      NumberForm[#, {1, 3}]& ], 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.300\"\>",
        ShowStringCharacters->False],
       0.31759656652360524`,
       AutoDelete->True],
      NumberForm[#, {1, 3}]& ]},
    {"\<\"Cap1\"\>", "56", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0\"\>",
        ShowStringCharacters->False],
       0,
       Editable->False],
      NumberForm[#, {1, 3}]& ], 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.000\"\>",
        ShowStringCharacters->False],
       0.,
       AutoDelete->True],
      NumberForm[#, {1, 3}]& ], 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0\"\>",
        ShowStringCharacters->False],
       0,
       Editable->False],
      NumberForm[#, {1, 3}]& ]},
    {"\<\"Cap2\"\>", "99", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0\"\>",
        ShowStringCharacters->False],
       0,
       Editable->False],
      NumberForm[#, {1, 3}]& ], 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.000\"\>",
        ShowStringCharacters->False],
       0.,
       AutoDelete->True],
      NumberForm[#, {1, 3}]& ], 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0\"\>",
        ShowStringCharacters->False],
       0,
       Editable->False],
      NumberForm[#, {1, 3}]& ]},
    {"\<\"Nego\"\>", "99", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.000\"\>",
        ShowStringCharacters->False],
       0.,
       AutoDelete->True],
      NumberForm[#, {1, 3}]& ], 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.000\"\>",
        ShowStringCharacters->False],
       0.,
       AutoDelete->True],
      NumberForm[#, {1, 3}]& ], 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0\"\>",
        ShowStringCharacters->False],
       0,
       Editable->False],
      NumberForm[#, {1, 3}]& ]},
    {"\<\"SQ\"\>", "99", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.100\"\>",
        ShowStringCharacters->False],
       0.11764705882352941`,
       AutoDelete->True],
      NumberForm[#, {1, 3}]& ], 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.020\"\>",
        ShowStringCharacters->False],
       0.020202020202020204`,
       AutoDelete->True],
      NumberForm[#, {1, 3}]& ], 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.030\"\>",
        ShowStringCharacters->False],
       0.03448275862068966,
       AutoDelete->True],
      NumberForm[#, {1, 3}]& ]},
    {"\<\"War1\"\>", "99", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.200\"\>",
        ShowStringCharacters->False],
       0.17391304347826086`,
       AutoDelete->True],
      NumberForm[#, {1, 3}]& ], 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.300\"\>",
        ShowStringCharacters->False],
       0.32323232323232326`,
       AutoDelete->True],
      NumberForm[#, {1, 3}]& ], 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.200\"\>",
        ShowStringCharacters->False],
       0.22614840989399296`,
       AutoDelete->True],
      NumberForm[#, {1, 3}]& ]},
    {"\<\"War2\"\>", "22", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0\"\>",
        ShowStringCharacters->False],
       0,
       Editable->False],
      NumberForm[#, {1, 3}]& ], 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.000\"\>",
        ShowStringCharacters->False],
       0.,
       AutoDelete->True],
      NumberForm[#, {1, 3}]& ], 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0\"\>",
        ShowStringCharacters->False],
       0,
       Editable->False],
      NumberForm[#, {1, 3}]& ]},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"Macro Avg\"\>", "\<\"\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.060\"\>",
        ShowStringCharacters->False],
       0.06164937246074831,
       AutoDelete->True],
      NumberForm[#, {1, 3}]& ], 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.100\"\>",
        ShowStringCharacters->False],
       0.13636363636363638`,
       AutoDelete->True],
      NumberForm[#, {1, 3}]& ], 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.070\"\>",
        ShowStringCharacters->False],
       0.07227846687978598,
       AutoDelete->True],
      NumberForm[#, {1, 3}]& ]},
    {"\<\"Weighted Avg\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.100\"\>",
        ShowStringCharacters->False],
       0.09886795469566578,
       AutoDelete->True],
      NumberForm[#, {1, 3}]& ]},
    {"\<\"Overall Accuracy\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.200\"\>",
        ShowStringCharacters->False],
       0.18652849740932642`,
       AutoDelete->True],
      NumberForm[#, {1, 3}]& ]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
       GrayLevel[0.85], None, None, None, None, None, 
       RGBColor[0.87, 0.94, 1], 
       RGBColor[0.88, 1, 0.88], 
       RGBColor[0.88, 1, 0.88], 
       RGBColor[1, 1, 0.85]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{1}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.958199288088656*^9, 3.958199651093875*^9},
 CellLabel->
  "Out[138]=",ExpressionUUID->"98ad2c50-a411-41f4-8f72-55e65ba77328"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1512, 868},
WindowMargins->{{12, Automatic}, {Automatic, 25}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"14.1 for Mac OS X ARM (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"a2c3702a-6b3a-4abc-9b4a-e14301e966bc"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 198, 3, 96, "Title",ExpressionUUID->"c1042fb1-f1b4-4593-a5ef-dd40d4a27210"],
Cell[CellGroupData[{
Cell[803, 29, 248, 4, 66, "Section",ExpressionUUID->"ec665f0e-1b94-4c88-9520-0f4d058ed250"],
Cell[1054, 35, 102658, 1691, 306, "Text",ExpressionUUID->"3d93a3b2-b86f-411f-a986-336e290898c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103749, 1731, 212, 4, 66, "Section",ExpressionUUID->"2d3ff3af-0288-4927-8511-099d6a64dad8"],
Cell[103964, 1737, 365, 9, 49, "Input",ExpressionUUID->"094e438c-9bb7-48db-9295-504a304b77f8"],
Cell[104332, 1748, 478, 13, 70, "Input",ExpressionUUID->"2a014ea7-c817-42c3-bb09-bb373bd68896"],
Cell[CellGroupData[{
Cell[104835, 1765, 244, 4, 53, "Subsection",ExpressionUUID->"849feb04-1f25-41f7-a0ef-15c53a1954bf"],
Cell[105082, 1771, 32764, 824, 3379, "Input",ExpressionUUID->"c74e8bd7-1efb-4f9e-b90a-f07b7ef4ae89"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[137895, 2601, 261, 4, 66, "Section",ExpressionUUID->"8518bbc6-c84a-478b-a867-1e0890cede0a"],
Cell[CellGroupData[{
Cell[138181, 2609, 319, 6, 53, "Subsection",ExpressionUUID->"7f93c15f-3b32-40e2-a8ed-70ee6168f797"],
Cell[138503, 2617, 26814, 686, 2214, "Input",ExpressionUUID->"007b737d-0ce1-482a-a193-e472759dea0b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165354, 3308, 330, 5, 53, "Subsection",ExpressionUUID->"b38c288b-c0c0-4ebd-bf03-12d9bca120f8"],
Cell[165687, 3315, 32549, 700, 2480, "Input",ExpressionUUID->"2d911716-9dc2-4aac-bb14-737c96342f7e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[198285, 4021, 205, 4, 66, "Section",ExpressionUUID->"3b3fdcbd-9744-43c9-9a25-9207c002d31c"],
Cell[198493, 4027, 2094, 56, 70, "Input",ExpressionUUID->"e7b38313-d608-4ef9-881d-e4801613b3f4"],
Cell[200590, 4085, 895, 23, 131, "Input",ExpressionUUID->"fd893a7d-0f42-40a0-9fad-400475895b01"],
Cell[201488, 4110, 10570, 221, 1111, "Input",ExpressionUUID->"da52d233-4936-4812-bb1a-80dfe6016f6a"],
Cell[212061, 4333, 3982, 99, 111, "Input",ExpressionUUID->"fd084cc0-e500-47c7-bfe0-b712e165d9b4"],
Cell[216046, 4434, 1451, 36, 131, "Input",ExpressionUUID->"37060cb3-84b8-44d9-b98a-5e96a9c344a9"],
Cell[217500, 4472, 1647, 41, 131, "Input",ExpressionUUID->"b0c03dd3-7d7a-4441-8a85-b77dd84b6725"],
Cell[219150, 4515, 3222, 74, 233, "Input",ExpressionUUID->"e276e700-71d7-41ec-9adf-5604169f0560"],
Cell[222375, 4591, 45951, 1042, 4441, "Input",ExpressionUUID->"7c78365d-eebe-4380-8eed-24e3eb6a4880"],
Cell[268329, 5635, 117827, 2747, 5687, "Input",ExpressionUUID->"5499313d-eeb6-4fca-ac22-a47768cc7599"]
}, Open  ]],
Cell[CellGroupData[{
Cell[386193, 8387, 251, 4, 66, "Section",ExpressionUUID->"b4583698-08d3-44b3-b5f7-5a9519a748d7"],
Cell[386447, 8393, 545, 13, 49, "Input",ExpressionUUID->"d9023ecc-3c5b-4414-8904-02b54722b819"],
Cell[CellGroupData[{
Cell[387017, 8410, 118, 2, 29, "Input",ExpressionUUID->"4ccda66a-d4ee-4210-9be7-7c84ce712a91"],
Cell[387138, 8414, 1663, 35, 53, "Output",ExpressionUUID->"cd469064-83be-4481-8af9-ab7db3075946"]
}, Open  ]],
Cell[CellGroupData[{
Cell[388838, 8454, 274, 5, 29, "Input",ExpressionUUID->"a2a99823-f43c-4f5c-9f18-95f46319ca4d"],
Cell[389115, 8461, 237, 4, 33, "Output",ExpressionUUID->"e7fd0c74-a39f-4972-9929-f6bcbd48fd54"]
}, Open  ]],
Cell[CellGroupData[{
Cell[389389, 8470, 459, 9, 29, "Input",ExpressionUUID->"b23aed60-4c76-4f4b-a996-8a9955eefec2"],
Cell[389851, 8481, 1606, 35, 53, "Output",ExpressionUUID->"5cc59d3c-fc04-45d6-b682-19059ca15598"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391494, 8521, 360, 7, 29, "Input",ExpressionUUID->"769899d6-7fc5-494b-81a0-82d0e66a455c"],
Cell[391857, 8530, 851, 15, 52, "Output",ExpressionUUID->"0abdb404-d5a2-402a-8246-9d31b7ecb476"]
}, Open  ]],
Cell[CellGroupData[{
Cell[392745, 8550, 433, 7, 29, "Input",ExpressionUUID->"d1b501a7-f246-4ca2-972d-8903f317114b"],
Cell[393181, 8559, 383, 8, 33, "Output",ExpressionUUID->"872bfaea-89d6-4b0a-8c39-458cbe0bbd0b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[393601, 8572, 274, 5, 29, "Input",ExpressionUUID->"2e447e9e-8388-4b2f-b7fb-dea27f89e1e9"],
Cell[393878, 8579, 183, 2, 33, "Output",ExpressionUUID->"d6d656a1-c587-41a4-b0b1-49806f8cd693"]
}, Open  ]],
Cell[CellGroupData[{
Cell[394098, 8586, 260, 4, 29, "Input",ExpressionUUID->"e4baea83-49b2-4372-a820-fc7214e0cfa2"],
Cell[394361, 8592, 446, 8, 33, "Output",ExpressionUUID->"a06b7796-86c1-4fdb-a008-33d7130edcb4"]
}, Open  ]],
Cell[394822, 8603, 4324, 105, 397, "Input",ExpressionUUID->"56fecdf0-1797-40c8-8419-2e1d0c49c873"],
Cell[CellGroupData[{
Cell[399171, 8712, 375, 8, 29, "Input",ExpressionUUID->"1bc6d937-e35a-45bc-b2d1-bbfa5f014d20"],
Cell[CellGroupData[{
Cell[399571, 8724, 249, 4, 23, "Print",ExpressionUUID->"83a3ad1b-b00f-4820-b6e4-ab8d4c3529bf"],
Cell[399823, 8730, 231, 4, 41, "Print",ExpressionUUID->"c9f1dab3-51cb-43dd-a051-48051a090c55"],
Cell[400057, 8736, 745, 16, 23, "Print",ExpressionUUID->"98149b4a-41a0-4b86-b8da-502c14aec8ba"],
Cell[400805, 8754, 386, 9, 23, "Print",ExpressionUUID->"ad3cb61b-0d7f-4fc1-b75b-99dbc4a77428"],
Cell[401194, 8765, 388, 9, 23, "Print",ExpressionUUID->"eafb18d3-e2a3-4e83-8fcb-b7226ebcf87c"],
Cell[401585, 8776, 390, 9, 23, "Print",ExpressionUUID->"ac78258f-f5f1-4bde-96d1-b204a8e78599"],
Cell[401978, 8787, 387, 9, 23, "Print",ExpressionUUID->"96194b5a-409a-46e8-9a89-d9c3034a7a23"],
Cell[402368, 8798, 390, 9, 23, "Print",ExpressionUUID->"3da9485b-0a27-4f36-a01a-e1c08ccb48ef"],
Cell[402761, 8809, 388, 9, 23, "Print",ExpressionUUID->"7cddb4ea-1fab-4376-bdc6-fbe00ba9e7fd"],
Cell[403152, 8820, 390, 9, 23, "Print",ExpressionUUID->"b314de56-a1b2-462f-ac1d-58fe62e4b273"],
Cell[403545, 8831, 390, 9, 23, "Print",ExpressionUUID->"75e0edeb-d8e3-4a7e-add0-d66f6fcef51c"],
Cell[403938, 8842, 388, 9, 23, "Print",ExpressionUUID->"947d7e83-f9c0-43d5-96da-7cf02d0140d1"],
Cell[404329, 8853, 388, 9, 23, "Print",ExpressionUUID->"b7dda55e-45e9-4281-a392-5c94e89688ae"],
Cell[404720, 8864, 388, 9, 23, "Print",ExpressionUUID->"37a50331-c18d-4899-be12-2325c5a38035"],
Cell[405111, 8875, 387, 9, 23, "Print",ExpressionUUID->"0d1ae536-16c2-4fd9-8447-5b3233c1a3bd"],
Cell[405501, 8886, 390, 9, 23, "Print",ExpressionUUID->"06776560-c029-4bf5-bc5e-3a0528ba1108"],
Cell[405894, 8897, 388, 9, 23, "Print",ExpressionUUID->"5530c1e5-ca3f-4136-80de-ffacc8545f93"],
Cell[406285, 8908, 388, 9, 23, "Print",ExpressionUUID->"feb784ff-a2bd-4ac8-bde7-33dde480ed5d"],
Cell[406676, 8919, 388, 9, 23, "Print",ExpressionUUID->"f9dc6ee1-dc87-431e-a7f8-1593c73fa8e5"],
Cell[407067, 8930, 388, 9, 23, "Print",ExpressionUUID->"532c739b-6edd-43f3-9406-5e2eba48469a"],
Cell[407458, 8941, 388, 9, 23, "Print",ExpressionUUID->"c0096503-7a7d-4d6a-b3c0-b3b3decb3528"],
Cell[407849, 8952, 388, 9, 23, "Print",ExpressionUUID->"c5ff992a-1019-47b5-b67e-b42b1c3653b2"],
Cell[408240, 8963, 389, 9, 23, "Print",ExpressionUUID->"f576b5c9-4cff-495e-870d-b634a9b7850b"],
Cell[408632, 8974, 244, 4, 41, "Print",ExpressionUUID->"1f0e8cfe-279d-4b83-9938-f05245b7f505"],
Cell[408879, 8980, 441, 9, 23, "Print",ExpressionUUID->"a4d49e9c-c201-44fd-8da6-cfc80c182e98"],
Cell[409323, 8991, 427, 9, 23, "Print",ExpressionUUID->"47045dd6-269a-4d1e-9ca6-d5684320bfd6"],
Cell[409753, 9002, 429, 9, 23, "Print",ExpressionUUID->"481e0fc9-11d8-439a-8141-c7540f4b1925"],
Cell[410185, 9013, 427, 9, 23, "Print",ExpressionUUID->"ecc8e983-d76b-47e1-8796-d5c212dd559b"],
Cell[410615, 9024, 427, 9, 23, "Print",ExpressionUUID->"e72bb28d-2250-4354-b946-282f46360cfa"],
Cell[411045, 9035, 427, 9, 23, "Print",ExpressionUUID->"acec11b2-6915-432f-8a5c-a506cd025b11"],
Cell[411475, 9046, 237, 4, 23, "Print",ExpressionUUID->"fab00a80-29d8-4c71-a782-f6fca13edecf"],
Cell[411715, 9052, 377, 9, 23, "Print",ExpressionUUID->"8b363084-f303-4c14-9453-d12e7b3a4f1e"],
Cell[412095, 9063, 454, 10, 23, "Print",ExpressionUUID->"c040f7f2-d8dd-4cc1-ab77-0384ec853f3d"],
Cell[412552, 9075, 242, 4, 41, "Print",ExpressionUUID->"1a2ab51c-d960-47a7-9284-b47a248b2b9a"],
Cell[412797, 9081, 244, 4, 23, "Print",ExpressionUUID->"e321539e-d930-4247-9a15-0d0e090fba05"],
Cell[413044, 9087, 383, 9, 23, "Print",ExpressionUUID->"2f04b3ff-e611-41a1-beb4-712768f9fc65"],
Cell[413430, 9098, 428, 9, 23, "Print",ExpressionUUID->"988d84ad-08f7-4dc2-a69e-d9453bcd1512"],
Cell[413861, 9109, 227, 4, 41, "Print",ExpressionUUID->"4c396bc9-029b-4604-b2b6-7f8540170f29"],
Cell[414091, 9115, 373, 9, 23, "Print",ExpressionUUID->"71b576d1-2769-4821-ba91-5436d7d8a6c2"],
Cell[414467, 9126, 377, 9, 23, "Print",ExpressionUUID->"bcb608bb-d31d-4983-a9c4-99556e6e1997"],
Cell[414847, 9137, 456, 10, 23, "Print",ExpressionUUID->"062709af-2cce-460f-8763-48f2653f8b01"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[415352, 9153, 261, 5, 29, "Input",ExpressionUUID->"fd14d59f-4d18-4611-8463-943283ca30f0"],
Cell[415616, 9160, 417, 9, 23, "Print",ExpressionUUID->"386066b4-7904-45ca-8b9c-e39ac50c5732"],
Cell[416036, 9171, 162, 3, 33, "Output",ExpressionUUID->"5940db57-36c8-4692-9fd2-decc5e3eb325"]
}, Open  ]],
Cell[CellGroupData[{
Cell[416235, 9179, 350, 8, 29, "Input",ExpressionUUID->"82092d34-9a1c-49ec-9304-e4f577f3d4a1"],
Cell[CellGroupData[{
Cell[416610, 9191, 399, 9, 23, "Print",ExpressionUUID->"e0cdfba1-ec9b-4f38-9a1d-e89855fb130a"],
Cell[417012, 9202, 367, 9, 23, "Print",ExpressionUUID->"b70fe0a5-9d2a-4aa5-ae5f-71e82f319785"],
Cell[417382, 9213, 369, 9, 23, "Print",ExpressionUUID->"f5727475-cb01-4c60-b98d-b9ff10f3482f"],
Cell[417754, 9224, 367, 9, 23, "Print",ExpressionUUID->"f718b0bb-a18a-49c3-9a8d-6881bb5f1dae"],
Cell[418124, 9235, 367, 9, 23, "Print",ExpressionUUID->"26feb32b-40ca-4351-933e-49d1667d004b"],
Cell[418494, 9246, 367, 9, 23, "Print",ExpressionUUID->"f0f27f67-fd70-404e-a34e-37206abee2e3"],
Cell[418864, 9257, 367, 9, 23, "Print",ExpressionUUID->"51c99223-64b0-4ef9-ba9f-429076cec60c"],
Cell[419234, 9268, 367, 9, 23, "Print",ExpressionUUID->"9fded862-0895-4aeb-9c04-7eba6cd8d5db"],
Cell[419604, 9279, 369, 9, 23, "Print",ExpressionUUID->"9773a854-87b8-4171-b98e-ac6c30e5256c"],
Cell[419976, 9290, 367, 9, 23, "Print",ExpressionUUID->"b02d3dd9-9db6-484e-ba82-b4678f6e4775"],
Cell[420346, 9301, 477, 10, 23, "Print",ExpressionUUID->"8c04dd38-5781-46b3-8388-73c8be89f324"],
Cell[420826, 9313, 604, 14, 23, "Print",ExpressionUUID->"c415bf8c-4339-4efe-92cc-b072c2d2e851"],
Cell[421433, 9329, 340, 8, 23, "Print",ExpressionUUID->"cc0dfdae-db19-4684-9284-d7dc52c052bf"]
}, Open  ]]
}, Open  ]],
Cell[421800, 9341, 815, 16, 172, "Input",ExpressionUUID->"246ca029-c9e3-4663-ad6f-11fb89ac73e8"],
Cell[422618, 9359, 17242, 452, 1024, "Input",ExpressionUUID->"9a525b04-013f-494f-8e35-65f235622237"],
Cell[CellGroupData[{
Cell[439885, 9815, 228, 5, 29, "Input",ExpressionUUID->"80480de2-32e8-4714-8542-1d3f3087a247"],
Cell[440116, 9822, 6690, 234, 342, "Output",ExpressionUUID->"98ad2c50-a411-41f4-8f72-55e65ba77328"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

